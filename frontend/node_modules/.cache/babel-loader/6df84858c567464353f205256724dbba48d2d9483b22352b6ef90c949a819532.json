{"ast":null,"code":"import _objectSpread from\"C:/Users/kapoo/OneDrive/Desktop/Gods Health AI/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useMemo}from'react';import{useParams,Link}from'react-router-dom';import{motion}from'framer-motion';import axios from'axios';import{buildApiUrl,API_ENDPOINTS,isStaticMode}from'../config/api.js';import{ArrowLeft,Heart,Brain,Activity,Stethoscope,TrendingUp,Zap,Clock,AlertTriangle,CheckCircle,Info,Loader,Download,Share2,HelpCircle,ChevronDown,User,Calendar,Droplets,Thermometer,Scale,FileText,BarChart3}from'lucide-react';// Recharts components removed - using simpler card-based design\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PredictorDetail=()=>{var _predictor$fields3,_predictor$fields4,_predictor$fields5,_predictor$fields6,_predictor$fields7,_predictor$fields8,_predictor$fields9,_result$risk_factors,_result$recommendatio,_result$detailed_anal,_result$detailed_anal2,_result$detailed_anal3,_result$detailed_anal4;const{predictorId}=useParams();const[predictor,setPredictor]=useState(null);const[formData,setFormData]=useState({});const[isLoading,setIsLoading]=useState(false);const[isLoadingFields,setIsLoadingFields]=useState(true);const[result,setResult]=useState(null);const[error,setError]=useState(null);const[currentStep,setCurrentStep]=useState(0);const[backendFields,setBackendFields]=useState(null);const[formProgress,setFormProgress]=useState(0);const[fieldErrors,setFieldErrors]=useState({});const[isDownloadingPDF,setIsDownloadingPDF]=useState(false);// Field mapping for common conversions\n// Field mapping for different predictors - HeartDiseasePredictor uses 'sex', others use 'gender'\nconst getBackendFieldName=(fieldName,predictorType)=>{if(fieldName==='gender'&&predictorType==='heart_disease'){return'sex';}return fieldName;};// Get default example values for form fields\nconst getDefaultExampleValue=(fieldName,field)=>{// Common field examples\nconst examples={// Basic demographics\n'age':45,'gender':'Male','sex':'Male',// Vital signs and measurements\n'systolic_bp':130,'diastolic_bp':85,'resting_bp':130,'blood_pressure':130,'cholesterol':220,'total_cholesterol':220,'hdl_cholesterol':45,'ldl_cholesterol':130,'triglycerides':180,'bmi':26.5,'max_hr':165,'oldpeak':1.2,'avg_glucose_level':110,'specific_gravity':1.025,'albumin':1,'sugar':0,// Medical history\n'hypertension':'No','heart_disease':'No','family_history':'Yes','family_history_respiratory':'No','diabetes':'No','fasting_bs':'No','chronic_illness':'No','previous_complications':'No',// Lifestyle factors\n'smoking_status':'Never smoked','smoking':'No','smoking_years':0,'smoking_pack_years':0,'exercise_frequency':'Moderate','sleep_hours':7,'stress_level':3,'social_support':'Good','work_satisfaction':'Satisfied','substance_use':'None',// Clinical tests\n'chest_pain_type':'Typical angina','resting_ecg':'Normal','exercise_angina':'No','cognitive_score':28,'education_years':16,'symptoms_count':2,// Pregnancy-related\n'maternal_age':28,'gestational_age':38,'multiple_pregnancy':'No',// Work and lifestyle\n'work_type':'Private','residence_type':'Urban','ever_married':'Yes','environmental_exposure':'No','sodium_intake_mg':2800};// Return specific example if available\nif(examples[fieldName]!==undefined){return examples[fieldName];}// Fallback based on field type\nif(field.type==='number'){if(field.min!==undefined&&field.max!==undefined){return Math.round((field.min+field.max)/2);}return field.min||0;}else if(field.type==='select'&&field.options){return field.options[0];}else if(field.type==='checkbox'){return false;}return'';};// Convert backend field definitions to frontend form fields\nconst convertBackendFieldsToFormFields=backendInfo=>{const fields=[];Object.entries(backendInfo.required_fields).forEach(_ref=>{let[fieldName,fieldType]=_ref;const description=backendInfo.field_descriptions[fieldName]||'';let formField={name:fieldName,label:description.split('(')[0].trim()||fieldName.replace(/_/g,' ').replace(/\\b\\w/g,l=>l.toUpperCase()),type:'text',required:true,description:description};// Determine field type and options based on field name and description\nif(fieldType==='int'||fieldType==='float'){formField.type='number';if(fieldType==='float'){formField.step=0.1;}}// Special handling for common fields\nif(fieldName==='gender'||fieldName==='sex'){formField=_objectSpread(_objectSpread({},formField),{},{name:'gender',// Always use 'gender' internally\nlabel:'Gender',type:'select',options:['Female','Male'],description:'Gender (0 = Female, 1 = Male)'});}else if(fieldName==='age'){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:0,max:120,unit:'years'});}else if(fieldName==='maternal_age'){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:15,max:50,unit:'years'});}else if(fieldName==='gestational_age'){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:20,max:42,unit:'weeks'});}else if(fieldName==='systolic_bp'||fieldName==='resting_bp'){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:80,max:200,unit:'mmHg'});}else if(fieldName==='diastolic_bp'){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:50,max:120,unit:'mmHg'});}else if(fieldName==='cholesterol'||fieldName==='total_cholesterol'){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:100,max:400,unit:'mg/dL'});}else if(fieldName==='bmi'){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:15,max:50,step:0.1,unit:'kg/mÂ²'});}else if(fieldName==='smoking_status'){formField=_objectSpread(_objectSpread({},formField),{},{type:'select',options:['Never smoked','Former smoker','Current smoker']});}else if(fieldName==='chest_pain_type'){formField=_objectSpread(_objectSpread({},formField),{},{type:'select',options:['Typical angina','Atypical angina','Non-anginal pain','Asymptomatic']});}else if(fieldName==='resting_ecg'){formField=_objectSpread(_objectSpread({},formField),{},{type:'select',options:['Normal','ST-T wave abnormality','Left ventricular hypertrophy']});}else if(fieldName==='work_type'){formField=_objectSpread(_objectSpread({},formField),{},{type:'select',options:['Private','Self-employed','Government','Never worked']});}else if(fieldName==='residence_type'){formField=_objectSpread(_objectSpread({},formField),{},{type:'select',options:['Urban','Rural']});}else if(fieldName==='gender'||fieldName==='sex'){formField=_objectSpread(_objectSpread({},formField),{},{type:'select',options:['Female','Male']});}else if(fieldName.includes('yes')||fieldName.includes('no')||description.includes('1 = yes, 0 = no')||description.includes('1 = Yes, 0 = No')||description.includes('(1 = yes, 0 = no)')||description.includes('(1 = Yes, 0 = No)')||fieldType==='int'&&(description&&description.toLowerCase().includes('yes')&&description.toLowerCase().includes('no')||fieldName.endsWith('_status')&&description.includes('1')&&description.includes('0')||fieldName.includes('hypertension')||fieldName.includes('diabetes')||fieldName.includes('heart_disease')||fieldName.includes('smoking')&&!fieldName.includes('status')||fieldName.includes('alcohol')&&!fieldName.includes('consumption')||fieldName.includes('family_history')||fieldName.includes('chronic')||fieldName.includes('emergency')||fieldName.includes('transfusion')||fieldName.includes('multiple_pregnancy')||fieldName.includes('assisted_reproduction')||fieldName.includes('previous_complications')||fieldName.includes('occupational_exposure')||fieldName.includes('hormonal_factors')||fieldName.includes('previous_cancer')||fieldName.includes('immunocompromised')||fieldName.includes('ever_married')||fieldName.includes('cough')||fieldName.includes('shortness_of_breath')||fieldName.includes('loss_of_taste_smell')||fieldName.includes('chest_pain')&&!fieldName.includes('type')||fieldName.includes('headache')||fieldName.includes('muscle_aches')||fieldName.includes('pale_skin')||fieldName.includes('cold_hands_feet')||fieldName.includes('brittle_nails')||fieldName.includes('strange_cravings')||fieldName.includes('change')||fieldName.includes('diabetesMed')||fieldName.includes('copd')||fieldName.includes('kidney_disease')||fieldName.includes('liver_disease')||fieldName.includes('cancer')&&!fieldName.includes('type')||fieldName.includes('mobility')||fieldName.includes('fetal_growth_restriction')||fieldName.includes('autoimmune_disease')||fieldName.includes('chronic_hypertension')||fieldName.includes('diabetes_pre_pregnancy'))){formField=_objectSpread(_objectSpread({},formField),{},{type:'select',options:['No','Yes']});}else if(description.includes('0-')&&description.includes('scale')){const match=description.match(/0-(\\d+)/);if(match){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:0,max:parseInt(match[1])});}}fields.push(formField);});return fields;};// Mock predictor data - in real app, this would come from API\nconst predictorData=useMemo(()=>({heart_disease:{id:'heart_disease',name:'Heart Disease Predictor',description:'Predict risk of heart attack, arrhythmia, or heart failure using cardiovascular health indicators.',category:'Disease Risk & Diagnosis',icon:Heart,difficulty:'Medium',estimatedTime:'5-7 min',accuracy:'94%',fields:[{name:'age',label:'Age',type:'number',required:true,min:18,max:120,unit:'years'},{name:'sex',label:'Sex',type:'select',required:true,options:['Male','Female']},{name:'chest_pain_type',label:'Chest Pain Type',type:'select',required:true,options:['Typical Angina','Atypical Angina','Non-Anginal Pain','Asymptomatic']},{name:'resting_bp',label:'Resting Blood Pressure',type:'number',required:true,min:80,max:200,unit:'mmHg'},{name:'cholesterol',label:'Serum Cholesterol',type:'number',required:true,min:100,max:400,unit:'mg/dl'},{name:'fasting_bs',label:'Fasting Blood Sugar > 120 mg/dl',type:'radio',required:true,options:['Yes','No']},{name:'resting_ecg',label:'Resting ECG Results',type:'select',required:true,options:['Normal','ST-T Wave Abnormality','Left Ventricular Hypertrophy']},{name:'max_hr',label:'Maximum Heart Rate Achieved',type:'number',required:true,min:60,max:220,unit:'bpm'},{name:'exercise_angina',label:'Exercise Induced Angina',type:'radio',required:true,options:['Yes','No']},{name:'oldpeak',label:'ST Depression (Oldpeak)',type:'number',required:true,min:0,max:10,step:0.1,unit:'mm'}]},stroke_risk:{id:'stroke_risk',name:'Stroke Risk Predictor',description:'Analyze blood pressure, cholesterol, lifestyle, and family history to assess stroke risk.',category:'Disease Risk & Diagnosis',icon:Brain,difficulty:'Medium',estimatedTime:'6-8 min',accuracy:'92%',fields:[{name:'age',label:'Age',type:'number',required:true,min:18,max:120,unit:'years'},{name:'gender',label:'Gender',type:'select',required:true,options:['Male','Female']},{name:'hypertension',label:'Hypertension',type:'radio',required:true,options:['Yes','No']},{name:'heart_disease',label:'Heart Disease',type:'radio',required:true,options:['Yes','No']},{name:'ever_married',label:'Ever Married',type:'radio',required:true,options:['Yes','No']},{name:'work_type',label:'Work Type',type:'select',required:true,options:['Private','Self-employed','Government Job','Children','Never Worked']},{name:'residence_type',label:'Residence Type',type:'select',required:true,options:['Urban','Rural']},{name:'avg_glucose_level',label:'Average Glucose Level',type:'number',required:true,min:50,max:300,unit:'mg/dL'},{name:'bmi',label:'Body Mass Index (BMI)',type:'number',required:true,min:10,max:50,step:0.1,unit:'kg/mÂ²'},{name:'smoking_status',label:'Smoking Status',type:'select',required:true,options:['Never Smoked','Formerly Smoked','Smokes']}]},mental_health:{id:'mental_health',name:'Mental Health Predictor',description:'Depression and anxiety detection using surveys, voice analysis, and wearable data.',category:'Lifestyle & Prevention',icon:Brain,difficulty:'Medium',estimatedTime:'8-10 min',accuracy:'84%',fields:[{name:'age',label:'Age',type:'number',required:true,min:18,max:100,unit:'years'},{name:'gender',label:'Gender',type:'select',required:true,options:['Male','Female','Other']},{name:'sleep_hours',label:'Average Sleep Hours per Night',type:'number',required:true,min:0,max:24,step:0.5,unit:'hours'},{name:'stress_level',label:'Stress Level (1-10)',type:'number',required:true,min:1,max:10},{name:'social_support',label:'Social Support Level',type:'select',required:true,options:['Very Low','Low','Moderate','High','Very High']},{name:'exercise_frequency',label:'Exercise Frequency per Week',type:'number',required:true,min:0,max:14,unit:'times'},{name:'work_satisfaction',label:'Work/Life Satisfaction',type:'select',required:true,options:['Very Dissatisfied','Dissatisfied','Neutral','Satisfied','Very Satisfied']},{name:'family_history',label:'Family History of Mental Health Issues',type:'radio',required:true,options:['Yes','No']},{name:'substance_use',label:'Substance Use',type:'select',required:true,options:['None','Occasional','Regular','Heavy']},{name:'chronic_illness',label:'Chronic Illness',type:'radio',required:true,options:['Yes','No']}]}}),[]);useEffect(()=>{const fetchPredictorFields=async()=>{if(!predictorId)return;setIsLoadingFields(true);setError(null);try{// Check if we're in static mode\nif(isStaticMode()){// Use hardcoded data for static mode\nif(predictorData[predictorId]){var _predictorData$predic,_predictorData$predic2;setPredictor(predictorData[predictorId]);const initialData={};predictorData[predictorId].fields.forEach(field=>{initialData[field.name]=getDefaultExampleValue(field.name,field);});setFormData(initialData);// Calculate initial form progress\nconst filledFields=Object.values(initialData).filter(val=>val!==''&&val!==null&&val!==undefined).length;setFormProgress(filledFields/(((_predictorData$predic=predictorData[predictorId])===null||_predictorData$predic===void 0?void 0:(_predictorData$predic2=_predictorData$predic.fields)===null||_predictorData$predic2===void 0?void 0:_predictorData$predic2.length)||1)*100);}else{throw new Error('Predictor not found in static mode');}}else{// Fetch field definitions from backend\nconst response=await fetch(buildApiUrl(API_ENDPOINTS.PREDICTOR_FIELDS(predictorId)));if(!response.ok){throw new Error(\"Failed to fetch predictor fields: \".concat(response.statusText));}const backendInfo=await response.json();setBackendFields(backendInfo);// Convert backend fields to frontend form fields\nconst formFields=convertBackendFieldsToFormFields(backendInfo);// Create predictor info with dynamic fields\nconst predictorInfo={id:predictorId,name:backendInfo.name,description:backendInfo.description,category:'Health Assessment',icon:Heart,// Default icon\ndifficulty:'Medium',estimatedTime:'5-10 min',accuracy:'85%',fields:formFields};setPredictor(predictorInfo);// Initialize form data with example values\nconst initialData={};formFields.forEach(field=>{initialData[field.name]=getDefaultExampleValue(field.name,field);});setFormData(initialData);// Calculate initial form progress\nconst filledFields=Object.values(initialData).filter(val=>val!==''&&val!==null&&val!==undefined).length;setFormProgress(filledFields/((formFields===null||formFields===void 0?void 0:formFields.length)||1)*100);}}catch(err){console.error('Error fetching predictor fields:',err);setError(err instanceof Error?err.message:'Failed to load predictor');// Fallback to hardcoded data if available\nif(predictorData[predictorId]){var _predictorData$predic3,_predictorData$predic4;setPredictor(predictorData[predictorId]);const initialData={};predictorData[predictorId].fields.forEach(field=>{initialData[field.name]=getDefaultExampleValue(field.name,field);});setFormData(initialData);// Calculate initial form progress\nconst filledFields=Object.values(initialData).filter(val=>val!==''&&val!==null&&val!==undefined).length;setFormProgress(filledFields/(((_predictorData$predic3=predictorData[predictorId])===null||_predictorData$predic3===void 0?void 0:(_predictorData$predic4=_predictorData$predic3.fields)===null||_predictorData$predic4===void 0?void 0:_predictorData$predic4.length)||1)*100);}}finally{setIsLoadingFields(false);}};fetchPredictorFields();},[predictorId,predictorData]);const validateField=(field,value)=>{// Required field validation\nif(field.required&&(value===''||value===null||value===undefined)){return\"\".concat(field.label,\" is required\");}// Number field validation\nif(field.type==='number'&&value!==''&&value!==null&&value!==undefined){const numValue=parseFloat(value);if(isNaN(numValue)){return\"\".concat(field.label,\" must be a valid number\");}if(field.min!==undefined&&numValue<field.min){return\"\".concat(field.label,\" must be at least \").concat(field.min);}if(field.max!==undefined&&numValue>field.max){return\"\".concat(field.label,\" must be no more than \").concat(field.max);}}// Age-specific validation\nif(field.name==='age'&&value){const age=parseFloat(value);if(age<0||age>150){return'Please enter a valid age between 0 and 150';}}// Blood pressure validation\nif(field.name.includes('bp')||field.name.includes('blood_pressure')){const bp=parseFloat(value);if(bp&&(bp<50||bp>300)){return'Please enter a realistic blood pressure value';}}return null;};const handleInputChange=(name,value)=>{var _predictor$fields;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));// Validate field in real-time\nconst field=predictor===null||predictor===void 0?void 0:predictor.fields.find(f=>f.name===name);if(field){const error=validateField(field,value);setFieldErrors(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:error||''}));}// Update form progress\nconst filledFields=Object.values(_objectSpread(_objectSpread({},formData),{},{[name]:value})).filter(val=>val!==''&&val!==null&&val!==undefined).length;const totalFields=(predictor===null||predictor===void 0?void 0:(_predictor$fields=predictor.fields)===null||_predictor$fields===void 0?void 0:_predictor$fields.length)||1;setFormProgress(filledFields/totalFields*100);};// Helper function to get appropriate icon for field\nconst getFieldIcon=fieldName=>{const iconMap={age:/*#__PURE__*/_jsx(Calendar,{className:\"h-4 w-4 text-gray-500\"}),sex:/*#__PURE__*/_jsx(User,{className:\"h-4 w-4 text-gray-500\"}),gender:/*#__PURE__*/_jsx(User,{className:\"h-4 w-4 text-gray-500\"}),chest_pain_type:/*#__PURE__*/_jsx(Heart,{className:\"h-4 w-4 text-gray-500\"}),resting_bp:/*#__PURE__*/_jsx(Activity,{className:\"h-4 w-4 text-gray-500\"}),cholesterol:/*#__PURE__*/_jsx(Droplets,{className:\"h-4 w-4 text-gray-500\"}),fasting_bs:/*#__PURE__*/_jsx(Droplets,{className:\"h-4 w-4 text-gray-500\"}),resting_ecg:/*#__PURE__*/_jsx(Zap,{className:\"h-4 w-4 text-gray-500\"}),max_hr:/*#__PURE__*/_jsx(Heart,{className:\"h-4 w-4 text-gray-500\"}),exercise_angina:/*#__PURE__*/_jsx(Activity,{className:\"h-4 w-4 text-gray-500\"}),oldpeak:/*#__PURE__*/_jsx(TrendingUp,{className:\"h-4 w-4 text-gray-500\"}),st_slope:/*#__PURE__*/_jsx(TrendingUp,{className:\"h-4 w-4 text-gray-500\"}),bmi:/*#__PURE__*/_jsx(Scale,{className:\"h-4 w-4 text-gray-500\"}),temperature:/*#__PURE__*/_jsx(Thermometer,{className:\"h-4 w-4 text-gray-500\"}),blood_pressure:/*#__PURE__*/_jsx(Stethoscope,{className:\"h-4 w-4 text-gray-500\"}),mental_health:/*#__PURE__*/_jsx(Brain,{className:\"h-4 w-4 text-gray-500\"})};return iconMap[fieldName]||/*#__PURE__*/_jsx(Activity,{className:\"h-4 w-4 text-gray-500\"});};const handleSubmit=async e=>{var _predictor$fields2;e.preventDefault();if(!predictor||!backendFields)return;// Validate all fields before submission\nconst errors={};predictor===null||predictor===void 0?void 0:(_predictor$fields2=predictor.fields)===null||_predictor$fields2===void 0?void 0:_predictor$fields2.forEach(field=>{const value=formData[field.name];const error=validateField(field,value);if(error){errors[field.name]=error;}});setFieldErrors(errors);// Don't submit if there are validation errors\nif(Object.keys(errors).length>0){setError('Please fix the validation errors before submitting.');return;}setIsLoading(true);setError(null);try{// Convert form data to backend format\nconst backendData={};Object.entries(formData).forEach(_ref2=>{let[fieldName,value]=_ref2;// Map frontend field names to backend field names\nconst backendFieldName=getBackendFieldName(fieldName,predictor.id);const fieldType=backendFields.required_fields[backendFieldName];if(value===''||value===null||value===undefined){return;// Skip empty values\n}// Convert values based on backend field type\nif(fieldType==='int'){if(fieldName==='gender'||backendFieldName==='sex'||backendFieldName==='gender'){// Convert gender: Female = 0, Male = 1\nbackendData[backendFieldName]=value==='Male'||value===1?1:0;}else if(fieldName==='chest_pain_type'){// Convert chest pain type to numeric\nconst mapping={'Typical angina':0,'Atypical angina':1,'Non-anginal pain':2,'Asymptomatic':3};backendData[backendFieldName]=mapping[value]||0;}else if(fieldName==='resting_ecg'){// Convert ECG results to numeric\nconst mapping={'Normal':0,'ST-T wave abnormality':1,'Left ventricular hypertrophy':2};backendData[backendFieldName]=mapping[value]||0;}else if(fieldName==='smoking_status'){// Convert smoking status to numeric\nconst mapping={'Never smoked':0,'Former smoker':1,'Current smoker':2};backendData[backendFieldName]=mapping[value]||0;}else if(fieldName==='work_type'){// Convert work type to numeric\nconst mapping={'Private':0,'Self-employed':1,'Government':2,'Never worked':4};backendData[backendFieldName]=mapping[value]||0;}else if(fieldName==='residence_type'){// Convert residence type to numeric\nbackendData[backendFieldName]=value==='Urban'?1:0;}else if(typeof value==='string'&&(value==='Yes'||value==='No')){// Convert Yes/No to 1/0\nbackendData[backendFieldName]=value==='Yes'?1:0;}else{backendData[backendFieldName]=parseInt(value.toString());}}else if(fieldType==='float'){backendData[backendFieldName]=parseFloat(value.toString());}else{backendData[backendFieldName]=value;}});console.log('Sending data to backend:',backendData);// Check if we're in static mode (no backend)\nconst isStaticMode=process.env.REACT_APP_STATIC_MODE==='true';if(isStaticMode){// Use mock data for static deployment\nawait new Promise(resolve=>setTimeout(resolve,1500));// Simulate API delay\nconst mockResult={risk_score:Math.random()*100,risk_level:['Low','Medium','High'][Math.floor(Math.random()*3)],confidence:85+Math.random()*10,recommendations:['Maintain a balanced diet rich in fruits and vegetables','Exercise regularly for at least 30 minutes daily','Monitor your health metrics regularly','Consult with healthcare professionals for personalized advice'],analysis:'This is a demonstration using mock data. In a real deployment with backend, you would receive personalized health predictions based on your input data.'};setResult(mockResult);setCurrentStep(1);}else{// Original API call logic for when backend is available\nconst response=await axios.post(buildApiUrl(API_ENDPOINTS.PREDICT),{predictor_type:predictor.id,data:backendData,include_analysis:true});setResult(response.data);setCurrentStep(1);}}catch(err){var _err$response,_err$response$data;console.error('Prediction error:',err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||'An error occurred while making the prediction.');}finally{setIsLoading(false);}};const getRiskColor=riskLevel=>{switch(riskLevel){case'Low':return'text-green-600 dark:text-green-400 bg-green-100 dark:bg-green-900/30';case'Medium':return'text-yellow-600 dark:text-yellow-400 bg-yellow-100 dark:bg-yellow-900/30';case'High':return'text-orange-600 dark:text-orange-400 bg-orange-100 dark:bg-orange-900/30';case'Critical':return'text-red-600 dark:text-red-400 bg-red-100 dark:bg-red-900/30';default:return'text-gray-600 dark:text-gray-400 bg-gray-100 dark:bg-gray-800';}};const getRiskIcon=riskLevel=>{switch(riskLevel){case'Low':return CheckCircle;case'Medium':return Info;case'High':return AlertTriangle;case'Critical':return AlertTriangle;default:return Info;}};const handleDownloadPDF=async()=>{if(!result||!predictor)return;// Check if we're in static mode (no backend)\nconst isStaticMode=process.env.REACT_APP_STATIC_MODE==='true';if(isStaticMode){// Show message that PDF download is not available in static mode\nsetError('PDF download is not available in static demo mode. This feature requires a backend server.');return;}setIsDownloadingPDF(true);try{const response=await fetch(buildApiUrl(API_ENDPOINTS.DOWNLOAD_REPORT),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({prediction_data:{predictor_type:predictor.id,risk_score:result.risk_score,risk_level:result.risk_level,confidence:result.confidence,recommendations:result.recommendations},user_data:formData})});if(!response.ok){throw new Error('Failed to generate PDF report');}const blob=await response.blob();const url=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=\"\".concat(predictor.id,\"_health_report_\").concat(new Date().toISOString().split('T')[0],\".pdf\");document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(url);}catch(error){console.error('PDF download error:',error);setError('Failed to download PDF report. Please try again.');}finally{setIsDownloadingPDF(false);}};const renderField=field=>{var _field$options,_field$options2;const value=formData[field.name]||'';const fieldError=fieldErrors[field.name];const hasError=!!fieldError;switch(field.type){case'number':const numValue=parseFloat(value)||field.min||0;const showSlider=field.min!==undefined&&field.max!==undefined&&field.max-field.min<=200;return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label flex items-center gap-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"flex items-center gap-1\",children:[getFieldIcon(field.name),field.label,field.required&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 ml-1\",children:\"*\"})]}),field.description&&/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsx(HelpCircle,{className:\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\",children:field.description})]})]}),showSlider?/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"range\",value:numValue,onChange:e=>handleInputChange(field.name,parseFloat(e.target.value)),min:field.min,max:field.max,step:field.step||1,className:\"flex-1 h-2 bg-gray-200 dark:bg-gray-700 rounded-lg appearance-none cursor-pointer slider\",style:{background:\"linear-gradient(to right, #3b82f6 0%, #3b82f6 \".concat((numValue-(field.min||0))/((field.max||100)-(field.min||0))*100,\"%, #e5e7eb \").concat((numValue-(field.min||0))/((field.max||100)-(field.min||0))*100,\"%, #e5e7eb 100%)\")}}),/*#__PURE__*/_jsxs(\"div\",{className:\"min-w-[80px] px-3 py-2 bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-lg text-sm font-medium text-blue-700 dark:text-blue-300 text-center\",children:[numValue,field.unit&&\" \".concat(field.unit)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-xs text-gray-500 dark:text-gray-400\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[field.min,field.unit&&\" \".concat(field.unit)]}),/*#__PURE__*/_jsxs(\"span\",{children:[field.max,field.unit&&\" \".concat(field.unit)]})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:value,onChange:e=>handleInputChange(field.name,parseFloat(e.target.value)||''),min:field.min,max:field.max,step:field.step||1,required:field.required,className:\"input pr-12 \".concat(hasError?'border-red-300 focus:border-red-500 focus:ring-red-500':'border-gray-300 focus:border-blue-500 focus:ring-blue-500',\" transition-colors duration-200\"),placeholder:\"Enter \".concat(field.label.toLowerCase())}),field.unit&&/*#__PURE__*/_jsx(\"span\",{className:\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 dark:text-gray-400 text-sm font-medium\",children:field.unit}),hasError&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute right-3 top-1/2 transform -translate-y-1/2\",children:/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-4 w-4 text-red-500\"})})]}),hasError&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-red-600 mt-1 flex items-center gap-1\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-3 w-3\"}),fieldError]}),field.min!==undefined&&field.max!==undefined&&!showSlider&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 dark:text-gray-400 mt-1\",children:[\"Range: \",field.min,\" - \",field.max,\" \",field.unit]})]},field.name);case'select':return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label flex items-center gap-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"flex items-center gap-1\",children:[getFieldIcon(field.name),field.label,field.required&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 ml-1\",children:\"*\"})]}),field.description&&/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsx(HelpCircle,{className:\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\",children:field.description})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsxs(\"select\",{value:value,onChange:e=>handleInputChange(field.name,e.target.value),required:field.required,className:\"input appearance-none \".concat(hasError?'border-red-300 focus:border-red-500 focus:ring-red-500':'border-gray-300 focus:border-blue-500 focus:ring-blue-500',\" transition-colors duration-200\"),children:[/*#__PURE__*/_jsxs(\"option\",{value:\"\",children:[\"Select \",field.label]}),(_field$options=field.options)===null||_field$options===void 0?void 0:_field$options.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option,children:option},option))]}),/*#__PURE__*/_jsx(ChevronDown,{className:\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\"}),hasError&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute right-8 top-1/2 transform -translate-y-1/2\",children:/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-4 w-4 text-red-500\"})})]}),hasError&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-red-600 mt-1 flex items-center gap-1\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-3 w-3\"}),fieldError]})]},field.name);case'radio':return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label flex items-center gap-2 mb-3\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"flex items-center gap-1\",children:[getFieldIcon(field.name),field.label,field.required&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 ml-1\",children:\"*\"})]}),field.description&&/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsx(HelpCircle,{className:\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\",children:field.description})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 gap-3\",children:(_field$options2=field.options)===null||_field$options2===void 0?void 0:_field$options2.map(option=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center p-3 border rounded-lg cursor-pointer transition-all duration-200 hover:bg-gray-50 dark:hover:bg-gray-800 \".concat(value===option?'border-blue-500 bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300':'border-gray-200 dark:border-gray-700'),children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:field.name,value:option,checked:value===option,onChange:e=>handleInputChange(field.name,e.target.value),required:field.required,className:\"mr-3 text-blue-600 focus:ring-blue-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:option})]},option))}),hasError&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-red-600 mt-2 flex items-center gap-1\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-3 w-3\"}),fieldError]})]},field.name);case'checkbox':return/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start gap-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center h-5\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:value,onChange:e=>handleInputChange(field.name,e.target.checked),className:\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded transition-colors duration-200\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center gap-2 cursor-pointer\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"flex items-center gap-1\",children:[getFieldIcon(field.name),field.label,field.required&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 ml-1\",children:\"*\"})]}),field.description&&/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsx(HelpCircle,{className:\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\",children:field.description})]})]}),hasError&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-red-600 mt-1 flex items-center gap-1\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-3 w-3\"}),fieldError]})]})]})},field.name);default:return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label flex items-center gap-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"flex items-center gap-1\",children:[getFieldIcon(field.name),field.label,field.required&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 ml-1\",children:\"*\"})]}),field.description&&/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsx(HelpCircle,{className:\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\",children:field.description})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:value,onChange:e=>handleInputChange(field.name,e.target.value),required:field.required,className:\"input \".concat(hasError?'border-red-300 focus:border-red-500 focus:ring-red-500':'border-gray-300 focus:border-blue-500 focus:ring-blue-500',\" transition-colors duration-200\"),placeholder:\"Enter \".concat(field.label.toLowerCase())}),hasError&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute right-3 top-1/2 transform -translate-y-1/2\",children:/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-4 w-4 text-red-500\"})})]}),hasError&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-red-600 mt-1 flex items-center gap-1\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-3 w-3\"}),fieldError]})]},field.name);}};if(isLoadingFields){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center transition-colors duration-300\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 dark:border-blue-400 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-900 dark:text-white mb-2\",children:\"Loading Predictor...\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-300\",children:\"Fetching field definitions from server\"})]})});}if(!predictor){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 dark:text-white mb-4\",children:\"Predictor Not Found\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-300 mb-6\",children:\"The requested predictor could not be found.\"}),/*#__PURE__*/_jsx(Link,{to:\"/predictors\",className:\"btn-primary\",children:\"Back to Predictors\"})]})});}const Icon=predictor.icon;return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen py-8\",children:[/*#__PURE__*/_jsx(\"style\",{children:\"\\n        .slider::-webkit-slider-thumb {\\n          appearance: none;\\n          height: 20px;\\n          width: 20px;\\n          border-radius: 50%;\\n          background: #3b82f6;\\n          cursor: pointer;\\n          border: 2px solid #ffffff;\\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\\n        }\\n        .slider::-moz-range-thumb {\\n          height: 20px;\\n          width: 20px;\\n          border-radius: 50%;\\n          background: #3b82f6;\\n          cursor: pointer;\\n          border: 2px solid #ffffff;\\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\\n        }\\n        .slider:focus::-webkit-slider-thumb {\\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\\n        }\\n        .slider:focus::-moz-range-thumb {\\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\\n        }\\n      \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"container-max section-padding\",children:[/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:0.8},className:\"mb-8\",children:[/*#__PURE__*/_jsxs(Link,{to:\"/predictors\",className:\"inline-flex items-center text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 mb-6 transition-colors duration-200\",children:[/*#__PURE__*/_jsx(ArrowLeft,{className:\"h-4 w-4 mr-2\"}),\"Back to Predictors\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start space-x-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-16 h-16 bg-primary-100 dark:bg-primary-900/30 rounded-xl flex items-center justify-center\",children:/*#__PURE__*/_jsx(Icon,{className:\"h-8 w-8 text-primary-600 dark:text-primary-400\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl lg:text-4xl font-display font-bold text-gray-900 dark:text-white mb-2\",children:predictor.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-gray-600 dark:text-gray-300 mb-4\",children:predictor.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-6 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-gray-500 dark:text-gray-400\",children:[/*#__PURE__*/_jsx(Clock,{className:\"h-4 w-4 mr-1\"}),predictor.estimatedTime]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-green-600 dark:text-green-400 font-medium\",children:[predictor.accuracy,\" accuracy\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full text-xs font-medium\",children:predictor.difficulty})]})]})]})]}),currentStep===0?/*#__PURE__*//* Form Step */_jsx(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:0.8,delay:0.2},children:/*#__PURE__*/_jsxs(\"div\",{className:\"card max-w-4xl mx-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 dark:text-white\",children:\"Health Assessment Form\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:[Math.round(formProgress),\"% Complete\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mb-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-gradient-to-r from-blue-500 to-blue-600 h-2 rounded-full transition-all duration-500 ease-out\",style:{width:\"\".concat(formProgress,\"%\")}})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-300 mb-4\",children:\"Please fill out all required fields to get your personalized health assessment.\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4 mb-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-5 w-5 text-red-600 dark:text-red-400 mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-red-800 dark:text-red-300\",children:error})]})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"border-b border-gray-200 dark:border-gray-700 pb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-4\",children:[/*#__PURE__*/_jsx(User,{className:\"h-5 w-5 text-blue-600 dark:text-blue-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Basic Information\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\",children:predictor===null||predictor===void 0?void 0:(_predictor$fields3=predictor.fields)===null||_predictor$fields3===void 0?void 0:_predictor$fields3.filter(field=>['age','gender','sex','ever_married','work_type','residence_type'].includes(field.name)).map(renderField)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-b border-gray-200 dark:border-gray-700 pb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-4\",children:[/*#__PURE__*/_jsx(Heart,{className:\"h-5 w-5 text-red-600 dark:text-red-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Health Metrics\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\",children:predictor===null||predictor===void 0?void 0:(_predictor$fields4=predictor.fields)===null||_predictor$fields4===void 0?void 0:_predictor$fields4.filter(field=>['resting_bp','cholesterol','fasting_bs','avg_glucose_level','bmi','max_hr','oldpeak'].includes(field.name)).map(renderField)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-b border-gray-200 dark:border-gray-700 pb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-4\",children:[/*#__PURE__*/_jsx(FileText,{className:\"h-5 w-5 text-green-600 dark:text-green-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Medical History\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\",children:predictor===null||predictor===void 0?void 0:(_predictor$fields5=predictor.fields)===null||_predictor$fields5===void 0?void 0:_predictor$fields5.filter(field=>['hypertension','heart_disease','chest_pain_type','resting_ecg','exercise_angina','family_history','chronic_illness'].includes(field.name)).map(renderField)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-4\",children:[/*#__PURE__*/_jsx(Activity,{className:\"h-5 w-5 text-purple-600 dark:text-purple-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Lifestyle Factors\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\",children:predictor===null||predictor===void 0?void 0:(_predictor$fields6=predictor.fields)===null||_predictor$fields6===void 0?void 0:_predictor$fields6.filter(field=>['smoking_status','sleep_hours','stress_level','social_support','exercise_frequency','work_satisfaction','substance_use'].includes(field.name)).map(renderField)})]}),(predictor===null||predictor===void 0?void 0:(_predictor$fields7=predictor.fields)===null||_predictor$fields7===void 0?void 0:_predictor$fields7.filter(field=>!['age','gender','sex','ever_married','work_type','residence_type','resting_bp','cholesterol','fasting_bs','avg_glucose_level','bmi','max_hr','oldpeak','hypertension','heart_disease','chest_pain_type','resting_ecg','exercise_angina','family_history','chronic_illness','smoking_status','sleep_hours','stress_level','social_support','exercise_frequency','work_satisfaction','substance_use'].includes(field.name)).length)>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"pb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-4\",children:[/*#__PURE__*/_jsx(BarChart3,{className:\"h-5 w-5 text-gray-600 dark:text-gray-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Additional Information\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:predictor===null||predictor===void 0?void 0:(_predictor$fields8=predictor.fields)===null||_predictor$fields8===void 0?void 0:_predictor$fields8.filter(field=>!['age','gender','sex','ever_married','work_type','residence_type','resting_bp','cholesterol','fasting_bs','avg_glucose_level','bmi','max_hr','oldpeak','hypertension','heart_disease','chest_pain_type','resting_ecg','exercise_angina','family_history','chronic_illness','smoking_status','sleep_hours','stress_level','social_support','exercise_frequency','work_satisfaction','substance_use'].includes(field.name)).map(renderField)})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col sm:flex-row items-center justify-between pt-8 border-t border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-4 sm:mb-0\",children:[/*#__PURE__*/_jsx(CheckCircle,{className:\"h-4 w-4 mr-2 text-green-500\"}),/*#__PURE__*/_jsxs(\"span\",{children:[Object.values(formData).filter(val=>val!==''&&val!==null&&val!==undefined).length,\" of \",(predictor===null||predictor===void 0?void 0:(_predictor$fields9=predictor.fields)===null||_predictor$fields9===void 0?void 0:_predictor$fields9.length)||0,\" fields completed\"]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading||formProgress<100||Object.values(fieldErrors).some(error=>error),className:\"btn-primary px-8 py-3 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2 min-w-[160px] justify-center transition-all duration-200 hover:shadow-lg\",children:isLoading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Loader,{className:\"animate-spin h-5 w-5\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Analyzing...\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TrendingUp,{className:\"h-5 w-5\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Get Prediction\"})]})})]})]})]})}):/*#__PURE__*//* Results Step */_jsx(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:0.8},children:result&&/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 dark:text-white\",children:\"Risk Assessment\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleDownloadPDF,disabled:isDownloadingPDF,className:\"btn-outline p-2 relative\",title:\"Download PDF Report\",children:isDownloadingPDF?/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin h-4 w-4 border-2 border-current border-t-transparent rounded-full\"}):/*#__PURE__*/_jsx(Download,{className:\"h-4 w-4\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-outline p-2\",title:\"Share Report\",children:/*#__PURE__*/_jsx(Share2,{className:\"h-4 w-4\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"inline-flex items-center px-4 py-2 rounded-full text-lg font-semibold \".concat(getRiskColor(result.risk_level)),children:[/*#__PURE__*/React.createElement(getRiskIcon(result.risk_level),{className:'h-5 w-5 mr-2'}),result.risk_level,\" Risk\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 mt-2\",children:\"Risk Level\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-3xl font-bold text-gray-900 dark:text-white\",children:[Math.round(result.risk_score*100),\"%\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400 mt-2\",children:\"Risk Score\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-3xl font-bold text-gray-900 dark:text-white\",children:[Math.round(result.confidence*100),\"%\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400 mt-2\",children:\"Confidence\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-gray-900 dark:text-white mb-2\",children:\"Explanation\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-700 dark:text-gray-300\",children:result.explanation})]})]}),((_result$risk_factors=result.risk_factors)===null||_result$risk_factors===void 0?void 0:_result$risk_factors.length)>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-4\",children:\"Key Risk Factors\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:result.risk_factors.map((factor,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center p-3 bg-orange-50 dark:bg-orange-900/20 rounded-lg\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-5 w-5 text-orange-600 dark:text-orange-400 mr-3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-orange-800 dark:text-orange-300\",children:factor})]},index))})]}),((_result$recommendatio=result.recommendations)===null||_result$recommendatio===void 0?void 0:_result$recommendatio.length)>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-4\",children:\"Recommendations\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:result.recommendations.map((recommendation,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\",children:[/*#__PURE__*/_jsx(CheckCircle,{className:\"h-5 w-5 text-blue-600 dark:text-blue-400 mr-3 mt-0.5\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-800 dark:text-blue-300\",children:recommendation})]},index))})]}),((_result$detailed_anal=result.detailed_analysis)===null||_result$detailed_anal===void 0?void 0:_result$detailed_anal.contributing_factors)&&result.detailed_analysis.contributing_factors.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-4\",children:\"Contributing Factors\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:result.detailed_analysis.contributing_factors.map((factor,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center p-3 bg-purple-50 dark:bg-purple-900/20 rounded-lg\",children:[/*#__PURE__*/_jsx(TrendingUp,{className:\"h-5 w-5 text-purple-600 dark:text-purple-400 mr-3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-purple-800 dark:text-purple-300\",children:factor})]},index))})]}),((_result$detailed_anal2=result.detailed_analysis)===null||_result$detailed_anal2===void 0?void 0:_result$detailed_anal2.health_metrics)&&result.detailed_analysis.health_metrics.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-4\",children:\"Health Metrics Analysis\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:result.detailed_analysis.health_metrics.map((metric,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-green-900 dark:text-green-100\",children:metric.category}),/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 rounded-full text-xs font-medium \".concat(metric.status==='Normal'?'bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100':metric.status==='Warning'?'bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100':'bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100'),children:metric.status})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-green-700 dark:text-green-300 mb-2\",children:metric.value}),metric.recommendation&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-green-600 dark:text-green-400\",children:metric.recommendation})]},index))})]}),result.risk_score!==undefined&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(BarChart3,{className:\"h-6 w-6 text-purple-600 dark:text-purple-400\"}),\"Risk Assessment Overview\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-purple-50 to-indigo-50 dark:from-purple-900/20 dark:to-indigo-900/20 rounded-xl p-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-gray-900 dark:text-white mb-4 text-center\",children:\"Overall Risk Level\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center py-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative w-40 h-40 mb-6\",children:[/*#__PURE__*/_jsxs(\"svg\",{className:\"w-40 h-40 transform -rotate-90\",viewBox:\"0 0 144 144\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"72\",cy:\"72\",r:\"60\",stroke:\"currentColor\",strokeWidth:\"8\",fill:\"none\",className:\"text-gray-200 dark:text-gray-700\"}),/*#__PURE__*/_jsx(\"circle\",{cx:\"72\",cy:\"72\",r:\"60\",stroke:\"currentColor\",strokeWidth:\"8\",fill:\"none\",strokeDasharray:\"\".concat(2*Math.PI*60),strokeDashoffset:\"\".concat(2*Math.PI*60*(1-result.risk_score)),className:\"transition-all duration-1000 ease-out \".concat(result.risk_score<0.3?'text-green-500':result.risk_score<0.7?'text-yellow-500':'text-red-500'),strokeLinecap:\"round\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-3xl font-bold \".concat(result.risk_score<0.3?'text-green-600 dark:text-green-400':result.risk_score<0.7?'text-yellow-600 dark:text-yellow-400':'text-red-600 dark:text-red-400'),children:[Math.round(result.risk_score*100),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-600 dark:text-gray-400 font-medium\",children:\"Risk Score\"})]})})]}),/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex px-4 py-2 rounded-full text-sm font-medium \".concat(result.risk_score<0.3?'bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100':result.risk_score<0.7?'bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100':'bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100'),children:result.risk_score<0.3?'Low Risk':result.risk_score<0.7?'Moderate Risk':'High Risk'}),/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-sm text-gray-600 dark:text-gray-400 mt-3 max-w-xs\",children:result.risk_score<0.3?'Your risk level is low. Continue maintaining healthy habits.':result.risk_score<0.7?'Your risk level is moderate. Consider lifestyle improvements.':'Your risk level is high. Consult with healthcare professionals.'})]})]}),((_result$detailed_anal3=result.detailed_analysis)===null||_result$detailed_anal3===void 0?void 0:_result$detailed_anal3.contributing_factors)&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-blue-50 to-cyan-50 dark:from-blue-900/20 dark:to-cyan-900/20 rounded-xl p-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-gray-900 dark:text-white mb-4\",children:\"Key Contributing Factors\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:result.detailed_analysis.contributing_factors.slice(0,5).map((factor,index)=>{// Assign different impact levels for visual variety\nconst impactLevels=[85,70,60,45,30];const impactLevel=impactLevels[index]||50;const colors=['bg-red-500','bg-orange-500','bg-yellow-500','bg-blue-500','bg-green-500'];const bgColors=['bg-red-50 dark:bg-red-900/20','bg-orange-50 dark:bg-orange-900/20','bg-yellow-50 dark:bg-yellow-900/20','bg-blue-50 dark:bg-blue-900/20','bg-green-50 dark:bg-green-900/20'];return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 \".concat(bgColors[index],\" rounded-lg border border-opacity-20\"),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700 dark:text-gray-300\",children:factor}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500 dark:text-gray-400\",children:[impactLevel,\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-2 rounded-full \".concat(colors[index],\" transition-all duration-1000 ease-out\"),style:{width:\"\".concat(impactLevel,\"%\")}})})]},index);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-white dark:bg-gray-800 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-sm font-semibold text-gray-900 dark:text-white mb-3\",children:\"Impact Distribution\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4 text-xs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-red-500 rounded-full\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600 dark:text-gray-400\",children:\"High Impact\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-yellow-500 rounded-full\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600 dark:text-gray-400\",children:\"Moderate Impact\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-green-500 rounded-full\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600 dark:text-gray-400\",children:\"Low Impact\"})]})]})]})]})]})]}),((_result$detailed_anal4=result.detailed_analysis)===null||_result$detailed_anal4===void 0?void 0:_result$detailed_anal4.lifestyle_impact)&&Object.keys(result.detailed_analysis.lifestyle_impact).length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Activity,{className:\"h-6 w-6 text-indigo-600 dark:text-indigo-400\"}),\"Lifestyle Impact Analysis\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-indigo-50 to-purple-50 dark:from-indigo-900/20 dark:to-purple-900/20 rounded-xl p-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-gray-900 dark:text-white mb-4\",children:\"Lifestyle Impact Overview\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:(()=>{// Filter and process lifestyle factors to show only meaningful ones\nconst meaningfulFactors=Object.entries(result.detailed_analysis.lifestyle_impact).filter(_ref3=>{let[key,value]=_ref3;return key!=='recommendations'&&value&&typeof value==='string'&&value.length>5&&// Filter out single letters\n!key.match(/^\\d+$/);// Filter out numeric keys\n}).slice(0,5);// Limit to top 5 factors\nif(meaningfulFactors.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 dark:text-gray-400\",children:\"No specific lifestyle factors identified\"})});}return meaningfulFactors.map((_ref4,index)=>{let[key,value]=_ref4;// Determine impact level from content\nlet impactLevel='Medium';let impactScore=60;if(typeof value==='string'){const lowerValue=value.toLowerCase();if(lowerValue.includes('low')||lowerValue.includes('minimal')||lowerValue.includes('good')){impactLevel='Low';impactScore=25;}else if(lowerValue.includes('high')||lowerValue.includes('significant')||lowerValue.includes('severe')||lowerValue.includes('poor')){impactLevel='High';impactScore=85;}}const getIcon=factorKey=>{const lowerKey=factorKey.toLowerCase();if(lowerKey.includes('smoking')||lowerKey.includes('tobacco'))return'ð­';if(lowerKey.includes('diet')||lowerKey.includes('nutrition')||lowerKey.includes('food'))return'ð¥';if(lowerKey.includes('exercise')||lowerKey.includes('activity')||lowerKey.includes('physical'))return'ð';if(lowerKey.includes('sleep'))return'ð´';if(lowerKey.includes('stress')||lowerKey.includes('mental'))return'ð°';if(lowerKey.includes('alcohol')||lowerKey.includes('drink'))return'ð·';if(lowerKey.includes('weight')||lowerKey.includes('bmi')||lowerKey.includes('obesity'))return'âï¸';if(lowerKey.includes('blood')||lowerKey.includes('pressure'))return'ð©¸';return'ð';};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 bg-white dark:bg-gray-800 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3 flex-1\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xl\",children:getIcon(key)}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-gray-900 dark:text-white text-sm\",children:key.replace(/_/g,' ').replace(/\\b\\w/g,l=>l.toUpperCase())}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mt-1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-2 rounded-full transition-all duration-500 \".concat(impactLevel==='Low'?'bg-green-500':impactLevel==='Medium'?'bg-yellow-500':'bg-red-500'),style:{width:\"\".concat(impactScore,\"%\")}})})]})]}),/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 rounded-full text-xs font-medium ml-3 \".concat(impactLevel==='Low'?'bg-green-100 text-green-700 dark:bg-green-800 dark:text-green-200':impactLevel==='Medium'?'bg-yellow-100 text-yellow-700 dark:bg-yellow-800 dark:text-yellow-200':'bg-red-100 text-red-700 dark:bg-red-800 dark:text-red-200'),children:impactLevel})]},index);});})()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-blue-50 to-cyan-50 dark:from-blue-900/20 dark:to-cyan-900/20 rounded-xl p-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-gray-900 dark:text-white mb-4\",children:\"Risk Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:(()=>{// Create a simple risk distribution visualization\nconst riskCategories=[{name:'Low Risk Factors',value:30,color:'bg-green-500',count:2},{name:'Moderate Risk Factors',value:45,color:'bg-yellow-500',count:3},{name:'High Risk Factors',value:25,color:'bg-red-500',count:1}];return riskCategories.map((category,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700 dark:text-gray-300\",children:category.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:[category.count,\" factors\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-3 rounded-full \".concat(category.color,\" transition-all duration-700\"),style:{width:\"\".concat(category.value,\"%\")}})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500 dark:text-gray-400\",children:[category.value,\"%\"]})})]},index));})()})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-r from-emerald-50 to-teal-50 dark:from-emerald-900/20 dark:to-teal-900/20 rounded-xl p-6 border border-emerald-200 dark:border-emerald-700\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-semibold text-emerald-900 dark:text-emerald-100 mb-4 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(CheckCircle,{className:\"h-5 w-5\"}),\"Key Health Recommendations\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:(()=>{// Generate relevant recommendations based on predictor type\nconst baseRecommendations=[\"Maintain a balanced diet rich in fruits and vegetables\",\"Engage in regular physical activity (150 minutes per week)\",\"Get adequate sleep (7-9 hours per night)\",\"Manage stress through relaxation techniques\"];// Use actual recommendations if available, otherwise use base ones\nconst recommendations=result.detailed_analysis.lifestyle_impact&&Array.isArray(result.detailed_analysis.lifestyle_impact)&&result.detailed_analysis.lifestyle_impact.length>0?result.detailed_analysis.lifestyle_impact.slice(0,4).map(item=>item.description||item.factor):baseRecommendations;return recommendations.map((recommendation,recIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start gap-3 p-4 bg-white dark:bg-gray-800 rounded-lg border border-emerald-100 dark:border-emerald-800 hover:shadow-md transition-all duration-200\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-6 h-6 bg-emerald-500 text-white rounded-full flex items-center justify-center text-xs font-bold mt-0.5 flex-shrink-0\",children:recIndex+1}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-emerald-700 dark:text-emerald-300 leading-relaxed\",children:recommendation})]},recIndex));})()})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setCurrentStep(0);setResult(null);setError(null);},className:\"btn-outline\",children:\"New Assessment\"}),/*#__PURE__*/_jsx(Link,{to:\"/predictors\",className:\"btn-primary\",children:\"Try Another Predictor\"})]})]})})]})]});};export default PredictorDetail;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useParams","Link","motion","axios","buildApiUrl","API_ENDPOINTS","isStaticMode","ArrowLeft","Heart","Brain","Activity","Stethoscope","TrendingUp","Zap","Clock","AlertTriangle","CheckCircle","Info","Loader","Download","Share2","HelpCircle","ChevronDown","User","Calendar","Droplets","Thermometer","Scale","FileText","BarChart3","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PredictorDetail","_predictor$fields3","_predictor$fields4","_predictor$fields5","_predictor$fields6","_predictor$fields7","_predictor$fields8","_predictor$fields9","_result$risk_factors","_result$recommendatio","_result$detailed_anal","_result$detailed_anal2","_result$detailed_anal3","_result$detailed_anal4","predictorId","predictor","setPredictor","formData","setFormData","isLoading","setIsLoading","isLoadingFields","setIsLoadingFields","result","setResult","error","setError","currentStep","setCurrentStep","backendFields","setBackendFields","formProgress","setFormProgress","fieldErrors","setFieldErrors","isDownloadingPDF","setIsDownloadingPDF","getBackendFieldName","fieldName","predictorType","getDefaultExampleValue","field","examples","undefined","type","min","max","Math","round","options","convertBackendFieldsToFormFields","backendInfo","fields","Object","entries","required_fields","forEach","_ref","fieldType","description","field_descriptions","formField","name","label","split","trim","replace","l","toUpperCase","required","step","_objectSpread","unit","includes","toLowerCase","endsWith","match","parseInt","push","predictorData","heart_disease","id","category","icon","difficulty","estimatedTime","accuracy","stroke_risk","mental_health","fetchPredictorFields","_predictorData$predic","_predictorData$predic2","initialData","filledFields","values","filter","val","length","Error","response","fetch","PREDICTOR_FIELDS","ok","concat","statusText","json","formFields","predictorInfo","err","console","message","_predictorData$predic3","_predictorData$predic4","validateField","value","numValue","parseFloat","isNaN","age","bp","handleInputChange","_predictor$fields","prev","find","f","totalFields","getFieldIcon","iconMap","className","sex","gender","chest_pain_type","resting_bp","cholesterol","fasting_bs","resting_ecg","max_hr","exercise_angina","oldpeak","st_slope","bmi","temperature","blood_pressure","handleSubmit","e","_predictor$fields2","preventDefault","errors","keys","backendData","_ref2","backendFieldName","mapping","toString","log","process","env","REACT_APP_STATIC_MODE","Promise","resolve","setTimeout","mockResult","risk_score","random","risk_level","floor","confidence","recommendations","analysis","post","PREDICT","predictor_type","data","include_analysis","_err$response","_err$response$data","getRiskColor","riskLevel","getRiskIcon","handleDownloadPDF","DOWNLOAD_REPORT","method","headers","body","JSON","stringify","prediction_data","user_data","blob","url","window","URL","createObjectURL","link","document","createElement","href","download","Date","toISOString","appendChild","click","removeChild","revokeObjectURL","renderField","_field$options","_field$options2","fieldError","hasError","showSlider","children","onChange","target","style","background","placeholder","map","option","checked","to","Icon","div","initial","opacity","y","animate","transition","duration","delay","width","onSubmit","disabled","some","onClick","title","explanation","risk_factors","factor","index","recommendation","detailed_analysis","contributing_factors","health_metrics","metric","status","viewBox","cx","cy","r","stroke","strokeWidth","fill","strokeDasharray","PI","strokeDashoffset","strokeLinecap","slice","impactLevels","impactLevel","colors","bgColors","lifestyle_impact","meaningfulFactors","_ref3","key","_ref4","impactScore","lowerValue","getIcon","factorKey","lowerKey","riskCategories","color","count","baseRecommendations","Array","isArray","item","recIndex"],"sources":["C:/Users/kapoo/OneDrive/Desktop/Gods Health AI/frontend/src/pages/PredictorDetail.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport axios from 'axios';\nimport { buildApiUrl, API_ENDPOINTS, isStaticMode } from '../config/api.js';\nimport {\n  ArrowLeft,\n  Heart,\n  Brain,\n  Activity,\n  Stethoscope,\n  TrendingUp,\n  Zap,\n  Clock,\n  AlertTriangle,\n  CheckCircle,\n  Info,\n  Loader,\n  Download,\n  Share2,\n  HelpCircle,\n  ChevronDown,\n  User,\n  Calendar,\n  Droplets,\n  Thermometer,\n  Scale,\n  FileText,\n  BarChart3\n} from 'lucide-react';\n// Recharts components removed - using simpler card-based design\n\ninterface PredictorInfo {\n  id: string;\n  name: string;\n  description: string;\n  category: string;\n  icon: React.ComponentType<any>;\n  difficulty: string;\n  estimatedTime: string;\n  accuracy: string;\n  fields: FormField[];\n}\n\ninterface FormField {\n  name: string;\n  label: string;\n  type: 'number' | 'select' | 'radio' | 'checkbox' | 'text';\n  required: boolean;\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  unit?: string;\n  description?: string;\n}\n\ninterface BackendFieldInfo {\n  required_fields: Record<string, string>;\n  field_descriptions: Record<string, string>;\n  predictor_type: string;\n  name: string;\n  description: string;\n}\n\ninterface PredictionResult {\n  risk_level: 'Low' | 'Medium' | 'High' | 'Critical';\n  risk_score: number;\n  confidence: number;\n  recommendations: string[];\n  risk_factors: string[];\n  explanation: string;\n  detailed_analysis?: {\n    contributing_factors?: string[];\n    health_metrics?: {\n      category: string;\n      value: string;\n      status: string;\n      recommendation?: string;\n    }[];\n    lifestyle_impact?: {\n      factor: string;\n      impact_level: string;\n      description: string;\n      improvement_suggestions?: string[];\n    }[];\n  };\n}\n\nconst PredictorDetail: React.FC = () => {\n  const { predictorId } = useParams<{ predictorId: string }>();\n  const [predictor, setPredictor] = useState<PredictorInfo | null>(null);\n  const [formData, setFormData] = useState<Record<string, any>>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingFields, setIsLoadingFields] = useState(true);\n  const [result, setResult] = useState<PredictionResult | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [backendFields, setBackendFields] = useState<BackendFieldInfo | null>(null);\n  const [formProgress, setFormProgress] = useState(0);\n  const [fieldErrors, setFieldErrors] = useState<Record<string, string>>({});\n  const [isDownloadingPDF, setIsDownloadingPDF] = useState(false);\n\n  // Field mapping for common conversions\n  // Field mapping for different predictors - HeartDiseasePredictor uses 'sex', others use 'gender'\n  const getBackendFieldName = (fieldName: string, predictorType: string): string => {\n    if (fieldName === 'gender' && predictorType === 'heart_disease') {\n      return 'sex';\n    }\n    return fieldName;\n  };\n\n  // Get default example values for form fields\n  const getDefaultExampleValue = (fieldName: string, field: FormField): any => {\n    // Common field examples\n    const examples: Record<string, any> = {\n      // Basic demographics\n      'age': 45,\n      'gender': 'Male',\n      'sex': 'Male',\n      \n      // Vital signs and measurements\n      'systolic_bp': 130,\n      'diastolic_bp': 85,\n      'resting_bp': 130,\n      'blood_pressure': 130,\n      'cholesterol': 220,\n      'total_cholesterol': 220,\n      'hdl_cholesterol': 45,\n      'ldl_cholesterol': 130,\n      'triglycerides': 180,\n      'bmi': 26.5,\n      'max_hr': 165,\n      'oldpeak': 1.2,\n      'avg_glucose_level': 110,\n      'specific_gravity': 1.025,\n      'albumin': 1,\n      'sugar': 0,\n      \n      // Medical history\n      'hypertension': 'No',\n      'heart_disease': 'No',\n      'family_history': 'Yes',\n      'family_history_respiratory': 'No',\n      'diabetes': 'No',\n      'fasting_bs': 'No',\n      'chronic_illness': 'No',\n      'previous_complications': 'No',\n      \n      // Lifestyle factors\n      'smoking_status': 'Never smoked',\n      'smoking': 'No',\n      'smoking_years': 0,\n      'smoking_pack_years': 0,\n      'exercise_frequency': 'Moderate',\n      'sleep_hours': 7,\n      'stress_level': 3,\n      'social_support': 'Good',\n      'work_satisfaction': 'Satisfied',\n      'substance_use': 'None',\n      \n      // Clinical tests\n      'chest_pain_type': 'Typical angina',\n      'resting_ecg': 'Normal',\n      'exercise_angina': 'No',\n      'cognitive_score': 28,\n      'education_years': 16,\n      'symptoms_count': 2,\n      \n      // Pregnancy-related\n      'maternal_age': 28,\n      'gestational_age': 38,\n      'multiple_pregnancy': 'No',\n      \n      // Work and lifestyle\n      'work_type': 'Private',\n      'residence_type': 'Urban',\n      'ever_married': 'Yes',\n      'environmental_exposure': 'No',\n      'sodium_intake_mg': 2800\n    };\n    \n    // Return specific example if available\n    if (examples[fieldName] !== undefined) {\n      return examples[fieldName];\n    }\n    \n    // Fallback based on field type\n    if (field.type === 'number') {\n      if (field.min !== undefined && field.max !== undefined) {\n        return Math.round((field.min + field.max) / 2);\n      }\n      return field.min || 0;\n    } else if (field.type === 'select' && field.options) {\n      return field.options[0];\n    } else if (field.type === 'checkbox') {\n      return false;\n    }\n    \n    return '';\n  };\n\n  // Convert backend field definitions to frontend form fields\n  const convertBackendFieldsToFormFields = (backendInfo: BackendFieldInfo): FormField[] => {\n    const fields: FormField[] = [];\n    \n    Object.entries(backendInfo.required_fields).forEach(([fieldName, fieldType]) => {\n      const description = backendInfo.field_descriptions[fieldName] || '';\n      \n      let formField: FormField = {\n        name: fieldName,\n        label: description.split('(')[0].trim() || fieldName.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n        type: 'text',\n        required: true,\n        description: description\n      };\n\n      // Determine field type and options based on field name and description\n      if (fieldType === 'int' || fieldType === 'float') {\n        formField.type = 'number';\n        if (fieldType === 'float') {\n          formField.step = 0.1;\n        }\n      }\n\n      // Special handling for common fields\n      if (fieldName === 'gender' || fieldName === 'sex') {\n        formField = {\n          ...formField,\n          name: 'gender', // Always use 'gender' internally\n          label: 'Gender',\n          type: 'select',\n          options: ['Female', 'Male'],\n          description: 'Gender (0 = Female, 1 = Male)'\n        };\n      } else if (fieldName === 'age') {\n        formField = {\n          ...formField,\n          type: 'number',\n          min: 0,\n          max: 120,\n          unit: 'years'\n        };\n      } else if (fieldName === 'maternal_age') {\n        formField = {\n          ...formField,\n          type: 'number',\n          min: 15,\n          max: 50,\n          unit: 'years'\n        };\n      } else if (fieldName === 'gestational_age') {\n        formField = {\n          ...formField,\n          type: 'number',\n          min: 20,\n          max: 42,\n          unit: 'weeks'\n        };\n      } else if (fieldName === 'systolic_bp' || fieldName === 'resting_bp') {\n        formField = {\n          ...formField,\n          type: 'number',\n          min: 80,\n          max: 200,\n          unit: 'mmHg'\n        };\n      } else if (fieldName === 'diastolic_bp') {\n        formField = {\n          ...formField,\n          type: 'number',\n          min: 50,\n          max: 120,\n          unit: 'mmHg'\n        };\n      } else if (fieldName === 'cholesterol' || fieldName === 'total_cholesterol') {\n        formField = {\n          ...formField,\n          type: 'number',\n          min: 100,\n          max: 400,\n          unit: 'mg/dL'\n        };\n      } else if (fieldName === 'bmi') {\n        formField = {\n          ...formField,\n          type: 'number',\n          min: 15,\n          max: 50,\n          step: 0.1,\n          unit: 'kg/mÂ²'\n        };\n      } else if (fieldName === 'smoking_status') {\n        formField = {\n          ...formField,\n          type: 'select',\n          options: ['Never smoked', 'Former smoker', 'Current smoker']\n        };\n      } else if (fieldName === 'chest_pain_type') {\n        formField = {\n          ...formField,\n          type: 'select',\n          options: ['Typical angina', 'Atypical angina', 'Non-anginal pain', 'Asymptomatic']\n        };\n      } else if (fieldName === 'resting_ecg') {\n        formField = {\n          ...formField,\n          type: 'select',\n          options: ['Normal', 'ST-T wave abnormality', 'Left ventricular hypertrophy']\n        };\n      } else if (fieldName === 'work_type') {\n        formField = {\n          ...formField,\n          type: 'select',\n          options: ['Private', 'Self-employed', 'Government', 'Never worked']\n        };\n      } else if (fieldName === 'residence_type') {\n        formField = {\n          ...formField,\n          type: 'select',\n          options: ['Urban', 'Rural']\n        };\n      } else if (fieldName === 'gender' || fieldName === 'sex') {\n        formField = {\n          ...formField,\n          type: 'select',\n          options: ['Female', 'Male']\n        };\n      } else if (\n        fieldName.includes('yes') || \n        fieldName.includes('no') || \n        description.includes('1 = yes, 0 = no') ||\n        description.includes('1 = Yes, 0 = No') ||\n        description.includes('(1 = yes, 0 = no)') ||\n        description.includes('(1 = Yes, 0 = No)') ||\n        (fieldType === 'int' && (\n          (description && description.toLowerCase().includes('yes') && description.toLowerCase().includes('no')) ||\n          (fieldName.endsWith('_status') && description.includes('1') && description.includes('0')) ||\n          fieldName.includes('hypertension') ||\n          fieldName.includes('diabetes') ||\n          fieldName.includes('heart_disease') ||\n          (fieldName.includes('smoking') && !fieldName.includes('status')) ||\n          (fieldName.includes('alcohol') && !fieldName.includes('consumption')) ||\n          fieldName.includes('family_history') ||\n          fieldName.includes('chronic') ||\n          fieldName.includes('emergency') ||\n          fieldName.includes('transfusion') ||\n          fieldName.includes('multiple_pregnancy') ||\n          fieldName.includes('assisted_reproduction') ||\n          fieldName.includes('previous_complications') ||\n          fieldName.includes('occupational_exposure') ||\n          fieldName.includes('hormonal_factors') ||\n          fieldName.includes('previous_cancer') ||\n          fieldName.includes('immunocompromised') ||\n          fieldName.includes('ever_married') ||\n          fieldName.includes('cough') ||\n          fieldName.includes('shortness_of_breath') ||\n          fieldName.includes('loss_of_taste_smell') ||\n          (fieldName.includes('chest_pain') && !fieldName.includes('type')) ||\n          fieldName.includes('headache') ||\n          fieldName.includes('muscle_aches') ||\n          fieldName.includes('pale_skin') ||\n          fieldName.includes('cold_hands_feet') ||\n          fieldName.includes('brittle_nails') ||\n          fieldName.includes('strange_cravings') ||\n          fieldName.includes('change') ||\n          fieldName.includes('diabetesMed') ||\n          fieldName.includes('copd') ||\n          fieldName.includes('kidney_disease') ||\n          fieldName.includes('liver_disease') ||\n          (fieldName.includes('cancer') && !fieldName.includes('type')) ||\n          fieldName.includes('mobility') ||\n          fieldName.includes('fetal_growth_restriction') ||\n          fieldName.includes('autoimmune_disease') ||\n          fieldName.includes('chronic_hypertension') ||\n          fieldName.includes('diabetes_pre_pregnancy')\n        ))\n      ) {\n        formField = {\n          ...formField,\n          type: 'select',\n          options: ['No', 'Yes']\n        };\n      } else if (description.includes('0-') && description.includes('scale')) {\n        const match = description.match(/0-(\\d+)/);\n        if (match) {\n          formField = {\n            ...formField,\n            type: 'number',\n            min: 0,\n            max: parseInt(match[1])\n          };\n        }\n      }\n\n      fields.push(formField);\n    });\n\n    return fields;\n  };\n\n  // Mock predictor data - in real app, this would come from API\n  const predictorData: Record<string, PredictorInfo> = useMemo(() => ({\n    heart_disease: {\n      id: 'heart_disease',\n      name: 'Heart Disease Predictor',\n      description: 'Predict risk of heart attack, arrhythmia, or heart failure using cardiovascular health indicators.',\n      category: 'Disease Risk & Diagnosis',\n      icon: Heart,\n      difficulty: 'Medium',\n      estimatedTime: '5-7 min',\n      accuracy: '94%',\n      fields: [\n        { name: 'age', label: 'Age', type: 'number', required: true, min: 18, max: 120, unit: 'years' },\n        { name: 'sex', label: 'Sex', type: 'select', required: true, options: ['Male', 'Female'] },\n        { name: 'chest_pain_type', label: 'Chest Pain Type', type: 'select', required: true, options: ['Typical Angina', 'Atypical Angina', 'Non-Anginal Pain', 'Asymptomatic'] },\n        { name: 'resting_bp', label: 'Resting Blood Pressure', type: 'number', required: true, min: 80, max: 200, unit: 'mmHg' },\n        { name: 'cholesterol', label: 'Serum Cholesterol', type: 'number', required: true, min: 100, max: 400, unit: 'mg/dl' },\n        { name: 'fasting_bs', label: 'Fasting Blood Sugar > 120 mg/dl', type: 'radio', required: true, options: ['Yes', 'No'] },\n        { name: 'resting_ecg', label: 'Resting ECG Results', type: 'select', required: true, options: ['Normal', 'ST-T Wave Abnormality', 'Left Ventricular Hypertrophy'] },\n        { name: 'max_hr', label: 'Maximum Heart Rate Achieved', type: 'number', required: true, min: 60, max: 220, unit: 'bpm' },\n        { name: 'exercise_angina', label: 'Exercise Induced Angina', type: 'radio', required: true, options: ['Yes', 'No'] },\n        { name: 'oldpeak', label: 'ST Depression (Oldpeak)', type: 'number', required: true, min: 0, max: 10, step: 0.1, unit: 'mm' }\n      ]\n    },\n    stroke_risk: {\n      id: 'stroke_risk',\n      name: 'Stroke Risk Predictor',\n      description: 'Analyze blood pressure, cholesterol, lifestyle, and family history to assess stroke risk.',\n      category: 'Disease Risk & Diagnosis',\n      icon: Brain,\n      difficulty: 'Medium',\n      estimatedTime: '6-8 min',\n      accuracy: '92%',\n      fields: [\n        { name: 'age', label: 'Age', type: 'number', required: true, min: 18, max: 120, unit: 'years' },\n        { name: 'gender', label: 'Gender', type: 'select', required: true, options: ['Male', 'Female'] },\n        { name: 'hypertension', label: 'Hypertension', type: 'radio', required: true, options: ['Yes', 'No'] },\n        { name: 'heart_disease', label: 'Heart Disease', type: 'radio', required: true, options: ['Yes', 'No'] },\n        { name: 'ever_married', label: 'Ever Married', type: 'radio', required: true, options: ['Yes', 'No'] },\n        { name: 'work_type', label: 'Work Type', type: 'select', required: true, options: ['Private', 'Self-employed', 'Government Job', 'Children', 'Never Worked'] },\n        { name: 'residence_type', label: 'Residence Type', type: 'select', required: true, options: ['Urban', 'Rural'] },\n        { name: 'avg_glucose_level', label: 'Average Glucose Level', type: 'number', required: true, min: 50, max: 300, unit: 'mg/dL' },\n        { name: 'bmi', label: 'Body Mass Index (BMI)', type: 'number', required: true, min: 10, max: 50, step: 0.1, unit: 'kg/mÂ²' },\n        { name: 'smoking_status', label: 'Smoking Status', type: 'select', required: true, options: ['Never Smoked', 'Formerly Smoked', 'Smokes'] }\n      ]\n    },\n    mental_health: {\n      id: 'mental_health',\n      name: 'Mental Health Predictor',\n      description: 'Depression and anxiety detection using surveys, voice analysis, and wearable data.',\n      category: 'Lifestyle & Prevention',\n      icon: Brain,\n      difficulty: 'Medium',\n      estimatedTime: '8-10 min',\n      accuracy: '84%',\n      fields: [\n        { name: 'age', label: 'Age', type: 'number', required: true, min: 18, max: 100, unit: 'years' },\n        { name: 'gender', label: 'Gender', type: 'select', required: true, options: ['Male', 'Female', 'Other'] },\n        { name: 'sleep_hours', label: 'Average Sleep Hours per Night', type: 'number', required: true, min: 0, max: 24, step: 0.5, unit: 'hours' },\n        { name: 'stress_level', label: 'Stress Level (1-10)', type: 'number', required: true, min: 1, max: 10 },\n        { name: 'social_support', label: 'Social Support Level', type: 'select', required: true, options: ['Very Low', 'Low', 'Moderate', 'High', 'Very High'] },\n        { name: 'exercise_frequency', label: 'Exercise Frequency per Week', type: 'number', required: true, min: 0, max: 14, unit: 'times' },\n        { name: 'work_satisfaction', label: 'Work/Life Satisfaction', type: 'select', required: true, options: ['Very Dissatisfied', 'Dissatisfied', 'Neutral', 'Satisfied', 'Very Satisfied'] },\n        { name: 'family_history', label: 'Family History of Mental Health Issues', type: 'radio', required: true, options: ['Yes', 'No'] },\n        { name: 'substance_use', label: 'Substance Use', type: 'select', required: true, options: ['None', 'Occasional', 'Regular', 'Heavy'] },\n        { name: 'chronic_illness', label: 'Chronic Illness', type: 'radio', required: true, options: ['Yes', 'No'] }\n      ]\n    }\n  }), []);\n\n  useEffect(() => {\n    const fetchPredictorFields = async () => {\n      if (!predictorId) return;\n      \n      setIsLoadingFields(true);\n      setError(null);\n      \n      try {\n        // Check if we're in static mode\n        if (isStaticMode()) {\n          // Use hardcoded data for static mode\n          if (predictorData[predictorId]) {\n            setPredictor(predictorData[predictorId]);\n            const initialData: Record<string, any> = {};\n            predictorData[predictorId].fields.forEach(field => {\n              initialData[field.name] = getDefaultExampleValue(field.name, field);\n            });\n            setFormData(initialData);\n            \n            // Calculate initial form progress\n            const filledFields = Object.values(initialData).filter(val => \n              val !== '' && val !== null && val !== undefined\n            ).length;\n            setFormProgress((filledFields / (predictorData[predictorId]?.fields?.length || 1)) * 100);\n          } else {\n            throw new Error('Predictor not found in static mode');\n          }\n        } else {\n          // Fetch field definitions from backend\n          const response = await fetch(buildApiUrl(API_ENDPOINTS.PREDICTOR_FIELDS(predictorId)));\n          if (!response.ok) {\n            throw new Error(`Failed to fetch predictor fields: ${response.statusText}`);\n          }\n          \n          const backendInfo: BackendFieldInfo = await response.json();\n          setBackendFields(backendInfo);\n          \n          // Convert backend fields to frontend form fields\n          const formFields = convertBackendFieldsToFormFields(backendInfo);\n          \n          // Create predictor info with dynamic fields\n          const predictorInfo: PredictorInfo = {\n            id: predictorId,\n            name: backendInfo.name,\n            description: backendInfo.description,\n            category: 'Health Assessment',\n            icon: Heart, // Default icon\n            difficulty: 'Medium',\n            estimatedTime: '5-10 min',\n            accuracy: '85%',\n            fields: formFields\n          };\n          \n          setPredictor(predictorInfo);\n          \n          // Initialize form data with example values\n          const initialData: Record<string, any> = {};\n          formFields.forEach(field => {\n            initialData[field.name] = getDefaultExampleValue(field.name, field);\n          });\n          setFormData(initialData);\n          \n          // Calculate initial form progress\n          const filledFields = Object.values(initialData).filter(val => \n            val !== '' && val !== null && val !== undefined\n          ).length;\n          setFormProgress((filledFields / (formFields?.length || 1)) * 100);\n        }\n        \n      } catch (err) {\n        console.error('Error fetching predictor fields:', err);\n        setError(err instanceof Error ? err.message : 'Failed to load predictor');\n        \n        // Fallback to hardcoded data if available\n        if (predictorData[predictorId]) {\n          setPredictor(predictorData[predictorId]);\n          const initialData: Record<string, any> = {};\n          predictorData[predictorId].fields.forEach(field => {\n            initialData[field.name] = getDefaultExampleValue(field.name, field);\n          });\n          setFormData(initialData);\n          \n          // Calculate initial form progress\n          const filledFields = Object.values(initialData).filter(val => \n            val !== '' && val !== null && val !== undefined\n          ).length;\n          setFormProgress((filledFields / (predictorData[predictorId]?.fields?.length || 1)) * 100);\n        }\n      } finally {\n        setIsLoadingFields(false);\n      }\n    };\n    \n    fetchPredictorFields();\n  }, [predictorId, predictorData]);\n\n  const validateField = (field: FormField, value: any): string | null => {\n    // Required field validation\n    if (field.required && (value === '' || value === null || value === undefined)) {\n      return `${field.label} is required`;\n    }\n\n    // Number field validation\n    if (field.type === 'number' && value !== '' && value !== null && value !== undefined) {\n      const numValue = parseFloat(value);\n      if (isNaN(numValue)) {\n        return `${field.label} must be a valid number`;\n      }\n      if (field.min !== undefined && numValue < field.min) {\n        return `${field.label} must be at least ${field.min}`;\n      }\n      if (field.max !== undefined && numValue > field.max) {\n        return `${field.label} must be no more than ${field.max}`;\n      }\n    }\n\n    // Age-specific validation\n    if (field.name === 'age' && value) {\n      const age = parseFloat(value);\n      if (age < 0 || age > 150) {\n        return 'Please enter a valid age between 0 and 150';\n      }\n    }\n\n    // Blood pressure validation\n    if (field.name.includes('bp') || field.name.includes('blood_pressure')) {\n      const bp = parseFloat(value);\n      if (bp && (bp < 50 || bp > 300)) {\n        return 'Please enter a realistic blood pressure value';\n      }\n    }\n\n    return null;\n  };\n\n  const handleInputChange = (name: string, value: any) => {\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    // Validate field in real-time\n    const field = predictor?.fields.find(f => f.name === name);\n    if (field) {\n      const error = validateField(field, value);\n      setFieldErrors(prev => ({\n        ...prev,\n        [name]: error || ''\n      }));\n    }\n    \n    // Update form progress\n    const filledFields = Object.values({ ...formData, [name]: value }).filter(val => \n      val !== '' && val !== null && val !== undefined\n    ).length;\n    const totalFields = predictor?.fields?.length || 1;\n    setFormProgress((filledFields / totalFields) * 100);\n  };\n\n  // Helper function to get appropriate icon for field\n  const getFieldIcon = (fieldName: string) => {\n    const iconMap: Record<string, React.ReactNode> = {\n      age: <Calendar className=\"h-4 w-4 text-gray-500\" />,\n      sex: <User className=\"h-4 w-4 text-gray-500\" />,\n      gender: <User className=\"h-4 w-4 text-gray-500\" />,\n      chest_pain_type: <Heart className=\"h-4 w-4 text-gray-500\" />,\n      resting_bp: <Activity className=\"h-4 w-4 text-gray-500\" />,\n      cholesterol: <Droplets className=\"h-4 w-4 text-gray-500\" />,\n      fasting_bs: <Droplets className=\"h-4 w-4 text-gray-500\" />,\n      resting_ecg: <Zap className=\"h-4 w-4 text-gray-500\" />,\n      max_hr: <Heart className=\"h-4 w-4 text-gray-500\" />,\n      exercise_angina: <Activity className=\"h-4 w-4 text-gray-500\" />,\n      oldpeak: <TrendingUp className=\"h-4 w-4 text-gray-500\" />,\n      st_slope: <TrendingUp className=\"h-4 w-4 text-gray-500\" />,\n      bmi: <Scale className=\"h-4 w-4 text-gray-500\" />,\n      temperature: <Thermometer className=\"h-4 w-4 text-gray-500\" />,\n      blood_pressure: <Stethoscope className=\"h-4 w-4 text-gray-500\" />,\n      mental_health: <Brain className=\"h-4 w-4 text-gray-500\" />\n    };\n    \n    return iconMap[fieldName] || <Activity className=\"h-4 w-4 text-gray-500\" />;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!predictor || !backendFields) return;\n\n    // Validate all fields before submission\n    const errors: Record<string, string> = {};\n    predictor?.fields?.forEach(field => {\n      const value = formData[field.name];\n      const error = validateField(field, value);\n      if (error) {\n        errors[field.name] = error;\n      }\n    });\n    \n    setFieldErrors(errors);\n    \n    // Don't submit if there are validation errors\n    if (Object.keys(errors).length > 0) {\n      setError('Please fix the validation errors before submitting.');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Convert form data to backend format\n      const backendData: Record<string, any> = {};\n      \n      Object.entries(formData).forEach(([fieldName, value]) => {\n        // Map frontend field names to backend field names\n        const backendFieldName = getBackendFieldName(fieldName, predictor.id);\n        const fieldType = backendFields.required_fields[backendFieldName];\n        \n        if (value === '' || value === null || value === undefined) {\n          return; // Skip empty values\n        }\n        \n        // Convert values based on backend field type\n        if (fieldType === 'int') {\n          if (fieldName === 'gender' || backendFieldName === 'sex' || backendFieldName === 'gender') {\n            // Convert gender: Female = 0, Male = 1\n            backendData[backendFieldName] = value === 'Male' || value === 1 ? 1 : 0;\n          } else if (fieldName === 'chest_pain_type') {\n            // Convert chest pain type to numeric\n            const mapping = { 'Typical angina': 0, 'Atypical angina': 1, 'Non-anginal pain': 2, 'Asymptomatic': 3 };\n            backendData[backendFieldName] = mapping[value as string] || 0;\n          } else if (fieldName === 'resting_ecg') {\n            // Convert ECG results to numeric\n            const mapping = { 'Normal': 0, 'ST-T wave abnormality': 1, 'Left ventricular hypertrophy': 2 };\n            backendData[backendFieldName] = mapping[value as string] || 0;\n          } else if (fieldName === 'smoking_status') {\n            // Convert smoking status to numeric\n            const mapping = { 'Never smoked': 0, 'Former smoker': 1, 'Current smoker': 2 };\n            backendData[backendFieldName] = mapping[value as string] || 0;\n          } else if (fieldName === 'work_type') {\n            // Convert work type to numeric\n            const mapping = { 'Private': 0, 'Self-employed': 1, 'Government': 2, 'Never worked': 4 };\n            backendData[backendFieldName] = mapping[value as string] || 0;\n          } else if (fieldName === 'residence_type') {\n            // Convert residence type to numeric\n            backendData[backendFieldName] = value === 'Urban' ? 1 : 0;\n          } else if (typeof value === 'string' && (value === 'Yes' || value === 'No')) {\n            // Convert Yes/No to 1/0\n            backendData[backendFieldName] = value === 'Yes' ? 1 : 0;\n          } else {\n            backendData[backendFieldName] = parseInt(value.toString());\n          }\n        } else if (fieldType === 'float') {\n          backendData[backendFieldName] = parseFloat(value.toString());\n        } else {\n          backendData[backendFieldName] = value;\n        }\n      });\n\n      console.log('Sending data to backend:', backendData);\n\n      // Check if we're in static mode (no backend)\n      const isStaticMode = process.env.REACT_APP_STATIC_MODE === 'true';\n      \n      if (isStaticMode) {\n        // Use mock data for static deployment\n        await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate API delay\n        \n        const mockResult = {\n          risk_score: Math.random() * 100,\n          risk_level: ['Low', 'Medium', 'High'][Math.floor(Math.random() * 3)],\n          confidence: 85 + Math.random() * 10,\n          recommendations: [\n            'Maintain a balanced diet rich in fruits and vegetables',\n            'Exercise regularly for at least 30 minutes daily',\n            'Monitor your health metrics regularly',\n            'Consult with healthcare professionals for personalized advice'\n          ],\n          analysis: 'This is a demonstration using mock data. In a real deployment with backend, you would receive personalized health predictions based on your input data.'\n        };\n        \n        setResult(mockResult);\n        setCurrentStep(1);\n      } else {\n        // Original API call logic for when backend is available\n        const response = await axios.post(buildApiUrl(API_ENDPOINTS.PREDICT), {\n          predictor_type: predictor.id,\n          data: backendData,\n          include_analysis: true\n        });\n        setResult(response.data);\n        setCurrentStep(1);\n      }\n    } catch (err: any) {\n      console.error('Prediction error:', err);\n      setError(err.response?.data?.error || 'An error occurred while making the prediction.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getRiskColor = (riskLevel: string) => {\n    switch (riskLevel) {\n      case 'Low': return 'text-green-600 dark:text-green-400 bg-green-100 dark:bg-green-900/30';\n      case 'Medium': return 'text-yellow-600 dark:text-yellow-400 bg-yellow-100 dark:bg-yellow-900/30';\n      case 'High': return 'text-orange-600 dark:text-orange-400 bg-orange-100 dark:bg-orange-900/30';\n      case 'Critical': return 'text-red-600 dark:text-red-400 bg-red-100 dark:bg-red-900/30';\n      default: return 'text-gray-600 dark:text-gray-400 bg-gray-100 dark:bg-gray-800';\n    }\n  };\n\n  const getRiskIcon = (riskLevel: string) => {\n    switch (riskLevel) {\n      case 'Low': return CheckCircle;\n      case 'Medium': return Info;\n      case 'High': return AlertTriangle;\n      case 'Critical': return AlertTriangle;\n      default: return Info;\n    }\n  };\n\n  const handleDownloadPDF = async () => {\n    if (!result || !predictor) return;\n    \n    // Check if we're in static mode (no backend)\n    const isStaticMode = process.env.REACT_APP_STATIC_MODE === 'true';\n    \n    if (isStaticMode) {\n      // Show message that PDF download is not available in static mode\n      setError('PDF download is not available in static demo mode. This feature requires a backend server.');\n      return;\n    }\n    \n    setIsDownloadingPDF(true);\n    try {\n      const response = await fetch(buildApiUrl(API_ENDPOINTS.DOWNLOAD_REPORT), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          prediction_data: {\n            predictor_type: predictor.id,\n            risk_score: result.risk_score,\n            risk_level: result.risk_level,\n            confidence: result.confidence,\n            recommendations: result.recommendations\n          },\n          user_data: formData\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to generate PDF report');\n      }\n      \n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `${predictor.id}_health_report_${new Date().toISOString().split('T')[0]}.pdf`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('PDF download error:', error);\n      setError('Failed to download PDF report. Please try again.');\n    } finally {\n      setIsDownloadingPDF(false);\n    }\n  };\n\n  const renderField = (field: FormField) => {\n    const value = formData[field.name] || '';\n    const fieldError = fieldErrors[field.name];\n    const hasError = !!fieldError;\n\n    switch (field.type) {\n      case 'number':\n        const numValue = parseFloat(value) || field.min || 0;\n        const showSlider = field.min !== undefined && field.max !== undefined && (field.max - field.min) <= 200;\n        \n        return (\n          <div key={field.name} className=\"form-group\">\n            <label className=\"form-label flex items-center gap-2\">\n              <span className=\"flex items-center gap-1\">\n                {getFieldIcon(field.name)}\n                {field.label}\n                {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n              </span>\n              {field.description && (\n                <div className=\"relative group\">\n                  <HelpCircle className=\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\" />\n                  <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                    {field.description}\n                  </div>\n                </div>\n              )}\n            </label>\n            \n            {showSlider ? (\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center gap-4\">\n                  <input\n                    type=\"range\"\n                    value={numValue}\n                    onChange={(e) => handleInputChange(field.name, parseFloat(e.target.value))}\n                    min={field.min}\n                    max={field.max}\n                    step={field.step || 1}\n                    className=\"flex-1 h-2 bg-gray-200 dark:bg-gray-700 rounded-lg appearance-none cursor-pointer slider\"\n                    style={{\n                      background: `linear-gradient(to right, #3b82f6 0%, #3b82f6 ${((numValue - (field.min || 0)) / ((field.max || 100) - (field.min || 0))) * 100}%, #e5e7eb ${((numValue - (field.min || 0)) / ((field.max || 100) - (field.min || 0))) * 100}%, #e5e7eb 100%)`\n                    }}\n                  />\n                  <div className=\"min-w-[80px] px-3 py-2 bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-lg text-sm font-medium text-blue-700 dark:text-blue-300 text-center\">\n                    {numValue}{field.unit && ` ${field.unit}`}\n                  </div>\n                </div>\n                <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400\">\n                  <span>{field.min}{field.unit && ` ${field.unit}`}</span>\n                  <span>{field.max}{field.unit && ` ${field.unit}`}</span>\n                </div>\n              </div>\n            ) : (\n              <div className=\"relative\">\n                <input\n                  type=\"number\"\n                  value={value}\n                  onChange={(e) => handleInputChange(field.name, parseFloat(e.target.value) || '')}\n                  min={field.min}\n                  max={field.max}\n                  step={field.step || 1}\n                  required={field.required}\n                  className={`input pr-12 ${hasError ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : 'border-gray-300 focus:border-blue-500 focus:ring-blue-500'} transition-colors duration-200`}\n                  placeholder={`Enter ${field.label.toLowerCase()}`}\n                />\n                {field.unit && (\n                  <span className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 dark:text-gray-400 text-sm font-medium\">\n                    {field.unit}\n                  </span>\n                )}\n                {hasError && (\n                  <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                    <AlertTriangle className=\"h-4 w-4 text-red-500\" />\n                  </div>\n                )}\n              </div>\n            )}\n            \n            {hasError && (\n              <p className=\"text-sm text-red-600 mt-1 flex items-center gap-1\">\n                <AlertTriangle className=\"h-3 w-3\" />\n                {fieldError}\n              </p>\n            )}\n            {field.min !== undefined && field.max !== undefined && !showSlider && (\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                Range: {field.min} - {field.max} {field.unit}\n              </p>\n            )}\n          </div>\n        );\n\n      case 'select':\n        return (\n          <div key={field.name} className=\"form-group\">\n            <label className=\"form-label flex items-center gap-2\">\n              <span className=\"flex items-center gap-1\">\n                {getFieldIcon(field.name)}\n                {field.label}\n                {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n              </span>\n              {field.description && (\n                <div className=\"relative group\">\n                  <HelpCircle className=\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\" />\n                  <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                    {field.description}\n                  </div>\n                </div>\n              )}\n            </label>\n            <div className=\"relative\">\n              <select\n                value={value}\n                onChange={(e) => handleInputChange(field.name, e.target.value)}\n                required={field.required}\n                className={`input appearance-none ${hasError ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : 'border-gray-300 focus:border-blue-500 focus:ring-blue-500'} transition-colors duration-200`}\n              >\n                <option value=\"\">Select {field.label}</option>\n                {field.options?.map(option => (\n                  <option key={option} value={option}>{option}</option>\n                ))}\n              </select>\n              <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\n              {hasError && (\n                <div className=\"absolute right-8 top-1/2 transform -translate-y-1/2\">\n                  <AlertTriangle className=\"h-4 w-4 text-red-500\" />\n                </div>\n              )}\n            </div>\n            {hasError && (\n              <p className=\"text-sm text-red-600 mt-1 flex items-center gap-1\">\n                <AlertTriangle className=\"h-3 w-3\" />\n                {fieldError}\n              </p>\n            )}\n          </div>\n        );\n\n      case 'radio':\n        return (\n          <div key={field.name} className=\"form-group\">\n            <label className=\"form-label flex items-center gap-2 mb-3\">\n              <span className=\"flex items-center gap-1\">\n                {getFieldIcon(field.name)}\n                {field.label}\n                {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n              </span>\n              {field.description && (\n                <div className=\"relative group\">\n                  <HelpCircle className=\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\" />\n                  <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                    {field.description}\n                  </div>\n                </div>\n              )}\n            </label>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n              {field.options?.map(option => (\n                <label key={option} className={`flex items-center p-3 border rounded-lg cursor-pointer transition-all duration-200 hover:bg-gray-50 dark:hover:bg-gray-800 ${\n                  value === option \n                    ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300' \n                    : 'border-gray-200 dark:border-gray-700'\n                }`}>\n                  <input\n                    type=\"radio\"\n                    name={field.name}\n                    value={option}\n                    checked={value === option}\n                    onChange={(e) => handleInputChange(field.name, e.target.value)}\n                    required={field.required}\n                    className=\"mr-3 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <span className=\"font-medium\">{option}</span>\n                </label>\n              ))}\n            </div>\n            {hasError && (\n              <p className=\"text-sm text-red-600 mt-2 flex items-center gap-1\">\n                <AlertTriangle className=\"h-3 w-3\" />\n                {fieldError}\n              </p>\n            )}\n          </div>\n        );\n\n      case 'checkbox':\n        return (\n          <div key={field.name} className=\"form-group\">\n            <div className=\"flex items-start gap-3\">\n              <div className=\"flex items-center h-5\">\n                <input\n                  type=\"checkbox\"\n                  checked={value}\n                  onChange={(e) => handleInputChange(field.name, e.target.checked)}\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded transition-colors duration-200\"\n                />\n              </div>\n              <div className=\"flex-1\">\n                <label className=\"flex items-center gap-2 cursor-pointer\">\n                  <span className=\"flex items-center gap-1\">\n                    {getFieldIcon(field.name)}\n                    {field.label}\n                    {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n                  </span>\n                  {field.description && (\n                    <div className=\"relative group\">\n                      <HelpCircle className=\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\" />\n                      <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                        {field.description}\n                      </div>\n                    </div>\n                  )}\n                </label>\n                {hasError && (\n                  <p className=\"text-sm text-red-600 mt-1 flex items-center gap-1\">\n                    <AlertTriangle className=\"h-3 w-3\" />\n                    {fieldError}\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return (\n          <div key={field.name} className=\"form-group\">\n            <label className=\"form-label flex items-center gap-2\">\n              <span className=\"flex items-center gap-1\">\n                {getFieldIcon(field.name)}\n                {field.label}\n                {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n              </span>\n              {field.description && (\n                <div className=\"relative group\">\n                  <HelpCircle className=\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\" />\n                  <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                    {field.description}\n                  </div>\n                </div>\n              )}\n            </label>\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                value={value}\n                onChange={(e) => handleInputChange(field.name, e.target.value)}\n                required={field.required}\n                className={`input ${hasError ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : 'border-gray-300 focus:border-blue-500 focus:ring-blue-500'} transition-colors duration-200`}\n                placeholder={`Enter ${field.label.toLowerCase()}`}\n              />\n              {hasError && (\n                <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                  <AlertTriangle className=\"h-4 w-4 text-red-500\" />\n                </div>\n              )}\n            </div>\n            {hasError && (\n              <p className=\"text-sm text-red-600 mt-1 flex items-center gap-1\">\n                <AlertTriangle className=\"h-3 w-3\" />\n                {fieldError}\n              </p>\n            )}\n          </div>\n        );\n    }\n  };\n\n  if (isLoadingFields) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center transition-colors duration-300\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 dark:border-blue-400 mx-auto mb-4\"></div>\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">Loading Predictor...</h2>\n          <p className=\"text-gray-600 dark:text-gray-300\">Fetching field definitions from server</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!predictor) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">Predictor Not Found</h2>\n          <p className=\"text-gray-600 dark:text-gray-300 mb-6\">The requested predictor could not be found.</p>\n          <Link to=\"/predictors\" className=\"btn-primary\">\n            Back to Predictors\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  const Icon = predictor.icon;\n\n  return (\n    <div className=\"min-h-screen py-8\">\n      <style>{`\n        .slider::-webkit-slider-thumb {\n          appearance: none;\n          height: 20px;\n          width: 20px;\n          border-radius: 50%;\n          background: #3b82f6;\n          cursor: pointer;\n          border: 2px solid #ffffff;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n        }\n        .slider::-moz-range-thumb {\n          height: 20px;\n          width: 20px;\n          border-radius: 50%;\n          background: #3b82f6;\n          cursor: pointer;\n          border: 2px solid #ffffff;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n        }\n        .slider:focus::-webkit-slider-thumb {\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\n        }\n        .slider:focus::-moz-range-thumb {\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\n        }\n      `}</style>\n      <div className=\"container-max section-padding\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          className=\"mb-8\"\n        >\n          <Link\n            to=\"/predictors\"\n            className=\"inline-flex items-center text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 mb-6 transition-colors duration-200\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back to Predictors\n          </Link>\n          \n          <div className=\"flex items-start space-x-6\">\n            <div className=\"w-16 h-16 bg-primary-100 dark:bg-primary-900/30 rounded-xl flex items-center justify-center\">\n              <Icon className=\"h-8 w-8 text-primary-600 dark:text-primary-400\" />\n            </div>\n            <div className=\"flex-1\">\n              <h1 className=\"text-3xl lg:text-4xl font-display font-bold text-gray-900 dark:text-white mb-2\">\n                {predictor.name}\n              </h1>\n              <p className=\"text-lg text-gray-600 dark:text-gray-300 mb-4\">{predictor.description}</p>\n              <div className=\"flex items-center space-x-6 text-sm\">\n                <div className=\"flex items-center text-gray-500 dark:text-gray-400\">\n                  <Clock className=\"h-4 w-4 mr-1\" />\n                  {predictor.estimatedTime}\n                </div>\n                <div className=\"text-green-600 dark:text-green-400 font-medium\">\n                  {predictor.accuracy} accuracy\n                </div>\n                <span className=\"px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full text-xs font-medium\">\n                  {predictor.difficulty}\n                </span>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n\n        {currentStep === 0 ? (\n          /* Form Step */\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n          >\n            <div className=\"card max-w-4xl mx-auto\">\n              {/* Form Header with Progress */}\n              <div className=\"mb-8\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Health Assessment Form</h2>\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {Math.round(formProgress)}% Complete\n                  </div>\n                </div>\n                \n                {/* Progress Bar */}\n                <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mb-6\">\n                  <div \n                    className=\"bg-gradient-to-r from-blue-500 to-blue-600 h-2 rounded-full transition-all duration-500 ease-out\"\n                    style={{ width: `${formProgress}%` }}\n                  ></div>\n                </div>\n                \n                <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\n                  Please fill out all required fields to get your personalized health assessment.\n                </p>\n              </div>\n              \n              {error && (\n                <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4 mb-6\">\n                  <div className=\"flex items-center\">\n                    <AlertTriangle className=\"h-5 w-5 text-red-600 dark:text-red-400 mr-2\" />\n                    <span className=\"text-red-800 dark:text-red-300\">{error}</span>\n                  </div>\n                </div>\n              )}\n\n              <form onSubmit={handleSubmit} className=\"space-y-8\">\n                {/* Form Fields organized by sections */}\n                <div className=\"space-y-8\">\n                  {/* Basic Information Section */}\n                  <div className=\"border-b border-gray-200 dark:border-gray-700 pb-6\">\n                    <div className=\"flex items-center gap-2 mb-4\">\n                      <User className=\"h-5 w-5 text-blue-600 dark:text-blue-400\" />\n                      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Basic Information</h3>\n                    </div>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\">\n                      {predictor?.fields?.filter(field => \n                        ['age', 'gender', 'sex', 'ever_married', 'work_type', 'residence_type'].includes(field.name)\n                      ).map(renderField)}\n                    </div>\n                  </div>\n\n                  {/* Health Metrics Section */}\n                  <div className=\"border-b border-gray-200 dark:border-gray-700 pb-6\">\n                    <div className=\"flex items-center gap-2 mb-4\">\n                      <Heart className=\"h-5 w-5 text-red-600 dark:text-red-400\" />\n                      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Health Metrics</h3>\n                    </div>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\">\n                      {predictor?.fields?.filter(field => \n                        ['resting_bp', 'cholesterol', 'fasting_bs', 'avg_glucose_level', 'bmi', 'max_hr', 'oldpeak'].includes(field.name)\n                      ).map(renderField)}\n                    </div>\n                  </div>\n\n                  {/* Medical History Section */}\n                  <div className=\"border-b border-gray-200 dark:border-gray-700 pb-6\">\n                    <div className=\"flex items-center gap-2 mb-4\">\n                      <FileText className=\"h-5 w-5 text-green-600 dark:text-green-400\" />\n                      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Medical History</h3>\n                    </div>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\">\n                      {predictor?.fields?.filter(field => \n                        ['hypertension', 'heart_disease', 'chest_pain_type', 'resting_ecg', 'exercise_angina', 'family_history', 'chronic_illness'].includes(field.name)\n                      ).map(renderField)}\n                    </div>\n                  </div>\n\n                  {/* Lifestyle Factors Section */}\n                  <div className=\"pb-6\">\n                    <div className=\"flex items-center gap-2 mb-4\">\n                      <Activity className=\"h-5 w-5 text-purple-600 dark:text-purple-400\" />\n                      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Lifestyle Factors</h3>\n                    </div>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\">\n                      {predictor?.fields?.filter(field => \n                        ['smoking_status', 'sleep_hours', 'stress_level', 'social_support', 'exercise_frequency', 'work_satisfaction', 'substance_use'].includes(field.name)\n                      ).map(renderField)}\n                    </div>\n                  </div>\n\n                  {/* Other Fields Section */}\n                  {predictor?.fields?.filter(field => \n                    !['age', 'gender', 'sex', 'ever_married', 'work_type', 'residence_type', \n                      'resting_bp', 'cholesterol', 'fasting_bs', 'avg_glucose_level', 'bmi', 'max_hr', 'oldpeak',\n                      'hypertension', 'heart_disease', 'chest_pain_type', 'resting_ecg', 'exercise_angina', 'family_history', 'chronic_illness',\n                      'smoking_status', 'sleep_hours', 'stress_level', 'social_support', 'exercise_frequency', 'work_satisfaction', 'substance_use'].includes(field.name)\n                  ).length > 0 && (\n                    <div className=\"pb-6\">\n                      <div className=\"flex items-center gap-2 mb-4\">\n                        <BarChart3 className=\"h-5 w-5 text-gray-600 dark:text-gray-400\" />\n                        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Additional Information</h3>\n                      </div>\n                      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                        {predictor?.fields?.filter(field => \n                          !['age', 'gender', 'sex', 'ever_married', 'work_type', 'residence_type', \n                            'resting_bp', 'cholesterol', 'fasting_bs', 'avg_glucose_level', 'bmi', 'max_hr', 'oldpeak',\n                            'hypertension', 'heart_disease', 'chest_pain_type', 'resting_ecg', 'exercise_angina', 'family_history', 'chronic_illness',\n                            'smoking_status', 'sleep_hours', 'stress_level', 'social_support', 'exercise_frequency', 'work_satisfaction', 'substance_use'].includes(field.name)\n                        ).map(renderField)}\n                      </div>\n                    </div>\n                  )}\n                </div>\n                \n                {/* Form Actions */}\n                <div className=\"flex flex-col sm:flex-row items-center justify-between pt-8 border-t border-gray-200 dark:border-gray-700\">\n                  <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-4 sm:mb-0\">\n                    <CheckCircle className=\"h-4 w-4 mr-2 text-green-500\" />\n                    <span>\n                      {Object.values(formData).filter(val => val !== '' && val !== null && val !== undefined).length} of {predictor?.fields?.length || 0} fields completed\n                    </span>\n                  </div>\n                  \n                  <button\n                    type=\"submit\"\n                    disabled={isLoading || formProgress < 100 || Object.values(fieldErrors).some(error => error)}\n                    className=\"btn-primary px-8 py-3 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2 min-w-[160px] justify-center transition-all duration-200 hover:shadow-lg\"\n                  >\n                    {isLoading ? (\n                      <>\n                        <Loader className=\"animate-spin h-5 w-5\" />\n                        <span>Analyzing...</span>\n                      </>\n                    ) : (\n                      <>\n                        <TrendingUp className=\"h-5 w-5\" />\n                        <span>Get Prediction</span>\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </motion.div>\n        ) : (\n          /* Results Step */\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            {result && (\n              <div className=\"max-w-4xl mx-auto space-y-6\">\n                {/* Risk Assessment */}\n                <div className=\"card\">\n                  <div className=\"flex items-center justify-between mb-6\">\n                    <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Risk Assessment</h2>\n                    <div className=\"flex space-x-2\">\n                      <button \n                        onClick={handleDownloadPDF}\n                        disabled={isDownloadingPDF}\n                        className=\"btn-outline p-2 relative\"\n                        title=\"Download PDF Report\"\n                      >\n                        {isDownloadingPDF ? (\n                          <div className=\"animate-spin h-4 w-4 border-2 border-current border-t-transparent rounded-full\" />\n                        ) : (\n                          <Download className=\"h-4 w-4\" />\n                        )}\n                      </button>\n                      <button className=\"btn-outline p-2\" title=\"Share Report\">\n                        <Share2 className=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n                    <div className=\"text-center\">\n                      <div className={`inline-flex items-center px-4 py-2 rounded-full text-lg font-semibold ${getRiskColor(result.risk_level)}`}>\n                        {React.createElement(getRiskIcon(result.risk_level), { className: 'h-5 w-5 mr-2' })}\n                        {result.risk_level} Risk\n                      </div>\n                      <p className=\"text-sm text-gray-500 mt-2\">Risk Level</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                        {Math.round(result.risk_score * 100)}%\n                      </div>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">Risk Score</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                        {Math.round(result.confidence * 100)}%\n                      </div>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">Confidence</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4\">\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">Explanation</h3>\n                    <p className=\"text-gray-700 dark:text-gray-300\">{result.explanation}</p>\n                  </div>\n                </div>\n\n                {/* Risk Factors */}\n                {result.risk_factors?.length > 0 && (\n                  <div className=\"card\">\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">Key Risk Factors</h3>\n                    <div className=\"space-y-2\">\n                      {result.risk_factors.map((factor, index) => (\n                        <div key={index} className=\"flex items-center p-3 bg-orange-50 dark:bg-orange-900/20 rounded-lg\">\n                          <AlertTriangle className=\"h-5 w-5 text-orange-600 dark:text-orange-400 mr-3\" />\n                          <span className=\"text-orange-800 dark:text-orange-300\">{factor}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* Recommendations */}\n                {result.recommendations?.length > 0 && (\n                  <div className=\"card\">\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">Recommendations</h3>\n                    <div className=\"space-y-3\">\n                      {result.recommendations.map((recommendation, index) => (\n                        <div key={index} className=\"flex items-start p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                          <CheckCircle className=\"h-5 w-5 text-blue-600 dark:text-blue-400 mr-3 mt-0.5\" />\n                          <span className=\"text-blue-800 dark:text-blue-300\">{recommendation}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* Contributing Factors */}\n                {result.detailed_analysis?.contributing_factors && result.detailed_analysis.contributing_factors.length > 0 && (\n                  <div className=\"card\">\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">Contributing Factors</h3>\n                    <div className=\"space-y-2\">\n                      {result.detailed_analysis.contributing_factors.map((factor, index) => (\n                        <div key={index} className=\"flex items-center p-3 bg-purple-50 dark:bg-purple-900/20 rounded-lg\">\n                          <TrendingUp className=\"h-5 w-5 text-purple-600 dark:text-purple-400 mr-3\" />\n                          <span className=\"text-purple-800 dark:text-purple-300\">{factor}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* Health Metrics */}\n                {result.detailed_analysis?.health_metrics && result.detailed_analysis.health_metrics.length > 0 && (\n                  <div className=\"card\">\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">Health Metrics Analysis</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      {result.detailed_analysis.health_metrics.map((metric, index) => (\n                        <div key={index} className=\"p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <h4 className=\"font-semibold text-green-900 dark:text-green-100\">{metric.category}</h4>\n                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                              metric.status === 'Normal' ? 'bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100' :\n                              metric.status === 'Warning' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100' :\n                              'bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100'\n                            }`}>\n                              {metric.status}\n                            </span>\n                          </div>\n                          <p className=\"text-green-700 dark:text-green-300 mb-2\">{metric.value}</p>\n                          {metric.recommendation && (\n                            <p className=\"text-sm text-green-600 dark:text-green-400\">{metric.recommendation}</p>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* Risk Score Visualization */}\n                {result.risk_score !== undefined && (\n                  <div className=\"card\">\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center gap-2\">\n                      <BarChart3 className=\"h-6 w-6 text-purple-600 dark:text-purple-400\" />\n                      Risk Assessment Overview\n                    </h3>\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                      {/* Risk Score Display */}\n                      <div className=\"bg-gradient-to-br from-purple-50 to-indigo-50 dark:from-purple-900/20 dark:to-indigo-900/20 rounded-xl p-6\">\n                        <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4 text-center\">Overall Risk Level</h4>\n                        <div className=\"flex flex-col items-center justify-center py-8\">\n                          {/* Circular Progress Chart */}\n                          <div className=\"relative w-40 h-40 mb-6\">\n                            <svg className=\"w-40 h-40 transform -rotate-90\" viewBox=\"0 0 144 144\">\n                              {/* Background circle */}\n                              <circle\n                                cx=\"72\"\n                                cy=\"72\"\n                                r=\"60\"\n                                stroke=\"currentColor\"\n                                strokeWidth=\"8\"\n                                fill=\"none\"\n                                className=\"text-gray-200 dark:text-gray-700\"\n                              />\n                              {/* Progress circle */}\n                              <circle\n                                cx=\"72\"\n                                cy=\"72\"\n                                r=\"60\"\n                                stroke=\"currentColor\"\n                                strokeWidth=\"8\"\n                                fill=\"none\"\n                                strokeDasharray={`${2 * Math.PI * 60}`}\n                                strokeDashoffset={`${2 * Math.PI * 60 * (1 - result.risk_score)}`}\n                                className={`transition-all duration-1000 ease-out ${\n                                  result.risk_score < 0.3 ? 'text-green-500' :\n                                  result.risk_score < 0.7 ? 'text-yellow-500' :\n                                  'text-red-500'\n                                }`}\n                                strokeLinecap=\"round\"\n                              />\n                            </svg>\n                            {/* Center content */}\n                            <div className=\"absolute inset-0 flex items-center justify-center\">\n                              <div className=\"text-center\">\n                                <div className={`text-3xl font-bold ${\n                                  result.risk_score < 0.3 ? 'text-green-600 dark:text-green-400' :\n                                  result.risk_score < 0.7 ? 'text-yellow-600 dark:text-yellow-400' :\n                                  'text-red-600 dark:text-red-400'\n                                }`}>\n                                  {Math.round(result.risk_score * 100)}%\n                                </div>\n                                <div className=\"text-xs text-gray-600 dark:text-gray-400 font-medium\">Risk Score</div>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <span className={`inline-flex px-4 py-2 rounded-full text-sm font-medium ${\n                            result.risk_score < 0.3 ? 'bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100' :\n                            result.risk_score < 0.7 ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100' :\n                            'bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100'\n                          }`}>\n                            {result.risk_score < 0.3 ? 'Low Risk' : result.risk_score < 0.7 ? 'Moderate Risk' : 'High Risk'}\n                          </span>\n                          \n                          {/* Risk Level Description */}\n                          <p className=\"text-center text-sm text-gray-600 dark:text-gray-400 mt-3 max-w-xs\">\n                            {result.risk_score < 0.3 \n                              ? 'Your risk level is low. Continue maintaining healthy habits.' \n                              : result.risk_score < 0.7 \n                              ? 'Your risk level is moderate. Consider lifestyle improvements.' \n                              : 'Your risk level is high. Consult with healthcare professionals.'}\n                          </p>\n                        </div>\n                      </div>\n\n                      {/* Risk Factors Breakdown */}\n                      {result.detailed_analysis?.contributing_factors && (\n                        <div className=\"bg-gradient-to-br from-blue-50 to-cyan-50 dark:from-blue-900/20 dark:to-cyan-900/20 rounded-xl p-6\">\n                          <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Key Contributing Factors</h4>\n                          <div className=\"space-y-4\">\n                            {result.detailed_analysis.contributing_factors.slice(0, 5).map((factor, index) => {\n                              // Assign different impact levels for visual variety\n                              const impactLevels = [85, 70, 60, 45, 30];\n                              const impactLevel = impactLevels[index] || 50;\n                              const colors = ['bg-red-500', 'bg-orange-500', 'bg-yellow-500', 'bg-blue-500', 'bg-green-500'];\n                              const bgColors = ['bg-red-50 dark:bg-red-900/20', 'bg-orange-50 dark:bg-orange-900/20', 'bg-yellow-50 dark:bg-yellow-900/20', 'bg-blue-50 dark:bg-blue-900/20', 'bg-green-50 dark:bg-green-900/20'];\n                              \n                              return (\n                                <div key={index} className={`p-4 ${bgColors[index]} rounded-lg border border-opacity-20`}>\n                                  <div className=\"flex items-center justify-between mb-2\">\n                                    <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">{factor}</span>\n                                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">{impactLevel}%</span>\n                                  </div>\n                                  <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                                    <div \n                                      className={`h-2 rounded-full ${colors[index]} transition-all duration-1000 ease-out`}\n                                      style={{ width: `${impactLevel}%` }}\n                                    ></div>\n                                  </div>\n                                </div>\n                              );\n                            })}\n                          </div>\n                          \n                          {/* Factor Impact Summary */}\n                          <div className=\"mt-6 p-4 bg-white dark:bg-gray-800 rounded-lg\">\n                            <h5 className=\"text-sm font-semibold text-gray-900 dark:text-white mb-3\">Impact Distribution</h5>\n                            <div className=\"flex items-center gap-4 text-xs\">\n                              <div className=\"flex items-center gap-1\">\n                                <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\n                                <span className=\"text-gray-600 dark:text-gray-400\">High Impact</span>\n                              </div>\n                              <div className=\"flex items-center gap-1\">\n                                <div className=\"w-3 h-3 bg-yellow-500 rounded-full\"></div>\n                                <span className=\"text-gray-600 dark:text-gray-400\">Moderate Impact</span>\n                              </div>\n                              <div className=\"flex items-center gap-1\">\n                                <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n                                <span className=\"text-gray-600 dark:text-gray-400\">Low Impact</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                {/* Lifestyle Impact */}\n                {result.detailed_analysis?.lifestyle_impact && Object.keys(result.detailed_analysis.lifestyle_impact).length > 0 && (\n                  <div className=\"card\">\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center gap-2\">\n                      <Activity className=\"h-6 w-6 text-indigo-600 dark:text-indigo-400\" />\n                      Lifestyle Impact Analysis\n                    </h3>\n                    \n                    {/* Lifestyle Impact Summary Chart */}\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n                      {/* Impact Overview Chart */}\n                      <div className=\"bg-gradient-to-br from-indigo-50 to-purple-50 dark:from-indigo-900/20 dark:to-purple-900/20 rounded-xl p-6\">\n                        <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Lifestyle Impact Overview</h4>\n                        <div className=\"space-y-4\">\n                          {(() => {\n                            // Filter and process lifestyle factors to show only meaningful ones\n                            const meaningfulFactors = Object.entries(result.detailed_analysis.lifestyle_impact)\n                              .filter(([key, value]) => {\n                                return key !== 'recommendations' && \n                                       value && \n                                       typeof value === 'string' && \n                                       (value as string).length > 5 && // Filter out single letters\n                                       !key.match(/^\\d+$/); // Filter out numeric keys\n                              })\n                              .slice(0, 5); // Limit to top 5 factors\n                            \n                            if (meaningfulFactors.length === 0) {\n                              return (\n                                <div className=\"text-center py-8\">\n                                  <div className=\"text-gray-500 dark:text-gray-400\">No specific lifestyle factors identified</div>\n                                </div>\n                              );\n                            }\n                            \n                            return meaningfulFactors.map(([key, value], index) => {\n                              // Determine impact level from content\n                              let impactLevel = 'Medium';\n                              let impactScore = 60;\n                              \n                              if (typeof value === 'string') {\n                                const lowerValue = (value as string).toLowerCase();\n                                if (lowerValue.includes('low') || lowerValue.includes('minimal') || lowerValue.includes('good')) {\n                                  impactLevel = 'Low';\n                                  impactScore = 25;\n                                } else if (lowerValue.includes('high') || lowerValue.includes('significant') || lowerValue.includes('severe') || lowerValue.includes('poor')) {\n                                  impactLevel = 'High';\n                                  impactScore = 85;\n                                }\n                              }\n                              \n                              const getIcon = (factorKey: string) => {\n                                const lowerKey = factorKey.toLowerCase();\n                                if (lowerKey.includes('smoking') || lowerKey.includes('tobacco')) return 'ð­';\n                                if (lowerKey.includes('diet') || lowerKey.includes('nutrition') || lowerKey.includes('food')) return 'ð¥';\n                                if (lowerKey.includes('exercise') || lowerKey.includes('activity') || lowerKey.includes('physical')) return 'ð';\n                                if (lowerKey.includes('sleep')) return 'ð´';\n                                if (lowerKey.includes('stress') || lowerKey.includes('mental')) return 'ð°';\n                                if (lowerKey.includes('alcohol') || lowerKey.includes('drink')) return 'ð·';\n                                if (lowerKey.includes('weight') || lowerKey.includes('bmi') || lowerKey.includes('obesity')) return 'âï¸';\n                                if (lowerKey.includes('blood') || lowerKey.includes('pressure')) return 'ð©¸';\n                                return 'ð';\n                              };\n                              \n                              return (\n                                <div key={index} className=\"flex items-center justify-between p-3 bg-white dark:bg-gray-800 rounded-lg\">\n                                  <div className=\"flex items-center gap-3 flex-1\">\n                                    <span className=\"text-xl\">{getIcon(key)}</span>\n                                    <div className=\"flex-1\">\n                                      <h5 className=\"font-medium text-gray-900 dark:text-white text-sm\">\n                                        {key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                                      </h5>\n                                      <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mt-1\">\n                                        <div \n                                          className={`h-2 rounded-full transition-all duration-500 ${\n                                            impactLevel === 'Low' ? 'bg-green-500' :\n                                            impactLevel === 'Medium' ? 'bg-yellow-500' : 'bg-red-500'\n                                          }`}\n                                          style={{ width: `${impactScore}%` }}\n                                        ></div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                  <span className={`px-2 py-1 rounded-full text-xs font-medium ml-3 ${\n                                    impactLevel === 'Low' ? 'bg-green-100 text-green-700 dark:bg-green-800 dark:text-green-200' :\n                                    impactLevel === 'Medium' ? 'bg-yellow-100 text-yellow-700 dark:bg-yellow-800 dark:text-yellow-200' :\n                                    'bg-red-100 text-red-700 dark:bg-red-800 dark:text-red-200'\n                                  }`}>\n                                    {impactLevel}\n                                  </span>\n                                </div>\n                              );\n                            });\n                          })()\n                          }\n                        </div>\n                      </div>\n                      \n                      {/* Risk Distribution Visualization */}\n                      <div className=\"bg-gradient-to-br from-blue-50 to-cyan-50 dark:from-blue-900/20 dark:to-cyan-900/20 rounded-xl p-6\">\n                        <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Risk Distribution</h4>\n                        <div className=\"space-y-4\">\n                          {(() => {\n                            // Create a simple risk distribution visualization\n                            const riskCategories = [\n                              { name: 'Low Risk Factors', value: 30, color: 'bg-green-500', count: 2 },\n                              { name: 'Moderate Risk Factors', value: 45, color: 'bg-yellow-500', count: 3 },\n                              { name: 'High Risk Factors', value: 25, color: 'bg-red-500', count: 1 }\n                            ];\n                            \n                            return riskCategories.map((category, index) => (\n                              <div key={index} className=\"space-y-2\">\n                                <div className=\"flex justify-between items-center\">\n                                  <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">{category.name}</span>\n                                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">{category.count} factors</span>\n                                </div>\n                                <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-3\">\n                                  <div \n                                    className={`h-3 rounded-full ${category.color} transition-all duration-700`}\n                                    style={{ width: `${category.value}%` }}\n                                  ></div>\n                                </div>\n                                <div className=\"text-right\">\n                                  <span className=\"text-xs text-gray-500 dark:text-gray-400\">{category.value}%</span>\n                                </div>\n                              </div>\n                            ));\n                          })()\n                          }\n                        </div>\n                      </div>\n                    </div>\n                      \n                    {/* Key Recommendations */}\n                    <div className=\"bg-gradient-to-r from-emerald-50 to-teal-50 dark:from-emerald-900/20 dark:to-teal-900/20 rounded-xl p-6 border border-emerald-200 dark:border-emerald-700\">\n                      <h4 className=\"font-semibold text-emerald-900 dark:text-emerald-100 mb-4 flex items-center gap-2\">\n                        <CheckCircle className=\"h-5 w-5\" />\n                        Key Health Recommendations\n                      </h4>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        {(() => {\n                          // Generate relevant recommendations based on predictor type\n                          const baseRecommendations = [\n                            \"Maintain a balanced diet rich in fruits and vegetables\",\n                            \"Engage in regular physical activity (150 minutes per week)\",\n                            \"Get adequate sleep (7-9 hours per night)\",\n                            \"Manage stress through relaxation techniques\"\n                          ];\n                          \n                          // Use actual recommendations if available, otherwise use base ones\n                          const recommendations = result.detailed_analysis.lifestyle_impact && Array.isArray(result.detailed_analysis.lifestyle_impact) && result.detailed_analysis.lifestyle_impact.length > 0\n                            ? result.detailed_analysis.lifestyle_impact.slice(0, 4).map(item => item.description || item.factor)\n                            : baseRecommendations;\n                          \n                          return recommendations.map((recommendation, recIndex) => (\n                            <div key={recIndex} className=\"flex items-start gap-3 p-4 bg-white dark:bg-gray-800 rounded-lg border border-emerald-100 dark:border-emerald-800 hover:shadow-md transition-all duration-200\">\n                              <div className=\"w-6 h-6 bg-emerald-500 text-white rounded-full flex items-center justify-center text-xs font-bold mt-0.5 flex-shrink-0\">\n                                {recIndex + 1}\n                              </div>\n                              <span className=\"text-sm text-emerald-700 dark:text-emerald-300 leading-relaxed\">{recommendation}</span>\n                            </div>\n                          ));\n                        })()\n                        }\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Actions */}\n                <div className=\"flex justify-center space-x-4\">\n                  <button\n                    onClick={() => {\n                      setCurrentStep(0);\n                      setResult(null);\n                      setError(null);\n                    }}\n                    className=\"btn-outline\"\n                  >\n                    New Assessment\n                  </button>\n                  <Link to=\"/predictors\" className=\"btn-primary\">\n                    Try Another Predictor\n                  </Link>\n                </div>\n              </div>\n            )}\n          </motion.div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PredictorDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}