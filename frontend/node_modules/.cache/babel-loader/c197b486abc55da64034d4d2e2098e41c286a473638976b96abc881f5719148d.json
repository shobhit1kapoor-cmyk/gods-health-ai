{"ast":null,"code":"import _objectSpread from\"C:/Users/kapoo/OneDrive/Desktop/Gods Health AI/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useMemo}from'react';import{useParams,Link}from'react-router-dom';import{motion}from'framer-motion';import axios from'axios';import{buildApiUrl,API_ENDPOINTS,isStaticMode}from'../config/api.js';import{ArrowLeft,Heart,Brain,Activity,Stethoscope,TrendingUp,Zap,Clock,AlertTriangle,CheckCircle,Info,Loader,Download,Share2,Droplets,HelpCircle,ChevronDown,User,Calendar,Thermometer,Scale,FileText,BarChart3}from'lucide-react';// Recharts components removed - using simpler card-based design\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PredictorDetail=()=>{var _predictor$fields3,_result$risk_factors,_result$recommendatio,_result$detailed_anal,_result$detailed_anal2,_result$detailed_anal3,_result$detailed_anal4;const{predictorId}=useParams();const[predictor,setPredictor]=useState(null);const[formData,setFormData]=useState({});const[isLoading,setIsLoading]=useState(false);const[isLoadingFields,setIsLoadingFields]=useState(true);const[result,setResult]=useState(null);const[error,setError]=useState(null);const[currentStep,setCurrentStep]=useState(0);const[backendFields,setBackendFields]=useState(null);const[formProgress,setFormProgress]=useState(0);const[fieldErrors,setFieldErrors]=useState({});const[isDownloadingPDF,setIsDownloadingPDF]=useState(false);// Field mapping for common conversions\n// Field mapping for different predictors - HeartDiseasePredictor uses 'sex', others use 'gender'\nconst getBackendFieldName=(fieldName,predictorType)=>{if(fieldName==='gender'&&predictorType==='heart_disease'){return'sex';}return fieldName;};// Get default example values for form fields\nconst getDefaultExampleValue=(fieldName,field)=>{// Common field examples\nconst examples={// Basic demographics\n'age':45,'gender':'Male','sex':'Male','weight':70,'height':175,'occupation':'Technology','maternal_age':28,'gestational_age':38,'multiple_pregnancy':'No',// Vital signs and measurements\n'systolic_bp':130,'diastolic_bp':85,'resting_bp':130,'blood_pressure':130,'cholesterol':220,'total_cholesterol':220,'hdl_cholesterol':45,'ldl_cholesterol':130,'triglycerides':180,'bmi':26.5,'max_hr':165,'heart_rate':75,'oldpeak':1.2,'glucose_level':95,'avg_glucose_level':110,'glucose_fasting':95,'waist_circumference':85,'hip_circumference':95,'body_fat_percentage':18,'muscle_mass':35,'metabolic_rate':1650,'temperature':98.6,'spo2':98,'respiratory_rate':16,'mean_bp':100,'specific_gravity':1.025,'meals_per_day':3,'fruit_vegetable_servings':5,'albumin':1,'sugar':0,// Medical history\n'hypertension':'No','heart_disease':'No','family_history':'Yes','family_history_diabetes':'No','family_history_heart_disease':'No','family_history_hypertension':'No','family_history_obesity':'No','family_history_respiratory':'No','diabetes':'No','kidney_disease':'No','liver_disease':'No','thyroid_disorder':'No','autoimmune_disease':'No','chronic_hypertension':'No','diabetes_pre_pregnancy':'No','insulin_level':15,'pregnancies':2,'skin_thickness':25,'diabetes_pedigree_function':0.5,'previous_cancer':'No','cancer_type':'None','hormonal_factors':'Normal','fasting_bs':'No','chronic_illness':'No','previous_complications':'No','fetal_growth_restriction':'No','mobility':'Normal','medications_weight_gain':'No','medication_statins':'No','mechanical_ventilation':'No','vasopressor_use':'No','admission_diagnosis':'None','comorbidities':'None',// Lifestyle factors\n'smoking_status':'Never Smoked','smoking_history':'Never','smoking':'No','smoking_years':0,'smoking_pack_years':0,'alcohol_consumption':'Light','alcohol_intake':'Light','physical_activity':'Moderate','physical_activity_level':'Moderate','activity_level':'Moderately Active','current_fitness_level':'Intermediate','exercise_frequency':'Moderate','exercise_duration':45,'sleep_hours':7,'sleep_quality':'Good','stress_level':3,'social_support':'Good','work_satisfaction':'Satisfied','substance_use':'None','diet_quality':'Good','dietary_restrictions':'None','nutrition_score':75,'caffeine_intake':'Moderate (3-4 cups)','water_intake':2.5,'sedentary_hours':6,'screen_time':4,'work_stress':'Moderate','financial_stress':'Low','relationship_stress':'Low','morning_alertness':'Alert','daytime_fatigue':'Sometimes','sleep_disorders':'No','shift_work':'No','environmental_factors':'Good','processed_food_frequency':'Sometimes','cooking_frequency':'Often','supplement_use':'No','screen_time_before_bed':'<30 min','sleep_environment':'Good','snoring':'No','sleep_medications':'No','sleep_problems':'No','work_stress_level':5,'work_hours_per_week':40,'job_satisfaction':'Satisfied','work_life_balance':'Good','emotional_exhaustion':'Sometimes','cynicism':'Rarely','personal_accomplishment':'High','physical_symptoms':'No','coping_strategies':'Exercise','support_system':'Good',// Clinical tests\n'chest_pain_type':'Typical angina','resting_ecg':'Normal','exercise_angina':'No','cognitive_score':28,'education_years':16,'symptoms_count':2,// Liver function tests\n'bilirubin':1.2,'alkaline_phosphotase':250,'alamine_aminotransferase':35,// Neurological assessments\n'tremor_score':2,'rigidity_score':1,'bradykinesia_score':1,'postural_instability':'No',// Blood work\n'white_blood_cells':8000,'hemoglobin':14.5,'hematocrit':42,'platelet_count':250000,'red_blood_cell_count':4.8,'mcv':88,'mch':30,'mchc':34,'ferritin':150,'iron':100,'transferrin_saturation':25,'vitamin_b12':400,'folate':12,// Thyroid function\n'tsh':2.5,'t3':120,'t4':8.5,'thyroid_antibodies':'Negative',// Cancer markers\n'original_cancer_stage':'Stage I','months_since_treatment':12,'complete_response':'Yes','elevated_tumor_markers':'No',// Sepsis indicators\n'lactate':1.5,'procalcitonin':0.5,'creatinine':1.0,'urea':25,'sodium':140,'potassium':4.0,'chloride':100,'co2':24,// Respiratory function\n'peak_flow':450,'fev1':3.2,'fvc':4.0,'oxygen_saturation':98,'chest_xray':'Normal','spirometry':'Normal',// Pregnancy related\n'parity':1,'gravidity':2,'previous_preterm':'No','previous_stillbirth':'No','cervical_length':35,'amniotic_fluid':'Normal','placental_position':'Normal',// Surgery related\n'surgery_type':'Elective','anesthesia_type':'General','surgery_duration':120,'blood_loss':200,'asa_score':2,// ICU related\n'apache_score':15,'sofa_score':6,'glasgow_coma_scale':15,'ventilator_days':0,'dialysis':'No','organ_failure_count':0,// Hospital readmission\n'length_of_stay':5,'discharge_disposition':'Home','number_diagnoses':3,'number_procedures':1,'number_medications':8,'emergency_admission':'No','num_diagnoses':3,'num_medications':8,// Additional missing fields\n'current_bmi':26.5,'physical_activity_hours':3,'daily_calories':2000,'neck_circumference':38,'loud_snoring':'No','daytime_sleepiness':'No','comorbidity_count':1,'fully_vaccinated':'Yes','symptoms_severity':'Mild','serum_iron':100,'heavy_menstrual_bleeding':'No','dietary_iron_adequate':'Yes','family_history_thyroid':'No','social_support_score':8,'recent_life_events':'No','sepsis':'No','emergency_surgery':'No',// Work and lifestyle\n'work_type':0,// Private\n'residence_type':1,// Urban\n'ever_married':1,// Yes\n'family_history_stroke':0,// No\n'environmental_exposure':'No','sodium_intake_mg':2800};// Return specific example if available\nif(examples[fieldName]!==undefined){return examples[fieldName];}// Fallback based on field type\nif(field.type==='number'){if(field.min!==undefined&&field.max!==undefined){return Math.round((field.min+field.max)/2);}return field.min||0;}else if(field.type==='select'&&field.options){return field.options[0];}else if(field.type==='checkbox'){return false;}return'';};// Convert backend field definitions to frontend form fields\nconst convertBackendFieldsToFormFields=backendInfo=>{const fields=[];Object.entries(backendInfo.required_fields).forEach(_ref=>{let[fieldName,fieldType]=_ref;const description=backendInfo.field_descriptions[fieldName]||'';let formField={name:fieldName,label:description.split('(')[0].trim()||fieldName.replace(/_/g,' ').replace(/\\b\\w/g,l=>l.toUpperCase()),type:'text',required:true,description:description};// Determine field type and options based on field name and description\nif(fieldType==='int'||fieldType==='float'){formField.type='number';if(fieldType==='float'){formField.step=0.1;}}// Special handling for common fields\nif(fieldName==='gender'||fieldName==='sex'){formField=_objectSpread(_objectSpread({},formField),{},{name:'gender',// Always use 'gender' internally\nlabel:'Gender',type:'select',options:['Female','Male'],description:'Gender (0 = Female, 1 = Male)'});}else if(fieldName==='age'){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:0,max:120,unit:'years'});}else if(fieldName==='maternal_age'){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:15,max:50,unit:'years'});}else if(fieldName==='gestational_age'){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:20,max:42,unit:'weeks'});}else if(fieldName==='systolic_bp'||fieldName==='resting_bp'){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:80,max:200,unit:'mmHg'});}else if(fieldName==='diastolic_bp'){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:50,max:120,unit:'mmHg'});}else if(fieldName==='cholesterol'||fieldName==='total_cholesterol'){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:100,max:400,unit:'mg/dL'});}else if(fieldName==='bmi'){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:15,max:50,step:0.1,unit:'kg/mÂ²'});}else if(fieldName==='smoking_status'){formField=_objectSpread(_objectSpread({},formField),{},{type:'select',options:['Never smoked','Former smoker','Current smoker']});}else if(fieldName==='chest_pain_type'){formField=_objectSpread(_objectSpread({},formField),{},{type:'select',options:['Typical angina','Atypical angina','Non-anginal pain','Asymptomatic']});}else if(fieldName==='resting_ecg'){formField=_objectSpread(_objectSpread({},formField),{},{type:'select',options:['Normal','ST-T wave abnormality','Left ventricular hypertrophy']});}else if(fieldName==='work_type'){formField=_objectSpread(_objectSpread({},formField),{},{type:'select',options:['Private','Self-employed','Government','Never worked']});}else if(fieldName==='residence_type'){formField=_objectSpread(_objectSpread({},formField),{},{type:'select',options:['Urban','Rural']});}else if(fieldName==='gender'||fieldName==='sex'){formField=_objectSpread(_objectSpread({},formField),{},{type:'select',options:['Female','Male']});}else if(// Only apply Yes/No for fields that explicitly mention yes/no in description\ndescription.includes('1 = yes, 0 = no')||description.includes('1 = Yes, 0 = No')||description.includes('(1 = yes, 0 = no)')||description.includes('(1 = Yes, 0 = No)')||description&&description.toLowerCase().includes('yes')&&description.toLowerCase().includes('no')||// Specific boolean fields that should be Yes/No\nfieldType==='int'&&(fieldName==='hypertension'||fieldName==='diabetes'||fieldName==='heart_disease'||fieldName==='smoking'||fieldName.startsWith('family_history')||fieldName==='chronic_hypertension'||fieldName==='diabetes_pre_pregnancy'||fieldName==='multiple_pregnancy'||fieldName==='previous_complications'||fieldName==='previous_cancer'||fieldName==='ever_married'||fieldName==='fasting_bs'||fieldName==='exercise_angina')){formField=_objectSpread(_objectSpread({},formField),{},{type:'select',options:['No','Yes']});}else if(description.includes('0-')&&description.includes('scale')){const match=description.match(/0-(\\d+)/);if(match){formField=_objectSpread(_objectSpread({},formField),{},{type:'number',min:0,max:parseInt(match[1])});}}fields.push(formField);});return fields;};const predictorData=useMemo(()=>({heart_disease:{id:'heart_disease',name:'Heart Disease Predictor',description:'Predict cardiovascular disease risk using key health indicators',category:'Health Assessment',icon:Heart,difficulty:'Medium',estimatedTime:'5-10 min',accuracy:'85%',fields:[{name:'age',label:'Age',type:'number',required:true,min:18,max:120,unit:'years'},{name:'sex',label:'Gender',type:'select',required:true,options:['Female','Male']},{name:'cholesterol',label:'Total Cholesterol',type:'number',required:true,min:100,max:400,unit:'mg/dL'},{name:'systolic_bp',label:'Systolic Blood Pressure',type:'number',required:true,min:80,max:200,unit:'mmHg'},{name:'smoking',label:'Current Smoking Status',type:'select',required:true,options:['No','Yes']},{name:'diabetes',label:'Diabetes Diagnosis',type:'select',required:true,options:['No','Yes']}]},diabetes:{id:'diabetes',name:'Diabetes Risk Predictor',description:'Predict Type 2 diabetes risk using glucose levels, BMI, and lifestyle factors',category:'Health Assessment',icon:Activity,difficulty:'Medium',estimatedTime:'5-7 min',accuracy:'87%',fields:[{name:'age',label:'Age',type:'number',required:true,min:18,max:120,unit:'years'},{name:'gender',label:'Gender',type:'select',required:true,options:['Female','Male']},{name:'bmi',label:'Body Mass Index',type:'number',required:true,min:15,max:50,step:0.1,unit:'kg/mÂ²'},{name:'glucose',label:'Glucose Level',type:'number',required:true,min:70,max:300,unit:'mg/dL'},{name:'blood_pressure',label:'Blood Pressure',type:'number',required:true,min:80,max:200,unit:'mmHg'},{name:'skin_thickness',label:'Skin Thickness',type:'number',required:true,min:0,max:100,unit:'mm'},{name:'insulin',label:'Insulin Level',type:'number',required:true,min:0,max:300,unit:'Î¼U/mL'},{name:'diabetes_pedigree_function',label:'Diabetes Pedigree Function',type:'number',required:true,min:0,max:2,step:0.01},{name:'pregnancies',label:'Number of Pregnancies',type:'number',required:true,min:0,max:20}]},anemia:{id:'anemia',name:'Anemia Predictor',description:'Detect various types of anemia using comprehensive blood test analysis',category:'Health Assessment',icon:Stethoscope,difficulty:'Easy',estimatedTime:'3-5 min',accuracy:'92%',fields:[{name:'age',label:'Age',type:'number',required:true,min:18,max:120,unit:'years'},{name:'gender',label:'Gender',type:'select',required:true,options:['Female','Male']},{name:'hemoglobin',label:'Hemoglobin Level',type:'number',required:true,min:5,max:20,step:0.1,unit:'g/dL'},{name:'hematocrit',label:'Hematocrit',type:'number',required:true,min:15,max:60,step:0.1,unit:'%'},{name:'mcv',label:'Mean Corpuscular Volume',type:'number',required:true,min:60,max:120,unit:'fL'},{name:'mch',label:'Mean Corpuscular Hemoglobin',type:'number',required:true,min:20,max:40,step:0.1,unit:'pg'},{name:'mchc',label:'Mean Corpuscular Hemoglobin Concentration',type:'number',required:true,min:25,max:40,step:0.1,unit:'g/dL'},{name:'fatigue',label:'Fatigue Level',type:'number',required:true,min:0,max:10},{name:'shortness_of_breath',label:'Shortness of Breath',type:'select',required:true,options:['No','Yes']},{name:'cold_hands_feet',label:'Cold Hands and Feet',type:'select',required:true,options:['No','Yes']}]},sepsis:{id:'sepsis',name:'Sepsis Predictor',description:'Early sepsis detection in hospital settings - a life-saving diagnostic tool.',category:'Health Assessment',icon:Activity,difficulty:'Advanced',estimatedTime:'3-5 min',accuracy:'96%',fields:[{name:'age',label:'Age',type:'number',required:true,min:18,max:120,unit:'years'},{name:'gender',label:'Gender',type:'select',required:true,options:['Female','Male']},{name:'temperature',label:'Body Temperature',type:'number',required:true,min:95,max:110,step:0.1,unit:'Â°F'},{name:'heart_rate',label:'Heart Rate',type:'number',required:true,min:40,max:200,unit:'bpm'},{name:'respiratory_rate',label:'Respiratory Rate',type:'number',required:true,min:10,max:40,unit:'/min'},{name:'white_blood_cells',label:'White Blood Cell Count',type:'number',required:true,min:1000,max:50000,unit:'/Î¼L'},{name:'blood_pressure',label:'Systolic Blood Pressure',type:'number',required:true,min:60,max:200,unit:'mmHg'}]},stroke_risk:{id:'stroke_risk',name:'Stroke Risk Predictor',description:'Analyze blood pressure, cholesterol, lifestyle, and family history to assess stroke risk.',category:'Health Assessment',icon:Brain,difficulty:'Medium',estimatedTime:'6-8 min',accuracy:'92%',fields:[{name:'age',label:'Age',type:'number',required:true,min:18,max:120,unit:'years'},{name:'gender',label:'Gender',type:'select',required:true,options:['Female','Male']},{name:'hypertension',label:'Hypertension',type:'select',required:true,options:['No','Yes']},{name:'heart_disease',label:'Heart Disease',type:'select',required:true,options:['No','Yes']},{name:'avg_glucose_level',label:'Average Glucose Level',type:'number',required:true,min:50,max:300,unit:'mg/dL'},{name:'bmi',label:'Body Mass Index',type:'number',required:true,min:15,max:50,step:0.1,unit:'kg/mÂ²'},{name:'smoking_status',label:'Smoking Status',type:'select',required:true,options:['Never smoked','Formerly smoked','Currently smokes']}]},obesity_risk:{id:'obesity_risk',name:'Obesity & BMI Risk Predictor',description:'Assess long-term obesity complications and metabolic health risks.',category:'Health Assessment',icon:TrendingUp,difficulty:'Easy',estimatedTime:'3-5 min',accuracy:'87%',fields:[{name:'age',label:'Age',type:'number',required:true,min:18,max:120,unit:'years'},{name:'gender',label:'Gender',type:'select',required:true,options:['Female','Male']},{name:'height',label:'Height',type:'number',required:true,min:100,max:250,unit:'cm'},{name:'weight',label:'Weight',type:'number',required:true,min:30,max:300,unit:'kg'},{name:'physical_activity',label:'Physical Activity Level',type:'select',required:true,options:['Low','Moderate','High']},{name:'family_history_obesity',label:'Family History of Obesity',type:'select',required:true,options:['No','Yes']}]},hypertension:{id:'hypertension',name:'Hypertension Predictor',description:'Evaluate lifestyle and genetic risk factors for high blood pressure development.',category:'Health Assessment',icon:Activity,difficulty:'Medium',estimatedTime:'4-6 min',accuracy:'89%',fields:[{name:'age',label:'Age',type:'number',required:true,min:18,max:120,unit:'years'},{name:'gender',label:'Gender',type:'select',required:true,options:['Female','Male']},{name:'systolic_bp',label:'Systolic Blood Pressure',type:'number',required:true,min:80,max:200,unit:'mmHg'},{name:'diastolic_bp',label:'Diastolic Blood Pressure',type:'number',required:true,min:40,max:120,unit:'mmHg'},{name:'bmi',label:'Body Mass Index',type:'number',required:true,min:15,max:50,step:0.1,unit:'kg/mÂ²'},{name:'sodium_intake',label:'Daily Sodium Intake',type:'number',required:true,min:500,max:5000,unit:'mg'},{name:'family_history_hypertension',label:'Family History of Hypertension',type:'select',required:true,options:['No','Yes']}]},cholesterol_risk:{id:'cholesterol_risk',name:'Cholesterol Risk Predictor',description:'Assess cardiovascular risk based on cholesterol levels and lipid profile.',category:'Health Assessment',icon:Heart,difficulty:'Medium',estimatedTime:'4-6 min',accuracy:'88%',fields:[{name:'age',label:'Age',type:'number',required:true,min:18,max:120,unit:'years'},{name:'gender',label:'Gender',type:'select',required:true,options:['Female','Male']},{name:'total_cholesterol',label:'Total Cholesterol',type:'number',required:true,min:100,max:400,unit:'mg/dL'},{name:'hdl_cholesterol',label:'HDL Cholesterol',type:'number',required:true,min:20,max:100,unit:'mg/dL'},{name:'ldl_cholesterol',label:'LDL Cholesterol',type:'number',required:true,min:50,max:300,unit:'mg/dL'},{name:'triglycerides',label:'Triglycerides',type:'number',required:true,min:50,max:500,unit:'mg/dL'}]},mental_health:{id:'mental_health',name:'Mental Health Risk Predictor',description:'Assess depression, anxiety, and stress levels using validated screening tools.',category:'Health Assessment',icon:Brain,difficulty:'Medium',estimatedTime:'6-8 min',accuracy:'85%',fields:[{name:'age',label:'Age',type:'number',required:true,min:18,max:120,unit:'years'},{name:'gender',label:'Gender',type:'select',required:true,options:['Female','Male']},{name:'stress_level',label:'Stress Level (1-10)',type:'number',required:true,min:1,max:10},{name:'sleep_hours',label:'Average Sleep Hours',type:'number',required:true,min:2,max:12,step:0.5,unit:'hours'},{name:'social_support',label:'Social Support Level',type:'select',required:true,options:['Low','Moderate','High']},{name:'exercise_frequency',label:'Exercise Frequency',type:'select',required:true,options:['Never','Rarely','Sometimes','Often','Daily']}]},sleep_apnea:{id:'sleep_apnea',name:'Sleep Apnea Risk Predictor',description:'Identify sleep disorders and breathing interruptions during sleep.',category:'Health Assessment',icon:Activity,difficulty:'Medium',estimatedTime:'5-7 min',accuracy:'87%',fields:[{name:'age',label:'Age',type:'number',required:true,min:18,max:120,unit:'years'},{name:'gender',label:'Gender',type:'select',required:true,options:['Female','Male']},{name:'bmi',label:'Body Mass Index',type:'number',required:true,min:15,max:50,step:0.1,unit:'kg/mÂ²'},{name:'neck_circumference',label:'Neck Circumference',type:'number',required:true,min:25,max:60,unit:'cm'},{name:'snoring_frequency',label:'Snoring Frequency',type:'select',required:true,options:['Never','Rarely','Sometimes','Often','Always']},{name:'daytime_sleepiness',label:'Daytime Sleepiness',type:'select',required:true,options:['Never','Rarely','Sometimes','Often','Always']}]},covid_risk:{id:'covid_risk',name:'COVID-19 Risk Predictor',description:'Assess COVID-19 severity risk based on health conditions and demographics.',category:'Health Assessment',icon:Shield,difficulty:'Easy',estimatedTime:'3-5 min',accuracy:'83%',fields:[{name:'age',label:'Age',type:'number',required:true,min:18,max:120,unit:'years'},{name:'gender',label:'Gender',type:'select',required:true,options:['Female','Male']},{name:'chronic_conditions',label:'Number of Chronic Conditions',type:'number',required:true,min:0,max:10},{name:'vaccination_status',label:'Vaccination Status',type:'select',required:true,options:['Unvaccinated','Partially Vaccinated','Fully Vaccinated','Boosted']},{name:'smoking_status',label:'Smoking Status',type:'select',required:true,options:['Never','Former','Current']}]}}),[]);useEffect(()=>{const fetchPredictorFields=async()=>{if(!predictorId)return;setIsLoadingFields(true);setError(null);try{// Check if we're in static mode\nif(isStaticMode()){// Use hardcoded data for static mode\nif(predictorData[predictorId]){var _predictorData$predic,_predictorData$predic2;setPredictor(predictorData[predictorId]);const initialData={};predictorData[predictorId].fields.forEach(field=>{initialData[field.name]=getDefaultExampleValue(field.name,field);});setFormData(initialData);// Calculate initial form progress\nconst filledFields=Object.values(initialData).filter(val=>val!==''&&val!==null&&val!==undefined).length;setFormProgress(filledFields/(((_predictorData$predic=predictorData[predictorId])===null||_predictorData$predic===void 0?void 0:(_predictorData$predic2=_predictorData$predic.fields)===null||_predictorData$predic2===void 0?void 0:_predictorData$predic2.length)||1)*100);}else{throw new Error('Predictor not found in static mode');}}else{// Fetch field definitions from backend\nconst response=await fetch(buildApiUrl(API_ENDPOINTS.PREDICTOR_FIELDS(predictorId)));if(!response.ok){throw new Error(\"Failed to fetch predictor fields: \".concat(response.statusText));}const backendInfo=await response.json();setBackendFields(backendInfo);// Convert backend fields to frontend form fields\nconst formFields=convertBackendFieldsToFormFields(backendInfo);// Create predictor info with dynamic fields\nconst predictorInfo={id:predictorId,name:backendInfo.name,description:backendInfo.description,category:'Health Assessment',icon:Heart,// Default icon\ndifficulty:'Medium',estimatedTime:'5-10 min',accuracy:'85%',fields:formFields};setPredictor(predictorInfo);// Initialize form data with example values\nconst initialData={};formFields.forEach(field=>{initialData[field.name]=getDefaultExampleValue(field.name,field);});setFormData(initialData);// Calculate initial form progress\nconst filledFields=Object.values(initialData).filter(val=>val!==''&&val!==null&&val!==undefined).length;setFormProgress(filledFields/((formFields===null||formFields===void 0?void 0:formFields.length)||1)*100);}}catch(err){console.error('Error fetching predictor fields:',err);setError(err instanceof Error?err.message:'Failed to load predictor');// Fallback to hardcoded data if available\nif(predictorData[predictorId]){var _predictorData$predic3,_predictorData$predic4;setPredictor(predictorData[predictorId]);const initialData={};predictorData[predictorId].fields.forEach(field=>{initialData[field.name]=getDefaultExampleValue(field.name,field);});setFormData(initialData);// Calculate initial form progress\nconst filledFields=Object.values(initialData).filter(val=>val!==''&&val!==null&&val!==undefined).length;setFormProgress(filledFields/(((_predictorData$predic3=predictorData[predictorId])===null||_predictorData$predic3===void 0?void 0:(_predictorData$predic4=_predictorData$predic3.fields)===null||_predictorData$predic4===void 0?void 0:_predictorData$predic4.length)||1)*100);}}finally{setIsLoadingFields(false);}};fetchPredictorFields();},[predictorId,predictorData]);const validateField=(field,value)=>{// Required field validation\nif(field.required&&(value===''||value===null||value===undefined)){return\"\".concat(field.label,\" is required\");}// Number field validation\nif(field.type==='number'&&value!==''&&value!==null&&value!==undefined){const numValue=parseFloat(value);if(isNaN(numValue)){return\"\".concat(field.label,\" must be a valid number\");}if(field.min!==undefined&&numValue<field.min){return\"\".concat(field.label,\" must be at least \").concat(field.min);}if(field.max!==undefined&&numValue>field.max){return\"\".concat(field.label,\" must be no more than \").concat(field.max);}}// Age-specific validation\nif(field.name==='age'&&value!==null&&value!==undefined&&value!==''){const age=parseFloat(value);if(!isNaN(age)&&(age<0||age>150)){return'Please enter a valid age between 0 and 150';}}// Blood pressure validation\nif((field.name.includes('bp')||field.name.includes('blood_pressure'))&&value!==null&&value!==undefined&&value!==''){const bp=parseFloat(value);if(!isNaN(bp)&&(bp<50||bp>300)){return'Please enter a realistic blood pressure value';}}return null;};const handleInputChange=(name,value)=>{var _predictor$fields;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));// Validate field in real-time\nconst field=predictor===null||predictor===void 0?void 0:predictor.fields.find(f=>f.name===name);if(field){const error=validateField(field,value);setFieldErrors(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:error||''}));}// Update form progress\nconst filledFields=Object.values(_objectSpread(_objectSpread({},formData),{},{[name]:value})).filter(val=>val!==''&&val!==null&&val!==undefined).length;const totalFields=(predictor===null||predictor===void 0?void 0:(_predictor$fields=predictor.fields)===null||_predictor$fields===void 0?void 0:_predictor$fields.length)||1;setFormProgress(filledFields/totalFields*100);};// Helper function to get appropriate icon for field\nconst getFieldIcon=fieldName=>{const iconMap={age:/*#__PURE__*/_jsx(Calendar,{className:\"h-4 w-4 text-gray-500\"}),sex:/*#__PURE__*/_jsx(User,{className:\"h-4 w-4 text-gray-500\"}),gender:/*#__PURE__*/_jsx(User,{className:\"h-4 w-4 text-gray-500\"}),chest_pain_type:/*#__PURE__*/_jsx(Heart,{className:\"h-4 w-4 text-gray-500\"}),resting_bp:/*#__PURE__*/_jsx(Activity,{className:\"h-4 w-4 text-gray-500\"}),cholesterol:/*#__PURE__*/_jsx(Droplets,{className:\"h-4 w-4 text-gray-500\"}),fasting_bs:/*#__PURE__*/_jsx(Droplets,{className:\"h-4 w-4 text-gray-500\"}),resting_ecg:/*#__PURE__*/_jsx(Zap,{className:\"h-4 w-4 text-gray-500\"}),max_hr:/*#__PURE__*/_jsx(Heart,{className:\"h-4 w-4 text-gray-500\"}),exercise_angina:/*#__PURE__*/_jsx(Activity,{className:\"h-4 w-4 text-gray-500\"}),oldpeak:/*#__PURE__*/_jsx(TrendingUp,{className:\"h-4 w-4 text-gray-500\"}),st_slope:/*#__PURE__*/_jsx(TrendingUp,{className:\"h-4 w-4 text-gray-500\"}),bmi:/*#__PURE__*/_jsx(Scale,{className:\"h-4 w-4 text-gray-500\"}),temperature:/*#__PURE__*/_jsx(Thermometer,{className:\"h-4 w-4 text-gray-500\"}),blood_pressure:/*#__PURE__*/_jsx(Stethoscope,{className:\"h-4 w-4 text-gray-500\"}),mental_health:/*#__PURE__*/_jsx(Brain,{className:\"h-4 w-4 text-gray-500\"})};return iconMap[fieldName]||/*#__PURE__*/_jsx(Activity,{className:\"h-4 w-4 text-gray-500\"});};const handleSubmit=async e=>{var _predictor$fields2;e.preventDefault();if(!predictor||!backendFields)return;// Validate all fields before submission\nconst errors={};predictor===null||predictor===void 0?void 0:(_predictor$fields2=predictor.fields)===null||_predictor$fields2===void 0?void 0:_predictor$fields2.forEach(field=>{const value=formData[field.name];const error=validateField(field,value);if(error){errors[field.name]=error;}});setFieldErrors(errors);// Don't submit if there are validation errors\nif(Object.keys(errors).length>0){setError('Please fix the validation errors before submitting.');return;}setIsLoading(true);setError(null);try{var _env;// Convert form data to backend format\nconst backendData={};Object.entries(formData).forEach(_ref2=>{let[fieldName,value]=_ref2;// Map frontend field names to backend field names\nconst backendFieldName=getBackendFieldName(fieldName,predictor.id);const fieldType=backendFields.required_fields[backendFieldName];if(value===''||value===null||value===undefined){return;// Skip empty values\n}// Convert values based on backend field type\nif(fieldType==='int'){if(fieldName==='gender'||backendFieldName==='sex'||backendFieldName==='gender'){// Convert gender: Female = 0, Male = 1\nbackendData[backendFieldName]=value==='Male'||value===1?1:0;}else if(fieldName==='chest_pain_type'){// Convert chest pain type to numeric\nconst mapping={'Typical angina':0,'Atypical angina':1,'Non-anginal pain':2,'Asymptomatic':3};backendData[backendFieldName]=mapping[value]||0;}else if(fieldName==='resting_ecg'){// Convert ECG results to numeric\nconst mapping={'Normal':0,'ST-T wave abnormality':1,'Left ventricular hypertrophy':2};backendData[backendFieldName]=mapping[value]||0;}else if(fieldName==='smoking_status'){// Convert smoking status to numeric\nconst mapping={'Never smoked':0,'Former smoker':1,'Current smoker':2};backendData[backendFieldName]=mapping[value]||0;}else if(fieldName==='work_type'){// Convert work type to numeric\nconst mapping={'Private':0,'Self-employed':1,'Government':2,'Never worked':4};backendData[backendFieldName]=mapping[value]||0;}else if(fieldName==='residence_type'){// Convert residence type to numeric\nbackendData[backendFieldName]=value==='Urban'?1:0;}else if(typeof value==='string'&&(value==='Yes'||value==='No')){// Convert Yes/No to 1/0\nbackendData[backendFieldName]=value==='Yes'?1:0;}else{backendData[backendFieldName]=value!==null&&value!==undefined&&value!==''?parseInt(value.toString()):0;}}else if(fieldType==='float'){backendData[backendFieldName]=value!==null&&value!==undefined&&value!==''?parseFloat(value.toString()):0.0;}else{backendData[backendFieldName]=value;}});console.log('Sending data to backend:',backendData);// Check if we're in static mode (no backend)\nconst isStaticMode=((_env=import.meta.env)===null||_env===void 0?void 0:_env.REACT_APP_STATIC_MODE)==='true';if(isStaticMode){// Use mock data for static deployment\nawait new Promise(resolve=>setTimeout(resolve,1500));// Simulate API delay\nconst mockResult={risk_score:Math.random()*100,risk_level:['Low','Medium','High'][Math.floor(Math.random()*3)],confidence:85+Math.random()*10,recommendations:['Maintain a balanced diet rich in fruits and vegetables','Exercise regularly for at least 30 minutes daily','Monitor your health metrics regularly','Consult with healthcare professionals for personalized advice'],analysis:'This is a demonstration using mock data. In a real deployment with backend, you would receive personalized health predictions based on your input data.'};setResult({risk_level:mockResult.risk_level,risk_score:mockResult.risk_score,confidence:mockResult.confidence,recommendations:mockResult.recommendations,risk_factors:[],explanation:mockResult.analysis||''});setCurrentStep(1);}else{// Original API call logic for when backend is available\nconst response=await axios.post(buildApiUrl(API_ENDPOINTS.PREDICT),{predictor_type:predictor.id,data:backendData,include_analysis:true});setResult(response.data);setCurrentStep(1);}}catch(err){var _err$response,_err$response$data;console.error('Prediction error:',err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||'An error occurred while making the prediction.');}finally{setIsLoading(false);}};const getRiskColor=riskLevel=>{switch(riskLevel){case'Low':return'text-green-600 dark:text-green-400 bg-green-100 dark:bg-green-900/30';case'Medium':return'text-yellow-600 dark:text-yellow-400 bg-yellow-100 dark:bg-yellow-900/30';case'Moderate':return'text-yellow-600 dark:text-yellow-400 bg-yellow-100 dark:bg-yellow-900/30';case'High':return'text-orange-600 dark:text-orange-400 bg-orange-100 dark:bg-orange-900/30';case'Very High':return'text-red-600 dark:text-red-400 bg-red-100 dark:bg-red-900/30';case'Critical':return'text-red-600 dark:text-red-400 bg-red-100 dark:bg-red-900/30';default:return'text-gray-600 dark:text-gray-400 bg-gray-100 dark:bg-gray-800';}};const getRiskIcon=riskLevel=>{switch(riskLevel){case'Low':return CheckCircle;case'Medium':return Info;case'Moderate':return Info;case'High':return AlertTriangle;case'Very High':return AlertTriangle;case'Critical':return AlertTriangle;default:return Info;}};const handleDownloadPDF=async()=>{if(!result||!predictor)return;// Check if we're in static mode (no backend)\nconst isStaticMode=import.meta.env.VITE_STATIC_MODE==='true';if(isStaticMode){// Show message that PDF download is not available in static mode\nsetError('PDF download is not available in static demo mode. This feature requires a backend server.');return;}setIsDownloadingPDF(true);try{const response=await fetch(buildApiUrl(API_ENDPOINTS.DOWNLOAD_REPORT),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({prediction_data:{predictor_type:predictor.id,risk_score:result.risk_score,risk_level:result.risk_level,confidence:result.confidence,recommendations:result.recommendations},user_data:formData})});if(!response.ok){throw new Error('Failed to generate PDF report');}const blob=await response.blob();const url=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=\"\".concat(predictor.id,\"_health_report_\").concat(new Date().toISOString().split('T')[0],\".pdf\");document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(url);}catch(error){console.error('PDF download error:',error);setError('Failed to download PDF report. Please try again.');}finally{setIsDownloadingPDF(false);}};const renderField=field=>{var _field$options,_field$options2;// Use default value if formData is empty or undefined\nconst defaultValue=getDefaultExampleValue(field.name,field);const value=formData[field.name]!==undefined&&formData[field.name]!==''?formData[field.name]:defaultValue;const fieldError=fieldErrors[field.name];const hasError=!!fieldError;switch(field.type){case'number':const numValue=value!==null&&value!==undefined&&value!==''?parseFloat(value):field.min||0;const showSlider=field.min!==undefined&&field.max!==undefined&&field.max-field.min<=200;return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label flex items-center gap-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"flex items-center gap-1\",children:[getFieldIcon(field.name),field.label,field.required&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 ml-1\",children:\"*\"})]}),field.description&&/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsx(HelpCircle,{className:\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\",children:field.description})]})]}),showSlider?/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"range\",value:numValue,onChange:e=>handleInputChange(field.name,e.target.value!==''?parseFloat(e.target.value):field.min||0),min:field.min,max:field.max,step:field.step||1,className:\"flex-1 h-2 bg-gray-200 dark:bg-gray-700 rounded-lg appearance-none cursor-pointer slider\",style:{background:\"linear-gradient(to right, #3b82f6 0%, #3b82f6 \".concat((numValue-(field.min||0))/((field.max||100)-(field.min||0))*100,\"%, #e5e7eb \").concat((numValue-(field.min||0))/((field.max||100)-(field.min||0))*100,\"%, #e5e7eb 100%)\")}}),/*#__PURE__*/_jsxs(\"div\",{className:\"min-w-[80px] px-3 py-2 bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-lg text-sm font-medium text-blue-700 dark:text-blue-300 text-center\",children:[numValue,field.unit&&\" \".concat(field.unit)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-xs text-gray-500 dark:text-gray-400\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[field.min,field.unit&&\" \".concat(field.unit)]}),/*#__PURE__*/_jsxs(\"span\",{children:[field.max,field.unit&&\" \".concat(field.unit)]})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:numValue,onChange:e=>handleInputChange(field.name,e.target.value!==''?parseFloat(e.target.value):''),min:field.min,max:field.max,step:field.step||1,required:field.required,className:\"input pr-12 \".concat(hasError?'border-red-300 focus:border-red-500 focus:ring-red-500':'border-gray-300 focus:border-blue-500 focus:ring-blue-500',\" transition-colors duration-200\"),placeholder:\"Enter \".concat(field.label.toLowerCase())}),field.unit&&/*#__PURE__*/_jsx(\"span\",{className:\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 dark:text-gray-400 text-sm font-medium\",children:field.unit}),hasError&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute right-3 top-1/2 transform -translate-y-1/2\",children:/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-4 w-4 text-red-500\"})})]}),hasError&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-red-600 mt-1 flex items-center gap-1\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-3 w-3\"}),fieldError]}),field.min!==undefined&&field.max!==undefined&&!showSlider&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 dark:text-gray-400 mt-1\",children:[\"Range: \",field.min,\" - \",field.max,\" \",field.unit]})]},field.name);case'select':return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label flex items-center gap-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"flex items-center gap-1\",children:[getFieldIcon(field.name),field.label,field.required&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 ml-1\",children:\"*\"})]}),field.description&&/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsx(HelpCircle,{className:\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\",children:field.description})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsxs(\"select\",{value:value,onChange:e=>handleInputChange(field.name,e.target.value),required:field.required,className:\"input appearance-none \".concat(hasError?'border-red-300 focus:border-red-500 focus:ring-red-500':'border-gray-300 focus:border-blue-500 focus:ring-blue-500',\" transition-colors duration-200\"),children:[/*#__PURE__*/_jsxs(\"option\",{value:\"\",children:[\"Select \",field.label]}),(_field$options=field.options)===null||_field$options===void 0?void 0:_field$options.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option,children:option},option))]}),/*#__PURE__*/_jsx(ChevronDown,{className:\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\"}),hasError&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute right-8 top-1/2 transform -translate-y-1/2\",children:/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-4 w-4 text-red-500\"})})]}),hasError&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-red-600 mt-1 flex items-center gap-1\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-3 w-3\"}),fieldError]})]},field.name);case'radio':return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label flex items-center gap-2 mb-3\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"flex items-center gap-1\",children:[getFieldIcon(field.name),field.label,field.required&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 ml-1\",children:\"*\"})]}),field.description&&/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsx(HelpCircle,{className:\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\",children:field.description})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 gap-3\",children:(_field$options2=field.options)===null||_field$options2===void 0?void 0:_field$options2.map(option=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center p-3 border rounded-lg cursor-pointer transition-all duration-200 hover:bg-gray-50 dark:hover:bg-gray-800 \".concat(value===option?'border-blue-500 bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300':'border-gray-200 dark:border-gray-700'),children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:field.name,value:option,checked:value===option,onChange:e=>handleInputChange(field.name,e.target.value),required:field.required,className:\"mr-3 text-blue-600 focus:ring-blue-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:option})]},option))}),hasError&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-red-600 mt-2 flex items-center gap-1\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-3 w-3\"}),fieldError]})]},field.name);case'checkbox':return/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start gap-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center h-5\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:value,onChange:e=>handleInputChange(field.name,e.target.checked),className:\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded transition-colors duration-200\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center gap-2 cursor-pointer\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"flex items-center gap-1\",children:[getFieldIcon(field.name),field.label,field.required&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 ml-1\",children:\"*\"})]}),field.description&&/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsx(HelpCircle,{className:\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\",children:field.description})]})]}),hasError&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-red-600 mt-1 flex items-center gap-1\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-3 w-3\"}),fieldError]})]})]})},field.name);default:return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label flex items-center gap-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"flex items-center gap-1\",children:[getFieldIcon(field.name),field.label,field.required&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 ml-1\",children:\"*\"})]}),field.description&&/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsx(HelpCircle,{className:\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\",children:field.description})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:value,onChange:e=>handleInputChange(field.name,e.target.value),required:field.required,className:\"input \".concat(hasError?'border-red-300 focus:border-red-500 focus:ring-red-500':'border-gray-300 focus:border-blue-500 focus:ring-blue-500',\" transition-colors duration-200\"),placeholder:\"Enter \".concat(field.label.toLowerCase())}),hasError&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute right-3 top-1/2 transform -translate-y-1/2\",children:/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-4 w-4 text-red-500\"})})]}),hasError&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-red-600 mt-1 flex items-center gap-1\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-3 w-3\"}),fieldError]})]},field.name);}};if(isLoadingFields){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center transition-colors duration-300\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 dark:border-blue-400 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-900 dark:text-white mb-2\",children:\"Loading Predictor...\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-300\",children:\"Fetching field definitions from server\"})]})});}if(!predictor){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 dark:text-white mb-4\",children:\"Predictor Not Found\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-300 mb-6\",children:\"The requested predictor could not be found.\"}),/*#__PURE__*/_jsx(Link,{to:\"/predictors\",className:\"btn-primary\",children:\"Back to Predictors\"})]})});}const Icon=predictor.icon;return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen py-8\",children:[/*#__PURE__*/_jsx(\"style\",{children:\"\\n        .slider::-webkit-slider-thumb {\\n          appearance: none;\\n          height: 20px;\\n          width: 20px;\\n          border-radius: 50%;\\n          background: #3b82f6;\\n          cursor: pointer;\\n          border: 2px solid #ffffff;\\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\\n        }\\n        .slider::-moz-range-thumb {\\n          height: 20px;\\n          width: 20px;\\n          border-radius: 50%;\\n          background: #3b82f6;\\n          cursor: pointer;\\n          border: 2px solid #ffffff;\\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\\n        }\\n        .slider:focus::-webkit-slider-thumb {\\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\\n        }\\n        .slider:focus::-moz-range-thumb {\\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\\n        }\\n      \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"container-max section-padding\",children:[/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:0.8},className:\"mb-8\",children:[/*#__PURE__*/_jsxs(Link,{to:\"/predictors\",className:\"inline-flex items-center text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 mb-6 transition-colors duration-200\",children:[/*#__PURE__*/_jsx(ArrowLeft,{className:\"h-4 w-4 mr-2\"}),\"Back to Predictors\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start space-x-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-16 h-16 bg-primary-100 dark:bg-primary-900/30 rounded-xl flex items-center justify-center\",children:/*#__PURE__*/_jsx(Icon,{className:\"h-8 w-8 text-primary-600 dark:text-primary-400\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl lg:text-4xl font-display font-bold text-gray-900 dark:text-white mb-2\",children:predictor.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-gray-600 dark:text-gray-300 mb-4\",children:predictor.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-6 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-gray-500 dark:text-gray-400\",children:[/*#__PURE__*/_jsx(Clock,{className:\"h-4 w-4 mr-1\"}),predictor.estimatedTime]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-green-600 dark:text-green-400 font-medium\",children:[predictor.accuracy,\" accuracy\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full text-xs font-medium\",children:predictor.difficulty})]})]})]})]}),currentStep===0?/*#__PURE__*//* Form Step */_jsx(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:0.8,delay:0.2},children:/*#__PURE__*/_jsxs(\"div\",{className:\"card max-w-4xl mx-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 dark:text-white mb-4\",children:\"Health Assessment Form\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-300\",children:\"Please review and adjust the pre-filled values below to get your personalized health assessment.\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4 mb-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-5 w-5 text-red-600 dark:text-red-400 mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-red-800 dark:text-red-300\",children:error})]})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"space-y-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-4\",children:[/*#__PURE__*/_jsx(FileText,{className:\"h-5 w-5 text-blue-600 dark:text-blue-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"Inputs\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\",children:predictor===null||predictor===void 0?void 0:(_predictor$fields3=predictor.fields)===null||_predictor$fields3===void 0?void 0:_predictor$fields3.map(renderField)})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col sm:flex-row items-center justify-between pt-8 border-t border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-4 sm:mb-0\",children:[/*#__PURE__*/_jsx(CheckCircle,{className:\"h-4 w-4 mr-2 text-green-500\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Ready for assessment\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading||formProgress<100||Object.values(fieldErrors).some(error=>error),className:\"btn-primary px-8 py-3 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2 min-w-[160px] justify-center transition-all duration-200 hover:shadow-lg\",children:isLoading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Loader,{className:\"animate-spin h-5 w-5\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Analyzing...\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TrendingUp,{className:\"h-5 w-5\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Get Prediction\"})]})})]})]})]})}):/*#__PURE__*//* Results Step */_jsx(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:0.8},children:result&&/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 dark:text-white\",children:\"Risk Assessment\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleDownloadPDF,disabled:isDownloadingPDF,className:\"btn-outline p-2 relative\",title:\"Download PDF Report\",children:isDownloadingPDF?/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin h-4 w-4 border-2 border-current border-t-transparent rounded-full\"}):/*#__PURE__*/_jsx(Download,{className:\"h-4 w-4\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-outline p-2\",title:\"Share Report\",children:/*#__PURE__*/_jsx(Share2,{className:\"h-4 w-4\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"inline-flex items-center px-4 py-2 rounded-full text-lg font-semibold \".concat(getRiskColor(result.risk_level)),children:[/*#__PURE__*/React.createElement(getRiskIcon(result.risk_level),{className:'h-5 w-5 mr-2'}),result.risk_level,\" Risk\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 mt-2\",children:\"Risk Level\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-3xl font-bold text-gray-900 dark:text-white\",children:[Math.round(result.risk_score*100),\"%\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400 mt-2\",children:\"Risk Score\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-3xl font-bold text-gray-900 dark:text-white\",children:[Math.round(result.confidence*100),\"%\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400 mt-2\",children:\"Confidence\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-gray-900 dark:text-white mb-2\",children:\"Explanation\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-700 dark:text-gray-300\",children:result.explanation})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(FileText,{className:\"h-6 w-6 text-blue-600 dark:text-blue-400\"}),\"Input Values Used in Prediction\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-xl p-6\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-700 dark:text-gray-300 mb-4\",children:\"This prediction was generated using the following input values. These values represent your health profile and are used by our AI model to assess risk factors and generate personalized recommendations.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",children:Object.entries(formData).filter(_ref3=>{let[key,value]=_ref3;return value!==''&&value!==null&&value!==undefined;}).map(_ref4=>{var _predictor$fields4;let[key,value]=_ref4;const field=predictor===null||predictor===void 0?void 0:(_predictor$fields4=predictor.fields)===null||_predictor$fields4===void 0?void 0:_predictor$fields4.find(f=>f.name===key);const displayName=(field===null||field===void 0?void 0:field.label)||key.replace(/_/g,' ').replace(/\\b\\w/g,l=>l.toUpperCase());const unit=(field===null||field===void 0?void 0:field.unit)||'';return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg p-4 border border-blue-200 dark:border-blue-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-gray-900 dark:text-white text-sm\",children:displayName}),(field===null||field===void 0?void 0:field.required)&&/*#__PURE__*/_jsx(\"span\",{className:\"text-xs bg-blue-100 text-blue-700 dark:bg-blue-800 dark:text-blue-200 px-2 py-1 rounded-full\",children:\"Required\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg font-bold text-blue-600 dark:text-blue-400\",children:typeof value==='boolean'?value?'Yes':'No':value}),unit&&/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:unit})]}),(field===null||field===void 0?void 0:field.description)&&/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-600 dark:text-gray-400 mt-2\",children:field.description})]},key);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-blue-100 dark:bg-blue-900/30 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-semibold text-blue-900 dark:text-blue-100 mb-2 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Info,{className:\"h-4 w-4\"}),\"How These Values Impact Your Prediction\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-blue-800 dark:text-blue-200\",children:\"Our AI model analyzes these input values using advanced machine learning algorithms trained on medical data. Each value contributes to the overall risk assessment, with some factors having higher impact than others. The model considers interactions between different health parameters to provide a comprehensive prediction.\"})]})]})]}),((_result$risk_factors=result.risk_factors)===null||_result$risk_factors===void 0?void 0:_result$risk_factors.length)>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-4\",children:\"Key Risk Factors\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:result.risk_factors.map((factor,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center p-3 bg-orange-50 dark:bg-orange-900/20 rounded-lg\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-5 w-5 text-orange-600 dark:text-orange-400 mr-3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-orange-800 dark:text-orange-300\",children:factor})]},index))})]}),((_result$recommendatio=result.recommendations)===null||_result$recommendatio===void 0?void 0:_result$recommendatio.length)>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-4\",children:\"Recommendations\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:result.recommendations.map((recommendation,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\",children:[/*#__PURE__*/_jsx(CheckCircle,{className:\"h-5 w-5 text-blue-600 dark:text-blue-400 mr-3 mt-0.5\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-800 dark:text-blue-300\",children:recommendation})]},index))})]}),((_result$detailed_anal=result.detailed_analysis)===null||_result$detailed_anal===void 0?void 0:_result$detailed_anal.contributing_factors)&&result.detailed_analysis.contributing_factors.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-4\",children:\"Contributing Factors\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:result.detailed_analysis.contributing_factors.map((factor,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center p-3 bg-purple-50 dark:bg-purple-900/20 rounded-lg\",children:[/*#__PURE__*/_jsx(TrendingUp,{className:\"h-5 w-5 text-purple-600 dark:text-purple-400 mr-3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-purple-800 dark:text-purple-300\",children:factor})]},index))})]}),((_result$detailed_anal2=result.detailed_analysis)===null||_result$detailed_anal2===void 0?void 0:_result$detailed_anal2.health_metrics)&&result.detailed_analysis.health_metrics.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-4\",children:\"Health Metrics Analysis\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:result.detailed_analysis.health_metrics.map((metric,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-green-900 dark:text-green-100\",children:metric.category}),/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 rounded-full text-xs font-medium \".concat(metric.status==='Normal'?'bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100':metric.status==='Warning'?'bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100':'bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100'),children:metric.status})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-green-700 dark:text-green-300 mb-2\",children:metric.value}),metric.recommendation&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-green-600 dark:text-green-400\",children:metric.recommendation})]},index))})]}),result.risk_score!==undefined&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(BarChart3,{className:\"h-6 w-6 text-purple-600 dark:text-purple-400\"}),\"Risk Assessment Overview\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-purple-50 to-indigo-50 dark:from-purple-900/20 dark:to-indigo-900/20 rounded-xl p-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-gray-900 dark:text-white mb-4 text-center\",children:\"Overall Risk Level\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center py-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative w-40 h-40 mb-6\",children:[/*#__PURE__*/_jsxs(\"svg\",{className:\"w-40 h-40 transform -rotate-90\",viewBox:\"0 0 144 144\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"72\",cy:\"72\",r:\"60\",stroke:\"currentColor\",strokeWidth:\"8\",fill:\"none\",className:\"text-gray-200 dark:text-gray-700\"}),/*#__PURE__*/_jsx(\"circle\",{cx:\"72\",cy:\"72\",r:\"60\",stroke:\"currentColor\",strokeWidth:\"8\",fill:\"none\",strokeDasharray:\"\".concat(2*Math.PI*60),strokeDashoffset:\"\".concat(2*Math.PI*60*(1-result.risk_score)),className:\"transition-all duration-1000 ease-out \".concat(result.risk_score<0.3?'text-green-500':result.risk_score<0.7?'text-yellow-500':'text-red-500'),strokeLinecap:\"round\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-3xl font-bold \".concat(result.risk_score<0.3?'text-green-600 dark:text-green-400':result.risk_score<0.7?'text-yellow-600 dark:text-yellow-400':'text-red-600 dark:text-red-400'),children:[Math.round(result.risk_score*100),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-600 dark:text-gray-400 font-medium\",children:\"Risk Score\"})]})})]}),/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex px-4 py-2 rounded-full text-sm font-medium \".concat(result.risk_score<0.3?'bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100':result.risk_score<0.7?'bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100':'bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100'),children:result.risk_score<0.3?'Low Risk':result.risk_score<0.7?'Moderate Risk':'High Risk'}),/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-sm text-gray-600 dark:text-gray-400 mt-3 max-w-xs\",children:result.risk_score<0.3?'Your risk level is low. Continue maintaining healthy habits.':result.risk_score<0.7?'Your risk level is moderate. Consider lifestyle improvements.':'Your risk level is high. Consult with healthcare professionals.'})]})]}),((_result$detailed_anal3=result.detailed_analysis)===null||_result$detailed_anal3===void 0?void 0:_result$detailed_anal3.contributing_factors)&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-blue-50 to-cyan-50 dark:from-blue-900/20 dark:to-cyan-900/20 rounded-xl p-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-gray-900 dark:text-white mb-4\",children:\"Key Contributing Factors\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:result.detailed_analysis.contributing_factors.slice(0,5).map((factor,index)=>{// Assign different impact levels for visual variety\nconst impactLevels=[85,70,60,45,30];const impactLevel=impactLevels[index]||50;const colors=['bg-red-500','bg-orange-500','bg-yellow-500','bg-blue-500','bg-green-500'];const bgColors=['bg-red-50 dark:bg-red-900/20','bg-orange-50 dark:bg-orange-900/20','bg-yellow-50 dark:bg-yellow-900/20','bg-blue-50 dark:bg-blue-900/20','bg-green-50 dark:bg-green-900/20'];return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 \".concat(bgColors[index],\" rounded-lg border border-opacity-20\"),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700 dark:text-gray-300\",children:factor}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500 dark:text-gray-400\",children:[impactLevel,\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-2 rounded-full \".concat(colors[index],\" transition-all duration-1000 ease-out\"),style:{width:\"\".concat(impactLevel,\"%\")}})})]},index);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-white dark:bg-gray-800 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-sm font-semibold text-gray-900 dark:text-white mb-3\",children:\"Impact Distribution\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4 text-xs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-red-500 rounded-full\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600 dark:text-gray-400\",children:\"High Impact\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-yellow-500 rounded-full\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600 dark:text-gray-400\",children:\"Moderate Impact\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-green-500 rounded-full\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600 dark:text-gray-400\",children:\"Low Impact\"})]})]})]})]})]})]}),((_result$detailed_anal4=result.detailed_analysis)===null||_result$detailed_anal4===void 0?void 0:_result$detailed_anal4.lifestyle_impact)&&Object.keys(result.detailed_analysis.lifestyle_impact).length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Activity,{className:\"h-6 w-6 text-indigo-600 dark:text-indigo-400\"}),\"Lifestyle Impact Analysis\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-indigo-50 to-purple-50 dark:from-indigo-900/20 dark:to-purple-900/20 rounded-xl p-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-gray-900 dark:text-white mb-4\",children:\"Lifestyle Impact Overview\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:(()=>{// Filter and process lifestyle factors to show only meaningful ones\nconst meaningfulFactors=Object.entries(result.detailed_analysis.lifestyle_impact).filter(_ref5=>{let[key,value]=_ref5;return key!=='recommendations'&&value&&typeof value==='string'&&value.length>5&&// Filter out single letters\n!key.match(/^\\d+$/);// Filter out numeric keys\n}).slice(0,5);// Limit to top 5 factors\nif(meaningfulFactors.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 dark:text-gray-400\",children:\"No specific lifestyle factors identified\"})});}return meaningfulFactors.map((_ref6,index)=>{let[key,value]=_ref6;// Determine impact level from content\nlet impactLevel='Medium';let impactScore=60;if(typeof value==='string'){const lowerValue=value.toLowerCase();if(lowerValue.includes('low')||lowerValue.includes('minimal')||lowerValue.includes('good')){impactLevel='Low';impactScore=25;}else if(lowerValue.includes('high')||lowerValue.includes('significant')||lowerValue.includes('severe')||lowerValue.includes('poor')){impactLevel='High';impactScore=85;}}const getIcon=factorKey=>{const lowerKey=factorKey.toLowerCase();if(lowerKey.includes('smoking')||lowerKey.includes('tobacco'))return'ð­';if(lowerKey.includes('diet')||lowerKey.includes('nutrition')||lowerKey.includes('food'))return'ð¥';if(lowerKey.includes('exercise')||lowerKey.includes('activity')||lowerKey.includes('physical'))return'ð';if(lowerKey.includes('sleep'))return'ð´';if(lowerKey.includes('stress')||lowerKey.includes('mental'))return'ð°';if(lowerKey.includes('alcohol')||lowerKey.includes('drink'))return'ð·';if(lowerKey.includes('weight')||lowerKey.includes('bmi')||lowerKey.includes('obesity'))return'âï¸';if(lowerKey.includes('blood')||lowerKey.includes('pressure'))return'ð©¸';return'ð';};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 bg-white dark:bg-gray-800 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3 flex-1\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xl\",children:getIcon(key)}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-gray-900 dark:text-white text-sm\",children:key.replace(/_/g,' ').replace(/\\b\\w/g,l=>l.toUpperCase())}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mt-1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-2 rounded-full transition-all duration-500 \".concat(impactLevel==='Low'?'bg-green-500':impactLevel==='Medium'?'bg-yellow-500':'bg-red-500'),style:{width:\"\".concat(impactScore,\"%\")}})})]})]}),/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 rounded-full text-xs font-medium ml-3 \".concat(impactLevel==='Low'?'bg-green-100 text-green-700 dark:bg-green-800 dark:text-green-200':impactLevel==='Medium'?'bg-yellow-100 text-yellow-700 dark:bg-yellow-800 dark:text-yellow-200':'bg-red-100 text-red-700 dark:bg-red-800 dark:text-red-200'),children:impactLevel})]},index);});})()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-blue-50 to-cyan-50 dark:from-blue-900/20 dark:to-cyan-900/20 rounded-xl p-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-gray-900 dark:text-white mb-4\",children:\"Risk Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:(()=>{// Create a simple risk distribution visualization\nconst riskCategories=[{name:'Low Risk Factors',value:30,color:'bg-green-500',count:2},{name:'Moderate Risk Factors',value:45,color:'bg-yellow-500',count:3},{name:'High Risk Factors',value:25,color:'bg-red-500',count:1}];return riskCategories.map((category,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700 dark:text-gray-300\",children:category.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:[category.count,\" factors\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-3 rounded-full \".concat(category.color,\" transition-all duration-700\"),style:{width:\"\".concat(category.value,\"%\")}})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500 dark:text-gray-400\",children:[category.value,\"%\"]})})]},index));})()})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-r from-emerald-50 to-teal-50 dark:from-emerald-900/20 dark:to-teal-900/20 rounded-xl p-6 border border-emerald-200 dark:border-emerald-700\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-semibold text-emerald-900 dark:text-emerald-100 mb-4 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(CheckCircle,{className:\"h-5 w-5\"}),\"Key Health Recommendations\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:(()=>{// Generate relevant recommendations based on predictor type\nconst baseRecommendations=[\"Maintain a balanced diet rich in fruits and vegetables\",\"Engage in regular physical activity (150 minutes per week)\",\"Get adequate sleep (7-9 hours per night)\",\"Manage stress through relaxation techniques\"];// Use actual recommendations if available, otherwise use base ones\nconst recommendations=result.detailed_analysis.lifestyle_impact&&Array.isArray(result.detailed_analysis.lifestyle_impact)&&result.detailed_analysis.lifestyle_impact.length>0?result.detailed_analysis.lifestyle_impact.slice(0,4).map(item=>item.description||item.factor):baseRecommendations;return recommendations.map((recommendation,recIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start gap-3 p-4 bg-white dark:bg-gray-800 rounded-lg border border-emerald-100 dark:border-emerald-800 hover:shadow-md transition-all duration-200\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-6 h-6 bg-emerald-500 text-white rounded-full flex items-center justify-center text-xs font-bold mt-0.5 flex-shrink-0\",children:recIndex+1}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-emerald-700 dark:text-emerald-300 leading-relaxed\",children:recommendation})]},recIndex));})()})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setCurrentStep(0);setResult(null);setError(null);},className:\"btn-outline\",children:\"New Assessment\"}),/*#__PURE__*/_jsx(Link,{to:\"/predictors\",className:\"btn-primary\",children:\"Try Another Predictor\"})]})]})})]})]});};export default PredictorDetail;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useParams","Link","motion","axios","buildApiUrl","API_ENDPOINTS","isStaticMode","ArrowLeft","Heart","Brain","Activity","Stethoscope","TrendingUp","Zap","Clock","AlertTriangle","CheckCircle","Info","Loader","Download","Share2","Droplets","HelpCircle","ChevronDown","User","Calendar","Thermometer","Scale","FileText","BarChart3","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PredictorDetail","_predictor$fields3","_result$risk_factors","_result$recommendatio","_result$detailed_anal","_result$detailed_anal2","_result$detailed_anal3","_result$detailed_anal4","predictorId","predictor","setPredictor","formData","setFormData","isLoading","setIsLoading","isLoadingFields","setIsLoadingFields","result","setResult","error","setError","currentStep","setCurrentStep","backendFields","setBackendFields","formProgress","setFormProgress","fieldErrors","setFieldErrors","isDownloadingPDF","setIsDownloadingPDF","getBackendFieldName","fieldName","predictorType","getDefaultExampleValue","field","examples","undefined","type","min","max","Math","round","options","convertBackendFieldsToFormFields","backendInfo","fields","Object","entries","required_fields","forEach","_ref","fieldType","description","field_descriptions","formField","name","label","split","trim","replace","l","toUpperCase","required","step","_objectSpread","unit","includes","toLowerCase","startsWith","match","parseInt","push","predictorData","heart_disease","id","category","icon","difficulty","estimatedTime","accuracy","diabetes","anemia","sepsis","stroke_risk","obesity_risk","hypertension","cholesterol_risk","mental_health","sleep_apnea","covid_risk","Shield","fetchPredictorFields","_predictorData$predic","_predictorData$predic2","initialData","filledFields","values","filter","val","length","Error","response","fetch","PREDICTOR_FIELDS","ok","concat","statusText","json","formFields","predictorInfo","err","console","message","_predictorData$predic3","_predictorData$predic4","validateField","value","numValue","parseFloat","isNaN","age","bp","handleInputChange","_predictor$fields","prev","find","f","totalFields","getFieldIcon","iconMap","className","sex","gender","chest_pain_type","resting_bp","cholesterol","fasting_bs","resting_ecg","max_hr","exercise_angina","oldpeak","st_slope","bmi","temperature","blood_pressure","handleSubmit","e","_predictor$fields2","preventDefault","errors","keys","_env","backendData","_ref2","backendFieldName","mapping","toString","log","import","meta","env","REACT_APP_STATIC_MODE","Promise","resolve","setTimeout","mockResult","risk_score","random","risk_level","floor","confidence","recommendations","analysis","risk_factors","explanation","post","PREDICT","predictor_type","data","include_analysis","_err$response","_err$response$data","getRiskColor","riskLevel","getRiskIcon","handleDownloadPDF","VITE_STATIC_MODE","DOWNLOAD_REPORT","method","headers","body","JSON","stringify","prediction_data","user_data","blob","url","window","URL","createObjectURL","link","document","createElement","href","download","Date","toISOString","appendChild","click","removeChild","revokeObjectURL","renderField","_field$options","_field$options2","defaultValue","fieldError","hasError","showSlider","children","onChange","target","style","background","placeholder","map","option","checked","to","Icon","div","initial","opacity","y","animate","transition","duration","delay","onSubmit","disabled","some","onClick","title","_ref3","key","_ref4","_predictor$fields4","displayName","factor","index","recommendation","detailed_analysis","contributing_factors","health_metrics","metric","status","viewBox","cx","cy","r","stroke","strokeWidth","fill","strokeDasharray","PI","strokeDashoffset","strokeLinecap","slice","impactLevels","impactLevel","colors","bgColors","width","lifestyle_impact","meaningfulFactors","_ref5","_ref6","impactScore","lowerValue","getIcon","factorKey","lowerKey","riskCategories","color","count","baseRecommendations","Array","isArray","item","recIndex"],"sources":["C:/Users/kapoo/OneDrive/Desktop/Gods Health AI/frontend/src/pages/PredictorDetail.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport axios from 'axios';\nimport { buildApiUrl, API_ENDPOINTS, isStaticMode } from '../config/api.js';\nimport {\n  ArrowLeft,\n  Heart,\n  Brain,\n  Activity,\n  Stethoscope,\n  TrendingUp,\n  Zap,\n  Clock,\n  AlertTriangle,\n  CheckCircle,\n  Info,\n  Loader,\n  Download,\n  Share2,\n  Droplets,\n  HelpCircle,\n  ChevronDown,\n  User,\n  Calendar,\n  Thermometer,\n  Scale,\n  FileText,\n  BarChart3\n} from 'lucide-react';\n// Recharts components removed - using simpler card-based design\n\ninterface PredictorInfo {\n  id: string;\n  name: string;\n  description: string;\n  category: string;\n  icon: React.ComponentType<any>;\n  difficulty: string;\n  estimatedTime: string;\n  accuracy: string;\n  fields: FormField[];\n}\n\ninterface FormField {\n  name: string;\n  label: string;\n  type: 'number' | 'select' | 'radio' | 'checkbox' | 'text';\n  required: boolean;\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  unit?: string;\n  description?: string;\n}\n\ninterface BackendFieldInfo {\n  required_fields: Record<string, string>;\n  field_descriptions: Record<string, string>;\n  predictor_type: string;\n  name: string;\n  description: string;\n}\n\ninterface PredictionResult {\n  risk_level: 'Low' | 'Medium' | 'High' | 'Critical';\n  risk_score: number;\n  confidence: number;\n  recommendations: string[];\n  risk_factors: string[];\n  explanation: string;\n  detailed_analysis?: {\n    contributing_factors?: string[];\n    health_metrics?: {\n      category: string;\n      value: string;\n      status: string;\n      recommendation?: string;\n    }[];\n    lifestyle_impact?: {\n      factor: string;\n      impact_level: string;\n      description: string;\n      improvement_suggestions?: string[];\n    }[];\n  };\n}\n\nconst PredictorDetail: React.FC = () => {\n  const { predictorId } = useParams<{ predictorId: string }>();\n  const [predictor, setPredictor] = useState<PredictorInfo | null>(null);\n  const [formData, setFormData] = useState<Record<string, any>>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingFields, setIsLoadingFields] = useState(true);\n  const [result, setResult] = useState<PredictionResult | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [backendFields, setBackendFields] = useState<BackendFieldInfo | null>(null);\n  const [formProgress, setFormProgress] = useState(0);\n  const [fieldErrors, setFieldErrors] = useState<Record<string, string>>({});\n  const [isDownloadingPDF, setIsDownloadingPDF] = useState(false);\n\n  // Field mapping for common conversions\n  // Field mapping for different predictors - HeartDiseasePredictor uses 'sex', others use 'gender'\n  const getBackendFieldName = (fieldName: string, predictorType: string): string => {\n    if (fieldName === 'gender' && predictorType === 'heart_disease') {\n      return 'sex';\n    }\n    return fieldName;\n  };\n\n  // Get default example values for form fields\n  const getDefaultExampleValue = (fieldName: string, field: FormField): any => {\n    // Common field examples\n    const examples: Record<string, any> = {\n      // Basic demographics\n      'age': 45,\n      'gender': 'Male',\n      'sex': 'Male',\n      'weight': 70,\n      'height': 175,\n      'occupation': 'Technology',\n      'maternal_age': 28,\n      'gestational_age': 38,\n      'multiple_pregnancy': 'No',\n      \n      // Vital signs and measurements\n      'systolic_bp': 130,\n      'diastolic_bp': 85,\n      'resting_bp': 130,\n      'blood_pressure': 130,\n      'cholesterol': 220,\n      'total_cholesterol': 220,\n      'hdl_cholesterol': 45,\n      'ldl_cholesterol': 130,\n      'triglycerides': 180,\n      'bmi': 26.5,\n      'max_hr': 165,\n      'heart_rate': 75,\n      'oldpeak': 1.2,\n      'glucose_level': 95,\n      'avg_glucose_level': 110,\n      'glucose_fasting': 95,\n      'waist_circumference': 85,\n      'hip_circumference': 95,\n      'body_fat_percentage': 18,\n      'muscle_mass': 35,\n      'metabolic_rate': 1650,\n      'temperature': 98.6,\n      'spo2': 98,\n      'respiratory_rate': 16,\n      'mean_bp': 100,\n      'specific_gravity': 1.025,\n      'meals_per_day': 3,\n      'fruit_vegetable_servings': 5,\n      'albumin': 1,\n      'sugar': 0,\n      \n      // Medical history\n      'hypertension': 'No',\n      'heart_disease': 'No',\n      'family_history': 'Yes',\n      'family_history_diabetes': 'No',\n      'family_history_heart_disease': 'No',\n      'family_history_hypertension': 'No',\n      'family_history_obesity': 'No',\n      'family_history_respiratory': 'No',\n      'diabetes': 'No',\n      'kidney_disease': 'No',\n      'liver_disease': 'No',\n      'thyroid_disorder': 'No',\n      'autoimmune_disease': 'No',\n      'chronic_hypertension': 'No',\n      'diabetes_pre_pregnancy': 'No',\n      'insulin_level': 15,\n      'pregnancies': 2,\n      'skin_thickness': 25,\n      'diabetes_pedigree_function': 0.5,\n      'previous_cancer': 'No',\n      'cancer_type': 'None',\n      'hormonal_factors': 'Normal',\n      'fasting_bs': 'No',\n      'chronic_illness': 'No',\n      'previous_complications': 'No',\n      'fetal_growth_restriction': 'No',\n      'mobility': 'Normal',\n      'medications_weight_gain': 'No',\n      'medication_statins': 'No',\n      'mechanical_ventilation': 'No',\n      'vasopressor_use': 'No',\n      'admission_diagnosis': 'None',\n      'comorbidities': 'None',\n      \n      // Lifestyle factors\n      'smoking_status': 'Never Smoked',\n      'smoking_history': 'Never',\n      'smoking': 'No',\n      'smoking_years': 0,\n      'smoking_pack_years': 0,\n      'alcohol_consumption': 'Light',\n      'alcohol_intake': 'Light',\n      'physical_activity': 'Moderate',\n      'physical_activity_level': 'Moderate',\n      'activity_level': 'Moderately Active',\n      'current_fitness_level': 'Intermediate',\n      'exercise_frequency': 'Moderate',\n      'exercise_duration': 45,\n      'sleep_hours': 7,\n      'sleep_quality': 'Good',\n      'stress_level': 3,\n      'social_support': 'Good',\n      'work_satisfaction': 'Satisfied',\n      'substance_use': 'None',\n      'diet_quality': 'Good',\n      'dietary_restrictions': 'None',\n      'nutrition_score': 75,\n      'caffeine_intake': 'Moderate (3-4 cups)',\n      'water_intake': 2.5,\n      'sedentary_hours': 6,\n      'screen_time': 4,\n      'work_stress': 'Moderate',\n      'financial_stress': 'Low',\n      'relationship_stress': 'Low',\n      'morning_alertness': 'Alert',\n      'daytime_fatigue': 'Sometimes',\n      'sleep_disorders': 'No',\n      'shift_work': 'No',\n      'environmental_factors': 'Good',\n      'processed_food_frequency': 'Sometimes',\n      'cooking_frequency': 'Often',\n      'supplement_use': 'No',\n      'screen_time_before_bed': '<30 min',\n      'sleep_environment': 'Good',\n      'snoring': 'No',\n      'sleep_medications': 'No',\n      'sleep_problems': 'No',\n      'work_stress_level': 5,\n      'work_hours_per_week': 40,\n      'job_satisfaction': 'Satisfied',\n      'work_life_balance': 'Good',\n      'emotional_exhaustion': 'Sometimes',\n      'cynicism': 'Rarely',\n      'personal_accomplishment': 'High',\n      'physical_symptoms': 'No',\n      'coping_strategies': 'Exercise',\n      'support_system': 'Good',\n      \n      // Clinical tests\n      'chest_pain_type': 'Typical angina',\n      'resting_ecg': 'Normal',\n      'exercise_angina': 'No',\n      'cognitive_score': 28,\n      'education_years': 16,\n      'symptoms_count': 2,\n      \n      // Liver function tests\n      'bilirubin': 1.2,\n      'alkaline_phosphotase': 250,\n      'alamine_aminotransferase': 35,\n      \n      // Neurological assessments\n      'tremor_score': 2,\n      'rigidity_score': 1,\n      'bradykinesia_score': 1,\n      'postural_instability': 'No',\n      \n      // Blood work\n      'white_blood_cells': 8000,\n      'hemoglobin': 14.5,\n      'hematocrit': 42,\n      'platelet_count': 250000,\n      'red_blood_cell_count': 4.8,\n      'mcv': 88,\n      'mch': 30,\n      'mchc': 34,\n      'ferritin': 150,\n      'iron': 100,\n      'transferrin_saturation': 25,\n      'vitamin_b12': 400,\n      'folate': 12,\n      \n      // Thyroid function\n      'tsh': 2.5,\n      't3': 120,\n      't4': 8.5,\n      'thyroid_antibodies': 'Negative',\n      \n      // Cancer markers\n      'original_cancer_stage': 'Stage I',\n      'months_since_treatment': 12,\n      'complete_response': 'Yes',\n      'elevated_tumor_markers': 'No',\n      \n      // Sepsis indicators\n      'lactate': 1.5,\n      'procalcitonin': 0.5,\n      'creatinine': 1.0,\n      'urea': 25,\n      'sodium': 140,\n      'potassium': 4.0,\n      'chloride': 100,\n      'co2': 24,\n      \n      // Respiratory function\n      'peak_flow': 450,\n      'fev1': 3.2,\n      'fvc': 4.0,\n      'oxygen_saturation': 98,\n      'chest_xray': 'Normal',\n      'spirometry': 'Normal',\n      \n      // Pregnancy related\n      'parity': 1,\n      'gravidity': 2,\n      'previous_preterm': 'No',\n      'previous_stillbirth': 'No',\n      'cervical_length': 35,\n      'amniotic_fluid': 'Normal',\n      'placental_position': 'Normal',\n      \n      // Surgery related\n      'surgery_type': 'Elective',\n      'anesthesia_type': 'General',\n      'surgery_duration': 120,\n      'blood_loss': 200,\n      'asa_score': 2,\n      \n      // ICU related\n      'apache_score': 15,\n      'sofa_score': 6,\n      'glasgow_coma_scale': 15,\n      'ventilator_days': 0,\n      'dialysis': 'No',\n      'organ_failure_count': 0,\n      \n      // Hospital readmission\n      'length_of_stay': 5,\n      'discharge_disposition': 'Home',\n      'number_diagnoses': 3,\n      'number_procedures': 1,\n      'number_medications': 8,\n      'emergency_admission': 'No',\n      'num_diagnoses': 3,\n      'num_medications': 8,\n      \n      // Additional missing fields\n      'current_bmi': 26.5,\n      'physical_activity_hours': 3,\n      'daily_calories': 2000,\n      'neck_circumference': 38,\n      'loud_snoring': 'No',\n      'daytime_sleepiness': 'No',\n      'comorbidity_count': 1,\n      'fully_vaccinated': 'Yes',\n      'symptoms_severity': 'Mild',\n      'serum_iron': 100,\n      'heavy_menstrual_bleeding': 'No',\n      'dietary_iron_adequate': 'Yes',\n      'family_history_thyroid': 'No',\n      'social_support_score': 8,\n      'recent_life_events': 'No',\n      'sepsis': 'No',\n      'emergency_surgery': 'No',\n      \n      // Work and lifestyle\n      'work_type': 0, // Private\n      'residence_type': 1, // Urban\n      'ever_married': 1, // Yes\n      'family_history_stroke': 0, // No\n      'environmental_exposure': 'No',\n      'sodium_intake_mg': 2800\n    };\n    \n    // Return specific example if available\n    if (examples[fieldName] !== undefined) {\n      return examples[fieldName];\n    }\n    \n    // Fallback based on field type\n    if (field.type === 'number') {\n      if (field.min !== undefined && field.max !== undefined) {\n        return Math.round((field.min + field.max) / 2);\n      }\n      return field.min || 0;\n    } else if (field.type === 'select' && field.options) {\n      return field.options[0];\n    } else if (field.type === 'checkbox') {\n      return false;\n    }\n    \n    return '';\n  };\n\n  // Convert backend field definitions to frontend form fields\n  const convertBackendFieldsToFormFields = (backendInfo: BackendFieldInfo): FormField[] => {\n    const fields: FormField[] = [];\n    \n    Object.entries(backendInfo.required_fields).forEach(([fieldName, fieldType]) => {\n      const description = backendInfo.field_descriptions[fieldName] || '';\n      \n      let formField: FormField = {\n        name: fieldName,\n        label: description.split('(')[0].trim() || fieldName.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n        type: 'text',\n        required: true,\n        description: description\n      };\n\n      // Determine field type and options based on field name and description\n      if (fieldType === 'int' || fieldType === 'float') {\n        formField.type = 'number';\n        if (fieldType === 'float') {\n          formField.step = 0.1;\n        }\n      }\n\n      // Special handling for common fields\n      if (fieldName === 'gender' || fieldName === 'sex') {\n        formField = {\n          ...formField,\n          name: 'gender', // Always use 'gender' internally\n          label: 'Gender',\n          type: 'select',\n          options: ['Female', 'Male'],\n          description: 'Gender (0 = Female, 1 = Male)'\n        };\n      } else if (fieldName === 'age') {\n        formField = {\n          ...formField,\n          type: 'number',\n          min: 0,\n          max: 120,\n          unit: 'years'\n        };\n      } else if (fieldName === 'maternal_age') {\n        formField = {\n          ...formField,\n          type: 'number',\n          min: 15,\n          max: 50,\n          unit: 'years'\n        };\n      } else if (fieldName === 'gestational_age') {\n        formField = {\n          ...formField,\n          type: 'number',\n          min: 20,\n          max: 42,\n          unit: 'weeks'\n        };\n      } else if (fieldName === 'systolic_bp' || fieldName === 'resting_bp') {\n        formField = {\n          ...formField,\n          type: 'number',\n          min: 80,\n          max: 200,\n          unit: 'mmHg'\n        };\n      } else if (fieldName === 'diastolic_bp') {\n        formField = {\n          ...formField,\n          type: 'number',\n          min: 50,\n          max: 120,\n          unit: 'mmHg'\n        };\n      } else if (fieldName === 'cholesterol' || fieldName === 'total_cholesterol') {\n        formField = {\n          ...formField,\n          type: 'number',\n          min: 100,\n          max: 400,\n          unit: 'mg/dL'\n        };\n      } else if (fieldName === 'bmi') {\n        formField = {\n          ...formField,\n          type: 'number',\n          min: 15,\n          max: 50,\n          step: 0.1,\n          unit: 'kg/mÂ²'\n        };\n      } else if (fieldName === 'smoking_status') {\n        formField = {\n          ...formField,\n          type: 'select',\n          options: ['Never smoked', 'Former smoker', 'Current smoker']\n        };\n      } else if (fieldName === 'chest_pain_type') {\n        formField = {\n          ...formField,\n          type: 'select',\n          options: ['Typical angina', 'Atypical angina', 'Non-anginal pain', 'Asymptomatic']\n        };\n      } else if (fieldName === 'resting_ecg') {\n        formField = {\n          ...formField,\n          type: 'select',\n          options: ['Normal', 'ST-T wave abnormality', 'Left ventricular hypertrophy']\n        };\n      } else if (fieldName === 'work_type') {\n        formField = {\n          ...formField,\n          type: 'select',\n          options: ['Private', 'Self-employed', 'Government', 'Never worked']\n        };\n      } else if (fieldName === 'residence_type') {\n        formField = {\n          ...formField,\n          type: 'select',\n          options: ['Urban', 'Rural']\n        };\n      } else if (fieldName === 'gender' || fieldName === 'sex') {\n        formField = {\n          ...formField,\n          type: 'select',\n          options: ['Female', 'Male']\n        };\n      } else if (\n        // Only apply Yes/No for fields that explicitly mention yes/no in description\n        description.includes('1 = yes, 0 = no') ||\n        description.includes('1 = Yes, 0 = No') ||\n        description.includes('(1 = yes, 0 = no)') ||\n        description.includes('(1 = Yes, 0 = No)') ||\n        (description && description.toLowerCase().includes('yes') && description.toLowerCase().includes('no')) ||\n        // Specific boolean fields that should be Yes/No\n        (fieldType === 'int' && (\n          fieldName === 'hypertension' ||\n          fieldName === 'diabetes' ||\n          fieldName === 'heart_disease' ||\n          fieldName === 'smoking' ||\n          fieldName.startsWith('family_history') ||\n          fieldName === 'chronic_hypertension' ||\n          fieldName === 'diabetes_pre_pregnancy' ||\n          fieldName === 'multiple_pregnancy' ||\n          fieldName === 'previous_complications' ||\n          fieldName === 'previous_cancer' ||\n          fieldName === 'ever_married' ||\n          fieldName === 'fasting_bs' ||\n          fieldName === 'exercise_angina'\n        ))\n      ) {\n        formField = {\n          ...formField,\n          type: 'select',\n          options: ['No', 'Yes']\n        };\n      } else if (description.includes('0-') && description.includes('scale')) {\n        const match = description.match(/0-(\\d+)/);\n        if (match) {\n          formField = {\n            ...formField,\n            type: 'number',\n            min: 0,\n            max: parseInt(match[1])\n          };\n        }\n      }\n\n      fields.push(formField);\n    });\n\n    return fields;\n  };\n\n\n  const predictorData = useMemo(() => ({\n    heart_disease: {\n      id: 'heart_disease',\n      name: 'Heart Disease Predictor',\n      description: 'Predict cardiovascular disease risk using key health indicators',\n      category: 'Health Assessment',\n      icon: Heart,\n      difficulty: 'Medium',\n      estimatedTime: '5-10 min',\n      accuracy: '85%',\n      fields: [\n        { name: 'age', label: 'Age', type: 'number', required: true, min: 18, max: 120, unit: 'years' },\n        { name: 'sex', label: 'Gender', type: 'select', required: true, options: ['Female', 'Male'] },\n        { name: 'cholesterol', label: 'Total Cholesterol', type: 'number', required: true, min: 100, max: 400, unit: 'mg/dL' },\n        { name: 'systolic_bp', label: 'Systolic Blood Pressure', type: 'number', required: true, min: 80, max: 200, unit: 'mmHg' },\n        { name: 'smoking', label: 'Current Smoking Status', type: 'select', required: true, options: ['No', 'Yes'] },\n        { name: 'diabetes', label: 'Diabetes Diagnosis', type: 'select', required: true, options: ['No', 'Yes'] }\n      ]\n    },\n    diabetes: {\n      id: 'diabetes',\n      name: 'Diabetes Risk Predictor',\n      description: 'Predict Type 2 diabetes risk using glucose levels, BMI, and lifestyle factors',\n      category: 'Health Assessment',\n      icon: Activity,\n      difficulty: 'Medium',\n      estimatedTime: '5-7 min',\n      accuracy: '87%',\n      fields: [\n        { name: 'age', label: 'Age', type: 'number', required: true, min: 18, max: 120, unit: 'years' },\n        { name: 'gender', label: 'Gender', type: 'select', required: true, options: ['Female', 'Male'] },\n        { name: 'bmi', label: 'Body Mass Index', type: 'number', required: true, min: 15, max: 50, step: 0.1, unit: 'kg/mÂ²' },\n        { name: 'glucose', label: 'Glucose Level', type: 'number', required: true, min: 70, max: 300, unit: 'mg/dL' },\n        { name: 'blood_pressure', label: 'Blood Pressure', type: 'number', required: true, min: 80, max: 200, unit: 'mmHg' },\n        { name: 'skin_thickness', label: 'Skin Thickness', type: 'number', required: true, min: 0, max: 100, unit: 'mm' },\n        { name: 'insulin', label: 'Insulin Level', type: 'number', required: true, min: 0, max: 300, unit: 'Î¼U/mL' },\n        { name: 'diabetes_pedigree_function', label: 'Diabetes Pedigree Function', type: 'number', required: true, min: 0, max: 2, step: 0.01 },\n        { name: 'pregnancies', label: 'Number of Pregnancies', type: 'number', required: true, min: 0, max: 20 }\n      ]\n    },\n    anemia: {\n      id: 'anemia',\n      name: 'Anemia Predictor',\n      description: 'Detect various types of anemia using comprehensive blood test analysis',\n      category: 'Health Assessment',\n      icon: Stethoscope,\n      difficulty: 'Easy',\n      estimatedTime: '3-5 min',\n      accuracy: '92%',\n      fields: [\n        { name: 'age', label: 'Age', type: 'number', required: true, min: 18, max: 120, unit: 'years' },\n        { name: 'gender', label: 'Gender', type: 'select', required: true, options: ['Female', 'Male'] },\n        { name: 'hemoglobin', label: 'Hemoglobin Level', type: 'number', required: true, min: 5, max: 20, step: 0.1, unit: 'g/dL' },\n        { name: 'hematocrit', label: 'Hematocrit', type: 'number', required: true, min: 15, max: 60, step: 0.1, unit: '%' },\n        { name: 'mcv', label: 'Mean Corpuscular Volume', type: 'number', required: true, min: 60, max: 120, unit: 'fL' },\n        { name: 'mch', label: 'Mean Corpuscular Hemoglobin', type: 'number', required: true, min: 20, max: 40, step: 0.1, unit: 'pg' },\n        { name: 'mchc', label: 'Mean Corpuscular Hemoglobin Concentration', type: 'number', required: true, min: 25, max: 40, step: 0.1, unit: 'g/dL' },\n        { name: 'fatigue', label: 'Fatigue Level', type: 'number', required: true, min: 0, max: 10 },\n        { name: 'shortness_of_breath', label: 'Shortness of Breath', type: 'select', required: true, options: ['No', 'Yes'] },\n        { name: 'cold_hands_feet', label: 'Cold Hands and Feet', type: 'select', required: true, options: ['No', 'Yes'] }\n      ]\n    },\n    sepsis: {\n      id: 'sepsis',\n      name: 'Sepsis Predictor',\n      description: 'Early sepsis detection in hospital settings - a life-saving diagnostic tool.',\n      category: 'Health Assessment',\n      icon: Activity,\n      difficulty: 'Advanced',\n      estimatedTime: '3-5 min',\n      accuracy: '96%',\n      fields: [\n        { name: 'age', label: 'Age', type: 'number', required: true, min: 18, max: 120, unit: 'years' },\n        { name: 'gender', label: 'Gender', type: 'select', required: true, options: ['Female', 'Male'] },\n        { name: 'temperature', label: 'Body Temperature', type: 'number', required: true, min: 95, max: 110, step: 0.1, unit: 'Â°F' },\n        { name: 'heart_rate', label: 'Heart Rate', type: 'number', required: true, min: 40, max: 200, unit: 'bpm' },\n        { name: 'respiratory_rate', label: 'Respiratory Rate', type: 'number', required: true, min: 10, max: 40, unit: '/min' },\n        { name: 'white_blood_cells', label: 'White Blood Cell Count', type: 'number', required: true, min: 1000, max: 50000, unit: '/Î¼L' },\n        { name: 'blood_pressure', label: 'Systolic Blood Pressure', type: 'number', required: true, min: 60, max: 200, unit: 'mmHg' }\n      ]\n    },\n    stroke_risk: {\n      id: 'stroke_risk',\n      name: 'Stroke Risk Predictor',\n      description: 'Analyze blood pressure, cholesterol, lifestyle, and family history to assess stroke risk.',\n      category: 'Health Assessment',\n      icon: Brain,\n      difficulty: 'Medium',\n      estimatedTime: '6-8 min',\n      accuracy: '92%',\n      fields: [\n        { name: 'age', label: 'Age', type: 'number', required: true, min: 18, max: 120, unit: 'years' },\n        { name: 'gender', label: 'Gender', type: 'select', required: true, options: ['Female', 'Male'] },\n        { name: 'hypertension', label: 'Hypertension', type: 'select', required: true, options: ['No', 'Yes'] },\n        { name: 'heart_disease', label: 'Heart Disease', type: 'select', required: true, options: ['No', 'Yes'] },\n        { name: 'avg_glucose_level', label: 'Average Glucose Level', type: 'number', required: true, min: 50, max: 300, unit: 'mg/dL' },\n        { name: 'bmi', label: 'Body Mass Index', type: 'number', required: true, min: 15, max: 50, step: 0.1, unit: 'kg/mÂ²' },\n        { name: 'smoking_status', label: 'Smoking Status', type: 'select', required: true, options: ['Never smoked', 'Formerly smoked', 'Currently smokes'] }\n      ]\n    },\n    obesity_risk: {\n      id: 'obesity_risk',\n      name: 'Obesity & BMI Risk Predictor',\n      description: 'Assess long-term obesity complications and metabolic health risks.',\n      category: 'Health Assessment',\n      icon: TrendingUp,\n      difficulty: 'Easy',\n      estimatedTime: '3-5 min',\n      accuracy: '87%',\n      fields: [\n        { name: 'age', label: 'Age', type: 'number', required: true, min: 18, max: 120, unit: 'years' },\n        { name: 'gender', label: 'Gender', type: 'select', required: true, options: ['Female', 'Male'] },\n        { name: 'height', label: 'Height', type: 'number', required: true, min: 100, max: 250, unit: 'cm' },\n        { name: 'weight', label: 'Weight', type: 'number', required: true, min: 30, max: 300, unit: 'kg' },\n        { name: 'physical_activity', label: 'Physical Activity Level', type: 'select', required: true, options: ['Low', 'Moderate', 'High'] },\n        { name: 'family_history_obesity', label: 'Family History of Obesity', type: 'select', required: true, options: ['No', 'Yes'] }\n      ]\n    },\n    hypertension: {\n      id: 'hypertension',\n      name: 'Hypertension Predictor',\n      description: 'Evaluate lifestyle and genetic risk factors for high blood pressure development.',\n      category: 'Health Assessment',\n      icon: Activity,\n      difficulty: 'Medium',\n      estimatedTime: '4-6 min',\n      accuracy: '89%',\n      fields: [\n        { name: 'age', label: 'Age', type: 'number', required: true, min: 18, max: 120, unit: 'years' },\n        { name: 'gender', label: 'Gender', type: 'select', required: true, options: ['Female', 'Male'] },\n        { name: 'systolic_bp', label: 'Systolic Blood Pressure', type: 'number', required: true, min: 80, max: 200, unit: 'mmHg' },\n        { name: 'diastolic_bp', label: 'Diastolic Blood Pressure', type: 'number', required: true, min: 40, max: 120, unit: 'mmHg' },\n        { name: 'bmi', label: 'Body Mass Index', type: 'number', required: true, min: 15, max: 50, step: 0.1, unit: 'kg/mÂ²' },\n        { name: 'sodium_intake', label: 'Daily Sodium Intake', type: 'number', required: true, min: 500, max: 5000, unit: 'mg' },\n        { name: 'family_history_hypertension', label: 'Family History of Hypertension', type: 'select', required: true, options: ['No', 'Yes'] }\n      ]\n    },\n    cholesterol_risk: {\n      id: 'cholesterol_risk',\n      name: 'Cholesterol Risk Predictor',\n      description: 'Assess cardiovascular risk based on cholesterol levels and lipid profile.',\n      category: 'Health Assessment',\n      icon: Heart,\n      difficulty: 'Medium',\n      estimatedTime: '4-6 min',\n      accuracy: '88%',\n      fields: [\n        { name: 'age', label: 'Age', type: 'number', required: true, min: 18, max: 120, unit: 'years' },\n        { name: 'gender', label: 'Gender', type: 'select', required: true, options: ['Female', 'Male'] },\n        { name: 'total_cholesterol', label: 'Total Cholesterol', type: 'number', required: true, min: 100, max: 400, unit: 'mg/dL' },\n        { name: 'hdl_cholesterol', label: 'HDL Cholesterol', type: 'number', required: true, min: 20, max: 100, unit: 'mg/dL' },\n        { name: 'ldl_cholesterol', label: 'LDL Cholesterol', type: 'number', required: true, min: 50, max: 300, unit: 'mg/dL' },\n        { name: 'triglycerides', label: 'Triglycerides', type: 'number', required: true, min: 50, max: 500, unit: 'mg/dL' }\n      ]\n    },\n    mental_health: {\n      id: 'mental_health',\n      name: 'Mental Health Risk Predictor',\n      description: 'Assess depression, anxiety, and stress levels using validated screening tools.',\n      category: 'Health Assessment',\n      icon: Brain,\n      difficulty: 'Medium',\n      estimatedTime: '6-8 min',\n      accuracy: '85%',\n      fields: [\n        { name: 'age', label: 'Age', type: 'number', required: true, min: 18, max: 120, unit: 'years' },\n        { name: 'gender', label: 'Gender', type: 'select', required: true, options: ['Female', 'Male'] },\n        { name: 'stress_level', label: 'Stress Level (1-10)', type: 'number', required: true, min: 1, max: 10 },\n        { name: 'sleep_hours', label: 'Average Sleep Hours', type: 'number', required: true, min: 2, max: 12, step: 0.5, unit: 'hours' },\n        { name: 'social_support', label: 'Social Support Level', type: 'select', required: true, options: ['Low', 'Moderate', 'High'] },\n        { name: 'exercise_frequency', label: 'Exercise Frequency', type: 'select', required: true, options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Daily'] }\n      ]\n    },\n    sleep_apnea: {\n      id: 'sleep_apnea',\n      name: 'Sleep Apnea Risk Predictor',\n      description: 'Identify sleep disorders and breathing interruptions during sleep.',\n      category: 'Health Assessment',\n      icon: Activity,\n      difficulty: 'Medium',\n      estimatedTime: '5-7 min',\n      accuracy: '87%',\n      fields: [\n        { name: 'age', label: 'Age', type: 'number', required: true, min: 18, max: 120, unit: 'years' },\n        { name: 'gender', label: 'Gender', type: 'select', required: true, options: ['Female', 'Male'] },\n        { name: 'bmi', label: 'Body Mass Index', type: 'number', required: true, min: 15, max: 50, step: 0.1, unit: 'kg/mÂ²' },\n        { name: 'neck_circumference', label: 'Neck Circumference', type: 'number', required: true, min: 25, max: 60, unit: 'cm' },\n        { name: 'snoring_frequency', label: 'Snoring Frequency', type: 'select', required: true, options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Always'] },\n        { name: 'daytime_sleepiness', label: 'Daytime Sleepiness', type: 'select', required: true, options: ['Never', 'Rarely', 'Sometimes', 'Often', 'Always'] }\n      ]\n    },\n    covid_risk: {\n      id: 'covid_risk',\n      name: 'COVID-19 Risk Predictor',\n      description: 'Assess COVID-19 severity risk based on health conditions and demographics.',\n      category: 'Health Assessment',\n      icon: Shield,\n      difficulty: 'Easy',\n      estimatedTime: '3-5 min',\n      accuracy: '83%',\n      fields: [\n        { name: 'age', label: 'Age', type: 'number', required: true, min: 18, max: 120, unit: 'years' },\n        { name: 'gender', label: 'Gender', type: 'select', required: true, options: ['Female', 'Male'] },\n        { name: 'chronic_conditions', label: 'Number of Chronic Conditions', type: 'number', required: true, min: 0, max: 10 },\n        { name: 'vaccination_status', label: 'Vaccination Status', type: 'select', required: true, options: ['Unvaccinated', 'Partially Vaccinated', 'Fully Vaccinated', 'Boosted'] },\n        { name: 'smoking_status', label: 'Smoking Status', type: 'select', required: true, options: ['Never', 'Former', 'Current'] }\n      ]\n    }\n  }), []);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  useEffect(() => {\n    const fetchPredictorFields = async () => {\n      if (!predictorId) return;\n      \n      setIsLoadingFields(true);\n      setError(null);\n      \n      try {\n        // Check if we're in static mode\n        if (isStaticMode()) {\n          // Use hardcoded data for static mode\n          if (predictorData[predictorId]) {\n            setPredictor(predictorData[predictorId]);\n            const initialData: Record<string, any> = {};\n            predictorData[predictorId].fields.forEach(field => {\n              initialData[field.name] = getDefaultExampleValue(field.name, field);\n            });\n            setFormData(initialData);\n            \n            // Calculate initial form progress\n            const filledFields = Object.values(initialData).filter(val => \n              val !== '' && val !== null && val !== undefined\n            ).length;\n            setFormProgress((filledFields / (predictorData[predictorId]?.fields?.length || 1)) * 100);\n          } else {\n            throw new Error('Predictor not found in static mode');\n          }\n        } else {\n          // Fetch field definitions from backend\n          const response = await fetch(buildApiUrl(API_ENDPOINTS.PREDICTOR_FIELDS(predictorId)));\n          if (!response.ok) {\n            throw new Error(`Failed to fetch predictor fields: ${response.statusText}`);\n          }\n          \n          const backendInfo: BackendFieldInfo = await response.json();\n          setBackendFields(backendInfo);\n          \n          // Convert backend fields to frontend form fields\n          const formFields = convertBackendFieldsToFormFields(backendInfo);\n          \n          // Create predictor info with dynamic fields\n          const predictorInfo: PredictorInfo = {\n            id: predictorId,\n            name: backendInfo.name,\n            description: backendInfo.description,\n            category: 'Health Assessment',\n            icon: Heart, // Default icon\n            difficulty: 'Medium',\n            estimatedTime: '5-10 min',\n            accuracy: '85%',\n            fields: formFields\n          };\n          \n          setPredictor(predictorInfo);\n          \n          // Initialize form data with example values\n          const initialData: Record<string, any> = {};\n          formFields.forEach(field => {\n            initialData[field.name] = getDefaultExampleValue(field.name, field);\n          });\n          setFormData(initialData);\n          \n          // Calculate initial form progress\n          const filledFields = Object.values(initialData).filter(val => \n            val !== '' && val !== null && val !== undefined\n          ).length;\n          setFormProgress((filledFields / (formFields?.length || 1)) * 100);\n        }\n        \n      } catch (err) {\n        console.error('Error fetching predictor fields:', err);\n        setError(err instanceof Error ? err.message : 'Failed to load predictor');\n        \n        // Fallback to hardcoded data if available\n        if (predictorData[predictorId]) {\n          setPredictor(predictorData[predictorId]);\n          const initialData: Record<string, any> = {};\n          predictorData[predictorId].fields.forEach(field => {\n            initialData[field.name] = getDefaultExampleValue(field.name, field);\n          });\n          setFormData(initialData);\n          \n          // Calculate initial form progress\n          const filledFields = Object.values(initialData).filter(val => \n            val !== '' && val !== null && val !== undefined\n          ).length;\n          setFormProgress((filledFields / (predictorData[predictorId]?.fields?.length || 1)) * 100);\n        }\n      } finally {\n        setIsLoadingFields(false);\n      }\n    };\n    \n    fetchPredictorFields();\n  }, [predictorId, predictorData]);\n\n  const validateField = (field: FormField, value: any): string | null => {\n    // Required field validation\n    if (field.required && (value === '' || value === null || value === undefined)) {\n      return `${field.label} is required`;\n    }\n\n    // Number field validation\n    if (field.type === 'number' && value !== '' && value !== null && value !== undefined) {\n      const numValue = parseFloat(value);\n      if (isNaN(numValue)) {\n        return `${field.label} must be a valid number`;\n      }\n      if (field.min !== undefined && numValue < field.min) {\n        return `${field.label} must be at least ${field.min}`;\n      }\n      if (field.max !== undefined && numValue > field.max) {\n        return `${field.label} must be no more than ${field.max}`;\n      }\n    }\n\n    // Age-specific validation\n    if (field.name === 'age' && (value !== null && value !== undefined && value !== '')) {\n      const age = parseFloat(value);\n      if (!isNaN(age) && (age < 0 || age > 150)) {\n        return 'Please enter a valid age between 0 and 150';\n      }\n    }\n\n    // Blood pressure validation\n    if ((field.name.includes('bp') || field.name.includes('blood_pressure')) && (value !== null && value !== undefined && value !== '')) {\n      const bp = parseFloat(value);\n      if (!isNaN(bp) && (bp < 50 || bp > 300)) {\n        return 'Please enter a realistic blood pressure value';\n      }\n    }\n\n    return null;\n  };\n\n  const handleInputChange = (name: string, value: any) => {\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    // Validate field in real-time\n    const field = predictor?.fields.find(f => f.name === name);\n    if (field) {\n      const error = validateField(field, value);\n      setFieldErrors(prev => ({\n        ...prev,\n        [name]: error || ''\n      }));\n    }\n    \n    // Update form progress\n    const filledFields = Object.values({ ...formData, [name]: value }).filter(val => \n      val !== '' && val !== null && val !== undefined\n    ).length;\n    const totalFields = predictor?.fields?.length || 1;\n    setFormProgress((filledFields / totalFields) * 100);\n  };\n\n  // Helper function to get appropriate icon for field\n  const getFieldIcon = (fieldName: string) => {\n    const iconMap: Record<string, React.ReactNode> = {\n      age: <Calendar className=\"h-4 w-4 text-gray-500\" />,\n      sex: <User className=\"h-4 w-4 text-gray-500\" />,\n      gender: <User className=\"h-4 w-4 text-gray-500\" />,\n      chest_pain_type: <Heart className=\"h-4 w-4 text-gray-500\" />,\n      resting_bp: <Activity className=\"h-4 w-4 text-gray-500\" />,\n      cholesterol: <Droplets className=\"h-4 w-4 text-gray-500\" />,\n      fasting_bs: <Droplets className=\"h-4 w-4 text-gray-500\" />,\n      resting_ecg: <Zap className=\"h-4 w-4 text-gray-500\" />,\n      max_hr: <Heart className=\"h-4 w-4 text-gray-500\" />,\n      exercise_angina: <Activity className=\"h-4 w-4 text-gray-500\" />,\n      oldpeak: <TrendingUp className=\"h-4 w-4 text-gray-500\" />,\n      st_slope: <TrendingUp className=\"h-4 w-4 text-gray-500\" />,\n      bmi: <Scale className=\"h-4 w-4 text-gray-500\" />,\n      temperature: <Thermometer className=\"h-4 w-4 text-gray-500\" />,\n      blood_pressure: <Stethoscope className=\"h-4 w-4 text-gray-500\" />,\n      mental_health: <Brain className=\"h-4 w-4 text-gray-500\" />\n    };\n    \n    return iconMap[fieldName] || <Activity className=\"h-4 w-4 text-gray-500\" />;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!predictor || !backendFields) return;\n\n    // Validate all fields before submission\n    const errors: Record<string, string> = {};\n    predictor?.fields?.forEach(field => {\n      const value = formData[field.name];\n      const error = validateField(field, value);\n      if (error) {\n        errors[field.name] = error;\n      }\n    });\n    \n    setFieldErrors(errors);\n    \n    // Don't submit if there are validation errors\n    if (Object.keys(errors).length > 0) {\n      setError('Please fix the validation errors before submitting.');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Convert form data to backend format\n      const backendData: Record<string, any> = {};\n      \n      Object.entries(formData).forEach(([fieldName, value]) => {\n        // Map frontend field names to backend field names\n        const backendFieldName = getBackendFieldName(fieldName, predictor.id);\n        const fieldType = backendFields.required_fields[backendFieldName];\n        \n        if (value === '' || value === null || value === undefined) {\n          return; // Skip empty values\n        }\n        \n        // Convert values based on backend field type\n        if (fieldType === 'int') {\n          if (fieldName === 'gender' || backendFieldName === 'sex' || backendFieldName === 'gender') {\n            // Convert gender: Female = 0, Male = 1\n            backendData[backendFieldName] = value === 'Male' || value === 1 ? 1 : 0;\n          } else if (fieldName === 'chest_pain_type') {\n            // Convert chest pain type to numeric\n            const mapping = { 'Typical angina': 0, 'Atypical angina': 1, 'Non-anginal pain': 2, 'Asymptomatic': 3 };\n            backendData[backendFieldName] = mapping[value as string] || 0;\n          } else if (fieldName === 'resting_ecg') {\n            // Convert ECG results to numeric\n            const mapping = { 'Normal': 0, 'ST-T wave abnormality': 1, 'Left ventricular hypertrophy': 2 };\n            backendData[backendFieldName] = mapping[value as string] || 0;\n          } else if (fieldName === 'smoking_status') {\n            // Convert smoking status to numeric\n            const mapping = { 'Never smoked': 0, 'Former smoker': 1, 'Current smoker': 2 };\n            backendData[backendFieldName] = mapping[value as string] || 0;\n          } else if (fieldName === 'work_type') {\n            // Convert work type to numeric\n            const mapping = { 'Private': 0, 'Self-employed': 1, 'Government': 2, 'Never worked': 4 };\n            backendData[backendFieldName] = mapping[value as string] || 0;\n          } else if (fieldName === 'residence_type') {\n            // Convert residence type to numeric\n            backendData[backendFieldName] = value === 'Urban' ? 1 : 0;\n          } else if (typeof value === 'string' && (value === 'Yes' || value === 'No')) {\n            // Convert Yes/No to 1/0\n            backendData[backendFieldName] = value === 'Yes' ? 1 : 0;\n          } else {\n            backendData[backendFieldName] = value !== null && value !== undefined && value !== '' ? parseInt(value.toString()) : 0;\n          }\n        } else if (fieldType === 'float') {\n          backendData[backendFieldName] = value !== null && value !== undefined && value !== '' ? parseFloat(value.toString()) : 0.0;\n        } else {\n          backendData[backendFieldName] = value;\n        }\n      });\n\n      console.log('Sending data to backend:', backendData);\n\n      // Check if we're in static mode (no backend)\nconst isStaticMode = (import.meta as any).env?.REACT_APP_STATIC_MODE === 'true';\n      \n      if (isStaticMode) {\n        // Use mock data for static deployment\n        await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate API delay\n        \n        const mockResult = {\n          risk_score: Math.random() * 100,\n          risk_level: ['Low', 'Medium', 'High'][Math.floor(Math.random() * 3)],\n          confidence: 85 + Math.random() * 10,\n          recommendations: [\n            'Maintain a balanced diet rich in fruits and vegetables',\n            'Exercise regularly for at least 30 minutes daily',\n            'Monitor your health metrics regularly',\n            'Consult with healthcare professionals for personalized advice'\n          ],\n          analysis: 'This is a demonstration using mock data. In a real deployment with backend, you would receive personalized health predictions based on your input data.'\n        };\n        \n        setResult({\n          risk_level: mockResult.risk_level as 'Low' | 'Medium' | 'High' | 'Critical',\n          risk_score: mockResult.risk_score,\n          confidence: mockResult.confidence,\n          recommendations: mockResult.recommendations,\n          risk_factors: [],\n          explanation: mockResult.analysis || ''\n        });\n        setCurrentStep(1);\n      } else {\n        // Original API call logic for when backend is available\n        const response = await axios.post(buildApiUrl(API_ENDPOINTS.PREDICT), {\n          predictor_type: predictor.id,\n          data: backendData,\n          include_analysis: true\n        });\n        setResult(response.data);\n        setCurrentStep(1);\n      }\n    } catch (err: any) {\n      console.error('Prediction error:', err);\n      setError(err.response?.data?.error || 'An error occurred while making the prediction.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getRiskColor = (riskLevel: string) => {\n    switch (riskLevel) {\n      case 'Low': return 'text-green-600 dark:text-green-400 bg-green-100 dark:bg-green-900/30';\n      case 'Medium': return 'text-yellow-600 dark:text-yellow-400 bg-yellow-100 dark:bg-yellow-900/30';\n      case 'Moderate': return 'text-yellow-600 dark:text-yellow-400 bg-yellow-100 dark:bg-yellow-900/30';\n      case 'High': return 'text-orange-600 dark:text-orange-400 bg-orange-100 dark:bg-orange-900/30';\n      case 'Very High': return 'text-red-600 dark:text-red-400 bg-red-100 dark:bg-red-900/30';\n      case 'Critical': return 'text-red-600 dark:text-red-400 bg-red-100 dark:bg-red-900/30';\n      default: return 'text-gray-600 dark:text-gray-400 bg-gray-100 dark:bg-gray-800';\n    }\n  };\n\n  const getRiskIcon = (riskLevel: string) => {\n    switch (riskLevel) {\n      case 'Low': return CheckCircle;\n      case 'Medium': return Info;\n      case 'Moderate': return Info;\n      case 'High': return AlertTriangle;\n      case 'Very High': return AlertTriangle;\n      case 'Critical': return AlertTriangle;\n      default: return Info;\n    }\n  };\n\n  const handleDownloadPDF = async () => {\n    if (!result || !predictor) return;\n    \n    // Check if we're in static mode (no backend)\n    const isStaticMode = (import.meta as any).env.VITE_STATIC_MODE === 'true';\n    \n    if (isStaticMode) {\n      // Show message that PDF download is not available in static mode\n      setError('PDF download is not available in static demo mode. This feature requires a backend server.');\n      return;\n    }\n    \n    setIsDownloadingPDF(true);\n    try {\n      const response = await fetch(buildApiUrl(API_ENDPOINTS.DOWNLOAD_REPORT), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          prediction_data: {\n            predictor_type: predictor.id,\n            risk_score: result.risk_score,\n            risk_level: result.risk_level,\n            confidence: result.confidence,\n            recommendations: result.recommendations\n          },\n          user_data: formData\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to generate PDF report');\n      }\n      \n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `${predictor.id}_health_report_${new Date().toISOString().split('T')[0]}.pdf`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('PDF download error:', error);\n      setError('Failed to download PDF report. Please try again.');\n    } finally {\n      setIsDownloadingPDF(false);\n    }\n  };\n\n  const renderField = (field: FormField) => {\n    // Use default value if formData is empty or undefined\n    const defaultValue = getDefaultExampleValue(field.name, field);\n    const value = formData[field.name] !== undefined && formData[field.name] !== '' ? formData[field.name] : defaultValue;\n    const fieldError = fieldErrors[field.name];\n    const hasError = !!fieldError;\n\n    switch (field.type) {\n      case 'number':\n        const numValue = (value !== null && value !== undefined && value !== '') ? parseFloat(value) : (field.min || 0);\n        const showSlider = field.min !== undefined && field.max !== undefined && (field.max - field.min) <= 200;\n        \n        return (\n          <div key={field.name} className=\"form-group\">\n            <label className=\"form-label flex items-center gap-2\">\n              <span className=\"flex items-center gap-1\">\n                {getFieldIcon(field.name)}\n                {field.label}\n                {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n              </span>\n              {field.description && (\n                <div className=\"relative group\">\n                  <HelpCircle className=\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\" />\n                  <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                    {field.description}\n                  </div>\n                </div>\n              )}\n            </label>\n            \n            {showSlider ? (\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center gap-4\">\n                  <input\n                    type=\"range\"\n                    value={numValue}\n                    onChange={(e) => handleInputChange(field.name, e.target.value !== '' ? parseFloat(e.target.value) : (field.min || 0))}\n                    min={field.min}\n                    max={field.max}\n                    step={field.step || 1}\n                    className=\"flex-1 h-2 bg-gray-200 dark:bg-gray-700 rounded-lg appearance-none cursor-pointer slider\"\n                    style={{\n                      background: `linear-gradient(to right, #3b82f6 0%, #3b82f6 ${((numValue - (field.min || 0)) / ((field.max || 100) - (field.min || 0))) * 100}%, #e5e7eb ${((numValue - (field.min || 0)) / ((field.max || 100) - (field.min || 0))) * 100}%, #e5e7eb 100%)`\n                    }}\n                  />\n                  <div className=\"min-w-[80px] px-3 py-2 bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-lg text-sm font-medium text-blue-700 dark:text-blue-300 text-center\">\n                    {numValue}{field.unit && ` ${field.unit}`}\n                  </div>\n                </div>\n                <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400\">\n                  <span>{field.min}{field.unit && ` ${field.unit}`}</span>\n                  <span>{field.max}{field.unit && ` ${field.unit}`}</span>\n                </div>\n              </div>\n            ) : (\n              <div className=\"relative\">\n                <input\n                  type=\"number\"\n                  value={numValue}\n                  onChange={(e) => handleInputChange(field.name, e.target.value !== '' ? parseFloat(e.target.value) : '')}\n                  min={field.min}\n                  max={field.max}\n                  step={field.step || 1}\n                  required={field.required}\n                  className={`input pr-12 ${hasError ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : 'border-gray-300 focus:border-blue-500 focus:ring-blue-500'} transition-colors duration-200`}\n                  placeholder={`Enter ${field.label.toLowerCase()}`}\n                />\n                {field.unit && (\n                  <span className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 dark:text-gray-400 text-sm font-medium\">\n                    {field.unit}\n                  </span>\n                )}\n                {hasError && (\n                  <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                    <AlertTriangle className=\"h-4 w-4 text-red-500\" />\n                  </div>\n                )}\n              </div>\n            )}\n            \n            {hasError && (\n              <p className=\"text-sm text-red-600 mt-1 flex items-center gap-1\">\n                <AlertTriangle className=\"h-3 w-3\" />\n                {fieldError}\n              </p>\n            )}\n            {field.min !== undefined && field.max !== undefined && !showSlider && (\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                Range: {field.min} - {field.max} {field.unit}\n              </p>\n            )}\n          </div>\n        );\n\n      case 'select':\n        return (\n          <div key={field.name} className=\"form-group\">\n            <label className=\"form-label flex items-center gap-2\">\n              <span className=\"flex items-center gap-1\">\n                {getFieldIcon(field.name)}\n                {field.label}\n                {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n              </span>\n              {field.description && (\n                <div className=\"relative group\">\n                  <HelpCircle className=\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\" />\n                  <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                    {field.description}\n                  </div>\n                </div>\n              )}\n            </label>\n            <div className=\"relative\">\n              <select\n                value={value}\n                onChange={(e) => handleInputChange(field.name, e.target.value)}\n                required={field.required}\n                className={`input appearance-none ${hasError ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : 'border-gray-300 focus:border-blue-500 focus:ring-blue-500'} transition-colors duration-200`}\n              >\n                <option value=\"\">Select {field.label}</option>\n                {field.options?.map(option => (\n                  <option key={option} value={option}>{option}</option>\n                ))}\n              </select>\n              <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\n              {hasError && (\n                <div className=\"absolute right-8 top-1/2 transform -translate-y-1/2\">\n                  <AlertTriangle className=\"h-4 w-4 text-red-500\" />\n                </div>\n              )}\n            </div>\n            {hasError && (\n              <p className=\"text-sm text-red-600 mt-1 flex items-center gap-1\">\n                <AlertTriangle className=\"h-3 w-3\" />\n                {fieldError}\n              </p>\n            )}\n          </div>\n        );\n\n      case 'radio':\n        return (\n          <div key={field.name} className=\"form-group\">\n            <label className=\"form-label flex items-center gap-2 mb-3\">\n              <span className=\"flex items-center gap-1\">\n                {getFieldIcon(field.name)}\n                {field.label}\n                {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n              </span>\n              {field.description && (\n                <div className=\"relative group\">\n                  <HelpCircle className=\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\" />\n                  <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                    {field.description}\n                  </div>\n                </div>\n              )}\n            </label>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n              {field.options?.map(option => (\n                <label key={option} className={`flex items-center p-3 border rounded-lg cursor-pointer transition-all duration-200 hover:bg-gray-50 dark:hover:bg-gray-800 ${\n                  value === option \n                    ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300' \n                    : 'border-gray-200 dark:border-gray-700'\n                }`}>\n                  <input\n                    type=\"radio\"\n                    name={field.name}\n                    value={option}\n                    checked={value === option}\n                    onChange={(e) => handleInputChange(field.name, e.target.value)}\n                    required={field.required}\n                    className=\"mr-3 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <span className=\"font-medium\">{option}</span>\n                </label>\n              ))}\n            </div>\n            {hasError && (\n              <p className=\"text-sm text-red-600 mt-2 flex items-center gap-1\">\n                <AlertTriangle className=\"h-3 w-3\" />\n                {fieldError}\n              </p>\n            )}\n          </div>\n        );\n\n      case 'checkbox':\n        return (\n          <div key={field.name} className=\"form-group\">\n            <div className=\"flex items-start gap-3\">\n              <div className=\"flex items-center h-5\">\n                <input\n                  type=\"checkbox\"\n                  checked={value}\n                  onChange={(e) => handleInputChange(field.name, e.target.checked)}\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded transition-colors duration-200\"\n                />\n              </div>\n              <div className=\"flex-1\">\n                <label className=\"flex items-center gap-2 cursor-pointer\">\n                  <span className=\"flex items-center gap-1\">\n                    {getFieldIcon(field.name)}\n                    {field.label}\n                    {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n                  </span>\n                  {field.description && (\n                    <div className=\"relative group\">\n                      <HelpCircle className=\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\" />\n                      <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                        {field.description}\n                      </div>\n                    </div>\n                  )}\n                </label>\n                {hasError && (\n                  <p className=\"text-sm text-red-600 mt-1 flex items-center gap-1\">\n                    <AlertTriangle className=\"h-3 w-3\" />\n                    {fieldError}\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return (\n          <div key={field.name} className=\"form-group\">\n            <label className=\"form-label flex items-center gap-2\">\n              <span className=\"flex items-center gap-1\">\n                {getFieldIcon(field.name)}\n                {field.label}\n                {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n              </span>\n              {field.description && (\n                <div className=\"relative group\">\n                  <HelpCircle className=\"h-4 w-4 text-gray-400 hover:text-gray-600 cursor-help\" />\n                  <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                    {field.description}\n                  </div>\n                </div>\n              )}\n            </label>\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                value={value}\n                onChange={(e) => handleInputChange(field.name, e.target.value)}\n                required={field.required}\n                className={`input ${hasError ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : 'border-gray-300 focus:border-blue-500 focus:ring-blue-500'} transition-colors duration-200`}\n                placeholder={`Enter ${field.label.toLowerCase()}`}\n              />\n              {hasError && (\n                <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                  <AlertTriangle className=\"h-4 w-4 text-red-500\" />\n                </div>\n              )}\n            </div>\n            {hasError && (\n              <p className=\"text-sm text-red-600 mt-1 flex items-center gap-1\">\n                <AlertTriangle className=\"h-3 w-3\" />\n                {fieldError}\n              </p>\n            )}\n          </div>\n        );\n    }\n  };\n\n  if (isLoadingFields) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center transition-colors duration-300\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 dark:border-blue-400 mx-auto mb-4\"></div>\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">Loading Predictor...</h2>\n          <p className=\"text-gray-600 dark:text-gray-300\">Fetching field definitions from server</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!predictor) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">Predictor Not Found</h2>\n          <p className=\"text-gray-600 dark:text-gray-300 mb-6\">The requested predictor could not be found.</p>\n          <Link to=\"/predictors\" className=\"btn-primary\">\n            Back to Predictors\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  const Icon = predictor.icon;\n\n  return (\n    <div className=\"min-h-screen py-8\">\n      <style>{`\n        .slider::-webkit-slider-thumb {\n          appearance: none;\n          height: 20px;\n          width: 20px;\n          border-radius: 50%;\n          background: #3b82f6;\n          cursor: pointer;\n          border: 2px solid #ffffff;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n        }\n        .slider::-moz-range-thumb {\n          height: 20px;\n          width: 20px;\n          border-radius: 50%;\n          background: #3b82f6;\n          cursor: pointer;\n          border: 2px solid #ffffff;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n        }\n        .slider:focus::-webkit-slider-thumb {\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\n        }\n        .slider:focus::-moz-range-thumb {\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\n        }\n      `}</style>\n      <div className=\"container-max section-padding\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          className=\"mb-8\"\n        >\n          <Link\n            to=\"/predictors\"\n            className=\"inline-flex items-center text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 mb-6 transition-colors duration-200\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back to Predictors\n          </Link>\n          \n          <div className=\"flex items-start space-x-6\">\n            <div className=\"w-16 h-16 bg-primary-100 dark:bg-primary-900/30 rounded-xl flex items-center justify-center\">\n              <Icon className=\"h-8 w-8 text-primary-600 dark:text-primary-400\" />\n            </div>\n            <div className=\"flex-1\">\n              <h1 className=\"text-3xl lg:text-4xl font-display font-bold text-gray-900 dark:text-white mb-2\">\n                {predictor.name}\n              </h1>\n              <p className=\"text-lg text-gray-600 dark:text-gray-300 mb-4\">{predictor.description}</p>\n              <div className=\"flex items-center space-x-6 text-sm\">\n                <div className=\"flex items-center text-gray-500 dark:text-gray-400\">\n                  <Clock className=\"h-4 w-4 mr-1\" />\n                  {predictor.estimatedTime}\n                </div>\n                <div className=\"text-green-600 dark:text-green-400 font-medium\">\n                  {predictor.accuracy} accuracy\n                </div>\n                <span className=\"px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full text-xs font-medium\">\n                  {predictor.difficulty}\n                </span>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n\n        {currentStep === 0 ? (\n          /* Form Step */\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n          >\n            <div className=\"card max-w-4xl mx-auto\">\n              {/* Form Header */}\n              <div className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">Health Assessment Form</h2>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Please review and adjust the pre-filled values below to get your personalized health assessment.\n                </p>\n              </div>\n              \n              {error && (\n                <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4 mb-6\">\n                  <div className=\"flex items-center\">\n                    <AlertTriangle className=\"h-5 w-5 text-red-600 dark:text-red-400 mr-2\" />\n                    <span className=\"text-red-800 dark:text-red-300\">{error}</span>\n                  </div>\n                </div>\n              )}\n\n              <form onSubmit={handleSubmit} className=\"space-y-8\">\n                {/* Single Inputs Section */}\n                <div className=\"space-y-8\">\n                  {/* Inputs Section */}\n                  <div className=\"pb-6\">\n                    <div className=\"flex items-center gap-2 mb-4\">\n                      <FileText className=\"h-5 w-5 text-blue-600 dark:text-blue-400\" />\n                      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Inputs</h3>\n                    </div>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\">\n                      {predictor?.fields?.map(renderField)}\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Form Actions */}\n                <div className=\"flex flex-col sm:flex-row items-center justify-between pt-8 border-t border-gray-200 dark:border-gray-700\">\n                  <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-4 sm:mb-0\">\n                    <CheckCircle className=\"h-4 w-4 mr-2 text-green-500\" />\n                    <span>Ready for assessment</span>\n                  </div>\n                  \n                  <button\n                    type=\"submit\"\n                    disabled={isLoading || formProgress < 100 || Object.values(fieldErrors).some(error => error)}\n                    className=\"btn-primary px-8 py-3 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2 min-w-[160px] justify-center transition-all duration-200 hover:shadow-lg\"\n                  >\n                    {isLoading ? (\n                      <>\n                        <Loader className=\"animate-spin h-5 w-5\" />\n                        <span>Analyzing...</span>\n                      </>\n                    ) : (\n                      <>\n                        <TrendingUp className=\"h-5 w-5\" />\n                        <span>Get Prediction</span>\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </motion.div>\n        ) : (\n          /* Results Step */\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            {result && (\n              <div className=\"max-w-4xl mx-auto space-y-6\">\n                {/* Risk Assessment */}\n                <div className=\"card\">\n                  <div className=\"flex items-center justify-between mb-6\">\n                    <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Risk Assessment</h2>\n                    <div className=\"flex space-x-2\">\n                      <button \n                        onClick={handleDownloadPDF}\n                        disabled={isDownloadingPDF}\n                        className=\"btn-outline p-2 relative\"\n                        title=\"Download PDF Report\"\n                      >\n                        {isDownloadingPDF ? (\n                          <div className=\"animate-spin h-4 w-4 border-2 border-current border-t-transparent rounded-full\" />\n                        ) : (\n                          <Download className=\"h-4 w-4\" />\n                        )}\n                      </button>\n                      <button className=\"btn-outline p-2\" title=\"Share Report\">\n                        <Share2 className=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n                    <div className=\"text-center\">\n                      <div className={`inline-flex items-center px-4 py-2 rounded-full text-lg font-semibold ${getRiskColor(result.risk_level)}`}>\n                        {React.createElement(getRiskIcon(result.risk_level), { className: 'h-5 w-5 mr-2' })}\n                        {result.risk_level} Risk\n                      </div>\n                      <p className=\"text-sm text-gray-500 mt-2\">Risk Level</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                        {Math.round(result.risk_score * 100)}%\n                      </div>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">Risk Score</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                        {Math.round(result.confidence * 100)}%\n                      </div>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">Confidence</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4\">\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">Explanation</h3>\n                    <p className=\"text-gray-700 dark:text-gray-300\">{result.explanation}</p>\n                  </div>\n                </div>\n\n                {/* Input Values Explanation */}\n                <div className=\"card\">\n                  <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center gap-2\">\n                    <FileText className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\n                    Input Values Used in Prediction\n                  </h3>\n                  <div className=\"bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-xl p-6\">\n                    <p className=\"text-gray-700 dark:text-gray-300 mb-4\">\n                      This prediction was generated using the following input values. These values represent your health profile and are used by our AI model to assess risk factors and generate personalized recommendations.\n                    </p>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                      {Object.entries(formData).filter(([key, value]) => value !== '' && value !== null && value !== undefined).map(([key, value]) => {\n                        const field = predictor?.fields?.find(f => f.name === key);\n                        const displayName = field?.label || key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n                        const unit = field?.unit || '';\n                        \n                        return (\n                          <div key={key} className=\"bg-white dark:bg-gray-800 rounded-lg p-4 border border-blue-200 dark:border-blue-700\">\n                            <div className=\"flex items-center justify-between mb-2\">\n                              <h4 className=\"font-semibold text-gray-900 dark:text-white text-sm\">{displayName}</h4>\n                              {field?.required && (\n                                <span className=\"text-xs bg-blue-100 text-blue-700 dark:bg-blue-800 dark:text-blue-200 px-2 py-1 rounded-full\">\n                                  Required\n                                </span>\n                              )}\n                            </div>\n                            <div className=\"flex items-center gap-2\">\n                              <span className=\"text-lg font-bold text-blue-600 dark:text-blue-400\">\n                                {typeof value === 'boolean' ? (value ? 'Yes' : 'No') : value}\n                              </span>\n                              {unit && <span className=\"text-sm text-gray-500 dark:text-gray-400\">{unit}</span>}\n                            </div>\n                            {field?.description && (\n                              <p className=\"text-xs text-gray-600 dark:text-gray-400 mt-2\">{field.description}</p>\n                            )}\n                          </div>\n                        );\n                      })}\n                    </div>\n                    <div className=\"mt-6 p-4 bg-blue-100 dark:bg-blue-900/30 rounded-lg\">\n                      <h4 className=\"font-semibold text-blue-900 dark:text-blue-100 mb-2 flex items-center gap-2\">\n                        <Info className=\"h-4 w-4\" />\n                        How These Values Impact Your Prediction\n                      </h4>\n                      <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n                        Our AI model analyzes these input values using advanced machine learning algorithms trained on medical data. \n                        Each value contributes to the overall risk assessment, with some factors having higher impact than others. \n                        The model considers interactions between different health parameters to provide a comprehensive prediction.\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Risk Factors */}\n                {result.risk_factors?.length > 0 && (\n                  <div className=\"card\">\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">Key Risk Factors</h3>\n                    <div className=\"space-y-2\">\n                      {result.risk_factors.map((factor, index) => (\n                        <div key={index} className=\"flex items-center p-3 bg-orange-50 dark:bg-orange-900/20 rounded-lg\">\n                          <AlertTriangle className=\"h-5 w-5 text-orange-600 dark:text-orange-400 mr-3\" />\n                          <span className=\"text-orange-800 dark:text-orange-300\">{factor}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* Recommendations */}\n                {result.recommendations?.length > 0 && (\n                  <div className=\"card\">\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">Recommendations</h3>\n                    <div className=\"space-y-3\">\n                      {result.recommendations.map((recommendation, index) => (\n                        <div key={index} className=\"flex items-start p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                          <CheckCircle className=\"h-5 w-5 text-blue-600 dark:text-blue-400 mr-3 mt-0.5\" />\n                          <span className=\"text-blue-800 dark:text-blue-300\">{recommendation}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* Contributing Factors */}\n                {result.detailed_analysis?.contributing_factors && result.detailed_analysis.contributing_factors.length > 0 && (\n                  <div className=\"card\">\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">Contributing Factors</h3>\n                    <div className=\"space-y-2\">\n                      {result.detailed_analysis.contributing_factors.map((factor, index) => (\n                        <div key={index} className=\"flex items-center p-3 bg-purple-50 dark:bg-purple-900/20 rounded-lg\">\n                          <TrendingUp className=\"h-5 w-5 text-purple-600 dark:text-purple-400 mr-3\" />\n                          <span className=\"text-purple-800 dark:text-purple-300\">{factor}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* Health Metrics */}\n                {result.detailed_analysis?.health_metrics && result.detailed_analysis.health_metrics.length > 0 && (\n                  <div className=\"card\">\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">Health Metrics Analysis</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      {result.detailed_analysis.health_metrics.map((metric, index) => (\n                        <div key={index} className=\"p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <h4 className=\"font-semibold text-green-900 dark:text-green-100\">{metric.category}</h4>\n                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                              metric.status === 'Normal' ? 'bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100' :\n                              metric.status === 'Warning' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100' :\n                              'bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100'\n                            }`}>\n                              {metric.status}\n                            </span>\n                          </div>\n                          <p className=\"text-green-700 dark:text-green-300 mb-2\">{metric.value}</p>\n                          {metric.recommendation && (\n                            <p className=\"text-sm text-green-600 dark:text-green-400\">{metric.recommendation}</p>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* Risk Score Visualization */}\n                {result.risk_score !== undefined && (\n                  <div className=\"card\">\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center gap-2\">\n                      <BarChart3 className=\"h-6 w-6 text-purple-600 dark:text-purple-400\" />\n                      Risk Assessment Overview\n                    </h3>\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                      {/* Risk Score Display */}\n                      <div className=\"bg-gradient-to-br from-purple-50 to-indigo-50 dark:from-purple-900/20 dark:to-indigo-900/20 rounded-xl p-6\">\n                        <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4 text-center\">Overall Risk Level</h4>\n                        <div className=\"flex flex-col items-center justify-center py-8\">\n                          {/* Circular Progress Chart */}\n                          <div className=\"relative w-40 h-40 mb-6\">\n                            <svg className=\"w-40 h-40 transform -rotate-90\" viewBox=\"0 0 144 144\">\n                              {/* Background circle */}\n                              <circle\n                                cx=\"72\"\n                                cy=\"72\"\n                                r=\"60\"\n                                stroke=\"currentColor\"\n                                strokeWidth=\"8\"\n                                fill=\"none\"\n                                className=\"text-gray-200 dark:text-gray-700\"\n                              />\n                              {/* Progress circle */}\n                              <circle\n                                cx=\"72\"\n                                cy=\"72\"\n                                r=\"60\"\n                                stroke=\"currentColor\"\n                                strokeWidth=\"8\"\n                                fill=\"none\"\n                                strokeDasharray={`${2 * Math.PI * 60}`}\n                                strokeDashoffset={`${2 * Math.PI * 60 * (1 - result.risk_score)}`}\n                                className={`transition-all duration-1000 ease-out ${\n                                  result.risk_score < 0.3 ? 'text-green-500' :\n                                  result.risk_score < 0.7 ? 'text-yellow-500' :\n                                  'text-red-500'\n                                }`}\n                                strokeLinecap=\"round\"\n                              />\n                            </svg>\n                            {/* Center content */}\n                            <div className=\"absolute inset-0 flex items-center justify-center\">\n                              <div className=\"text-center\">\n                                <div className={`text-3xl font-bold ${\n                                  result.risk_score < 0.3 ? 'text-green-600 dark:text-green-400' :\n                                  result.risk_score < 0.7 ? 'text-yellow-600 dark:text-yellow-400' :\n                                  'text-red-600 dark:text-red-400'\n                                }`}>\n                                  {Math.round(result.risk_score * 100)}%\n                                </div>\n                                <div className=\"text-xs text-gray-600 dark:text-gray-400 font-medium\">Risk Score</div>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <span className={`inline-flex px-4 py-2 rounded-full text-sm font-medium ${\n                            result.risk_score < 0.3 ? 'bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100' :\n                            result.risk_score < 0.7 ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100' :\n                            'bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100'\n                          }`}>\n                            {result.risk_score < 0.3 ? 'Low Risk' : result.risk_score < 0.7 ? 'Moderate Risk' : 'High Risk'}\n                          </span>\n                          \n                          {/* Risk Level Description */}\n                          <p className=\"text-center text-sm text-gray-600 dark:text-gray-400 mt-3 max-w-xs\">\n                            {result.risk_score < 0.3 \n                              ? 'Your risk level is low. Continue maintaining healthy habits.' \n                              : result.risk_score < 0.7 \n                              ? 'Your risk level is moderate. Consider lifestyle improvements.' \n                              : 'Your risk level is high. Consult with healthcare professionals.'}\n                          </p>\n                        </div>\n                      </div>\n\n                      {/* Risk Factors Breakdown */}\n                      {result.detailed_analysis?.contributing_factors && (\n                        <div className=\"bg-gradient-to-br from-blue-50 to-cyan-50 dark:from-blue-900/20 dark:to-cyan-900/20 rounded-xl p-6\">\n                          <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Key Contributing Factors</h4>\n                          <div className=\"space-y-4\">\n                            {result.detailed_analysis.contributing_factors.slice(0, 5).map((factor, index) => {\n                              // Assign different impact levels for visual variety\n                              const impactLevels = [85, 70, 60, 45, 30];\n                              const impactLevel = impactLevels[index] || 50;\n                              const colors = ['bg-red-500', 'bg-orange-500', 'bg-yellow-500', 'bg-blue-500', 'bg-green-500'];\n                              const bgColors = ['bg-red-50 dark:bg-red-900/20', 'bg-orange-50 dark:bg-orange-900/20', 'bg-yellow-50 dark:bg-yellow-900/20', 'bg-blue-50 dark:bg-blue-900/20', 'bg-green-50 dark:bg-green-900/20'];\n                              \n                              return (\n                                <div key={index} className={`p-4 ${bgColors[index]} rounded-lg border border-opacity-20`}>\n                                  <div className=\"flex items-center justify-between mb-2\">\n                                    <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">{factor}</span>\n                                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">{impactLevel}%</span>\n                                  </div>\n                                  <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                                    <div \n                                      className={`h-2 rounded-full ${colors[index]} transition-all duration-1000 ease-out`}\n                                      style={{ width: `${impactLevel}%` }}\n                                    ></div>\n                                  </div>\n                                </div>\n                              );\n                            })}\n                          </div>\n                          \n                          {/* Factor Impact Summary */}\n                          <div className=\"mt-6 p-4 bg-white dark:bg-gray-800 rounded-lg\">\n                            <h5 className=\"text-sm font-semibold text-gray-900 dark:text-white mb-3\">Impact Distribution</h5>\n                            <div className=\"flex items-center gap-4 text-xs\">\n                              <div className=\"flex items-center gap-1\">\n                                <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\n                                <span className=\"text-gray-600 dark:text-gray-400\">High Impact</span>\n                              </div>\n                              <div className=\"flex items-center gap-1\">\n                                <div className=\"w-3 h-3 bg-yellow-500 rounded-full\"></div>\n                                <span className=\"text-gray-600 dark:text-gray-400\">Moderate Impact</span>\n                              </div>\n                              <div className=\"flex items-center gap-1\">\n                                <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n                                <span className=\"text-gray-600 dark:text-gray-400\">Low Impact</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                {/* Lifestyle Impact */}\n                {result.detailed_analysis?.lifestyle_impact && Object.keys(result.detailed_analysis.lifestyle_impact).length > 0 && (\n                  <div className=\"card\">\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center gap-2\">\n                      <Activity className=\"h-6 w-6 text-indigo-600 dark:text-indigo-400\" />\n                      Lifestyle Impact Analysis\n                    </h3>\n                    \n                    {/* Lifestyle Impact Summary Chart */}\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n                      {/* Impact Overview Chart */}\n                      <div className=\"bg-gradient-to-br from-indigo-50 to-purple-50 dark:from-indigo-900/20 dark:to-purple-900/20 rounded-xl p-6\">\n                        <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Lifestyle Impact Overview</h4>\n                        <div className=\"space-y-4\">\n                          {(() => {\n                            // Filter and process lifestyle factors to show only meaningful ones\n                            const meaningfulFactors = Object.entries(result.detailed_analysis.lifestyle_impact)\n                              .filter(([key, value]) => {\n                                return key !== 'recommendations' && \n                                       value && \n                                       typeof value === 'string' && \n                                       (value as string).length > 5 && // Filter out single letters\n                                       !key.match(/^\\d+$/); // Filter out numeric keys\n                              })\n                              .slice(0, 5); // Limit to top 5 factors\n                            \n                            if (meaningfulFactors.length === 0) {\n                              return (\n                                <div className=\"text-center py-8\">\n                                  <div className=\"text-gray-500 dark:text-gray-400\">No specific lifestyle factors identified</div>\n                                </div>\n                              );\n                            }\n                            \n                            return meaningfulFactors.map(([key, value], index) => {\n                              // Determine impact level from content\n                              let impactLevel = 'Medium';\n                              let impactScore = 60;\n                              \n                              if (typeof value === 'string') {\n                                const lowerValue = (value as string).toLowerCase();\n                                if (lowerValue.includes('low') || lowerValue.includes('minimal') || lowerValue.includes('good')) {\n                                  impactLevel = 'Low';\n                                  impactScore = 25;\n                                } else if (lowerValue.includes('high') || lowerValue.includes('significant') || lowerValue.includes('severe') || lowerValue.includes('poor')) {\n                                  impactLevel = 'High';\n                                  impactScore = 85;\n                                }\n                              }\n                              \n                              const getIcon = (factorKey: string) => {\n                                const lowerKey = factorKey.toLowerCase();\n                                if (lowerKey.includes('smoking') || lowerKey.includes('tobacco')) return 'ð­';\n                                if (lowerKey.includes('diet') || lowerKey.includes('nutrition') || lowerKey.includes('food')) return 'ð¥';\n                                if (lowerKey.includes('exercise') || lowerKey.includes('activity') || lowerKey.includes('physical')) return 'ð';\n                                if (lowerKey.includes('sleep')) return 'ð´';\n                                if (lowerKey.includes('stress') || lowerKey.includes('mental')) return 'ð°';\n                                if (lowerKey.includes('alcohol') || lowerKey.includes('drink')) return 'ð·';\n                                if (lowerKey.includes('weight') || lowerKey.includes('bmi') || lowerKey.includes('obesity')) return 'âï¸';\n                                if (lowerKey.includes('blood') || lowerKey.includes('pressure')) return 'ð©¸';\n                                return 'ð';\n                              };\n                              \n                              return (\n                                <div key={index} className=\"flex items-center justify-between p-3 bg-white dark:bg-gray-800 rounded-lg\">\n                                  <div className=\"flex items-center gap-3 flex-1\">\n                                    <span className=\"text-xl\">{getIcon(key)}</span>\n                                    <div className=\"flex-1\">\n                                      <h5 className=\"font-medium text-gray-900 dark:text-white text-sm\">\n                                        {key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                                      </h5>\n                                      <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mt-1\">\n                                        <div \n                                          className={`h-2 rounded-full transition-all duration-500 ${\n                                            impactLevel === 'Low' ? 'bg-green-500' :\n                                            impactLevel === 'Medium' ? 'bg-yellow-500' : 'bg-red-500'\n                                          }`}\n                                          style={{ width: `${impactScore}%` }}\n                                        ></div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                  <span className={`px-2 py-1 rounded-full text-xs font-medium ml-3 ${\n                                    impactLevel === 'Low' ? 'bg-green-100 text-green-700 dark:bg-green-800 dark:text-green-200' :\n                                    impactLevel === 'Medium' ? 'bg-yellow-100 text-yellow-700 dark:bg-yellow-800 dark:text-yellow-200' :\n                                    'bg-red-100 text-red-700 dark:bg-red-800 dark:text-red-200'\n                                  }`}>\n                                    {impactLevel}\n                                  </span>\n                                </div>\n                              );\n                            });\n                          })()\n                          }\n                        </div>\n                      </div>\n                      \n                      {/* Risk Distribution Visualization */}\n                      <div className=\"bg-gradient-to-br from-blue-50 to-cyan-50 dark:from-blue-900/20 dark:to-cyan-900/20 rounded-xl p-6\">\n                        <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Risk Distribution</h4>\n                        <div className=\"space-y-4\">\n                          {(() => {\n                            // Create a simple risk distribution visualization\n                            const riskCategories = [\n                              { name: 'Low Risk Factors', value: 30, color: 'bg-green-500', count: 2 },\n                              { name: 'Moderate Risk Factors', value: 45, color: 'bg-yellow-500', count: 3 },\n                              { name: 'High Risk Factors', value: 25, color: 'bg-red-500', count: 1 }\n                            ];\n                            \n                            return riskCategories.map((category, index) => (\n                              <div key={index} className=\"space-y-2\">\n                                <div className=\"flex justify-between items-center\">\n                                  <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">{category.name}</span>\n                                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">{category.count} factors</span>\n                                </div>\n                                <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-3\">\n                                  <div \n                                    className={`h-3 rounded-full ${category.color} transition-all duration-700`}\n                                    style={{ width: `${category.value}%` }}\n                                  ></div>\n                                </div>\n                                <div className=\"text-right\">\n                                  <span className=\"text-xs text-gray-500 dark:text-gray-400\">{category.value}%</span>\n                                </div>\n                              </div>\n                            ));\n                          })()\n                          }\n                        </div>\n                      </div>\n                    </div>\n                      \n                    {/* Key Recommendations */}\n                    <div className=\"bg-gradient-to-r from-emerald-50 to-teal-50 dark:from-emerald-900/20 dark:to-teal-900/20 rounded-xl p-6 border border-emerald-200 dark:border-emerald-700\">\n                      <h4 className=\"font-semibold text-emerald-900 dark:text-emerald-100 mb-4 flex items-center gap-2\">\n                        <CheckCircle className=\"h-5 w-5\" />\n                        Key Health Recommendations\n                      </h4>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        {(() => {\n                          // Generate relevant recommendations based on predictor type\n                          const baseRecommendations = [\n                            \"Maintain a balanced diet rich in fruits and vegetables\",\n                            \"Engage in regular physical activity (150 minutes per week)\",\n                            \"Get adequate sleep (7-9 hours per night)\",\n                            \"Manage stress through relaxation techniques\"\n                          ];\n                          \n                          // Use actual recommendations if available, otherwise use base ones\n                          const recommendations = result.detailed_analysis.lifestyle_impact && Array.isArray(result.detailed_analysis.lifestyle_impact) && result.detailed_analysis.lifestyle_impact.length > 0\n                            ? result.detailed_analysis.lifestyle_impact.slice(0, 4).map(item => item.description || item.factor)\n                            : baseRecommendations;\n                          \n                          return recommendations.map((recommendation, recIndex) => (\n                            <div key={recIndex} className=\"flex items-start gap-3 p-4 bg-white dark:bg-gray-800 rounded-lg border border-emerald-100 dark:border-emerald-800 hover:shadow-md transition-all duration-200\">\n                              <div className=\"w-6 h-6 bg-emerald-500 text-white rounded-full flex items-center justify-center text-xs font-bold mt-0.5 flex-shrink-0\">\n                                {recIndex + 1}\n                              </div>\n                              <span className=\"text-sm text-emerald-700 dark:text-emerald-300 leading-relaxed\">{recommendation}</span>\n                            </div>\n                          ));\n                        })()\n                        }\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Actions */}\n                <div className=\"flex justify-center space-x-4\">\n                  <button\n                    onClick={() => {\n                      setCurrentStep(0);\n                      setResult(null);\n                      setError(null);\n                    }}\n                    className=\"btn-outline\"\n                  >\n                    New Assessment\n                  </button>\n                  <Link to=\"/predictors\" className=\"btn-primary\">\n                    Try Another Predictor\n                  </Link>\n                </div>\n              </div>\n            )}\n          </motion.div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PredictorDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}