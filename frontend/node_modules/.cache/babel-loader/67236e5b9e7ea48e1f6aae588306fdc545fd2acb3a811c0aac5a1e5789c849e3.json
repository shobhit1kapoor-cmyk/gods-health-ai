{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext(undefined);export const useTheme=()=>{const context=useContext(ThemeContext);if(context===undefined){throw new Error('useTheme must be used within a ThemeProvider');}return context;};export const ThemeProvider=_ref=>{let{children}=_ref;const[theme,setThemeState]=useState(()=>{// Check localStorage first\nconst savedTheme=localStorage.getItem('theme');if(savedTheme){return savedTheme;}// Check system preference\nif(window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)').matches){return'dark';}return'light';});useEffect(()=>{// Apply theme to document\nconst root=document.documentElement;if(theme==='dark'){root.classList.add('dark');}else{root.classList.remove('dark');}// Save to localStorage\nlocalStorage.setItem('theme',theme);},[theme]);const toggleTheme=()=>{setThemeState(prevTheme=>prevTheme==='light'?'dark':'light');};const setTheme=newTheme=>{setThemeState(newTheme);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme,toggleTheme,setTheme},children:children});};export default ThemeContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","undefined","useTheme","context","Error","ThemeProvider","_ref","children","theme","setThemeState","savedTheme","localStorage","getItem","window","matchMedia","matches","root","document","documentElement","classList","add","remove","setItem","toggleTheme","prevTheme","setTheme","newTheme","Provider","value"],"sources":["C:/Users/kapoo/OneDrive/Desktop/Gods Health AI/frontend/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n  setTheme: (theme: Theme) => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  const [theme, setThemeState] = useState<Theme>(() => {\n    // Check localStorage first\n    const savedTheme = localStorage.getItem('theme') as Theme;\n    if (savedTheme) {\n      return savedTheme;\n    }\n    \n    // Check system preference\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return 'dark';\n    }\n    \n    return 'light';\n  });\n\n  useEffect(() => {\n    // Apply theme to document\n    const root = document.documentElement;\n    if (theme === 'dark') {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n    \n    // Save to localStorage\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  const toggleTheme = () => {\n    setThemeState(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n\n  const setTheme = (newTheme: Theme) => {\n    setThemeState(newTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContext;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAUzF,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAA+BO,SAAS,CAAC,CAE3E,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACK,YAAY,CAAC,CACxC,GAAIG,OAAO,GAAKF,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAG,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAMD,MAAO,MAAM,CAAAE,aAA2C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtE,KAAM,CAACE,KAAK,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAQ,IAAM,CACnD;AACA,KAAM,CAAAc,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAU,CACzD,GAAIF,UAAU,CAAE,CACd,MAAO,CAAAA,UAAU,CACnB,CAEA;AACA,GAAIG,MAAM,CAACC,UAAU,EAAID,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,CAAE,CAClF,MAAO,MAAM,CACf,CAEA,MAAO,OAAO,CAChB,CAAC,CAAC,CAEFlB,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAmB,IAAI,CAAGC,QAAQ,CAACC,eAAe,CACrC,GAAIV,KAAK,GAAK,MAAM,CAAE,CACpBQ,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC,CAC5B,CAAC,IAAM,CACLJ,IAAI,CAACG,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC,CAC/B,CAEA;AACAV,YAAY,CAACW,OAAO,CAAC,OAAO,CAAEd,KAAK,CAAC,CACtC,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAe,WAAW,CAAGA,CAAA,GAAM,CACxBd,aAAa,CAACe,SAAS,EAAIA,SAAS,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CAAC,CACtE,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAIC,QAAe,EAAK,CACpCjB,aAAa,CAACiB,QAAQ,CAAC,CACzB,CAAC,CAED,mBACE3B,IAAA,CAACC,YAAY,CAAC2B,QAAQ,EAACC,KAAK,CAAE,CAAEpB,KAAK,CAAEe,WAAW,CAAEE,QAAS,CAAE,CAAAlB,QAAA,CAC5DA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED,cAAe,CAAAP,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}